// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto2test/src/test/protobuf/schemas.proto

package me.lyh.protobuf.generic.proto2;

public final class Schemas {
  private Schemas() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registry.add(me.lyh.protobuf.generic.proto2.Schemas.myMessageOption);
    registry.add(me.lyh.protobuf.generic.proto2.Schemas.myFieldOption);
    registry.add(me.lyh.protobuf.generic.proto2.Schemas.myFieldOptionStr);
    registry.add(me.lyh.protobuf.generic.proto2.Schemas.myEnumOption);
    registry.add(me.lyh.protobuf.generic.proto2.Schemas.myEnumValueOption);
  }
  /**
   * Protobuf enum {@code me.lyh.protobuf.generic.proto2.Color}
   */
  public enum Color
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BLACK = 0;</code>
     */
    BLACK(0, 0),
    /**
     * <code>WHITE = 1;</code>
     */
    WHITE(1, 1),
    /**
     * <code>GREEN = 2;</code>
     */
    GREEN(2, 2),
    ;

    /**
     * <code>BLACK = 0;</code>
     */
    public static final int BLACK_VALUE = 0;
    /**
     * <code>WHITE = 1;</code>
     */
    public static final int WHITE_VALUE = 1;
    /**
     * <code>GREEN = 2;</code>
     */
    public static final int GREEN_VALUE = 2;


    public final int getNumber() { return value; }

    public static Color valueOf(int value) {
      switch (value) {
        case 0: return BLACK;
        case 1: return WHITE;
        case 2: return GREEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Color>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Color>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Color>() {
            public Color findValueByNumber(int number) {
              return Color.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return me.lyh.protobuf.generic.proto2.Schemas.getDescriptor().getEnumTypes().get(0);
    }

    private static final Color[] VALUES = values();

    public static Color valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Color(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:me.lyh.protobuf.generic.proto2.Color)
  }

  /**
   * Protobuf enum {@code me.lyh.protobuf.generic.proto2.STATE}
   */
  public enum STATE
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>START = 1;</code>
     */
    START(0, 1),
    /**
     * <code>STOP = 2;</code>
     */
    STOP(1, 2),
    ;

    /**
     * <code>START = 1;</code>
     */
    public static final int START_VALUE = 1;
    /**
     * <code>STOP = 2;</code>
     */
    public static final int STOP_VALUE = 2;


    public final int getNumber() { return value; }

    public static STATE valueOf(int value) {
      switch (value) {
        case 1: return START;
        case 2: return STOP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<STATE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<STATE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<STATE>() {
            public STATE findValueByNumber(int number) {
              return STATE.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return me.lyh.protobuf.generic.proto2.Schemas.getDescriptor().getEnumTypes().get(1);
    }

    private static final STATE[] VALUES = values();

    public static STATE valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private STATE(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:me.lyh.protobuf.generic.proto2.STATE)
  }

  public interface RequiredOrBuilder extends
      // @@protoc_insertion_point(interface_extends:me.lyh.protobuf.generic.proto2.Required)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required double double_field = 1;</code>
     */
    boolean hasDoubleField();
    /**
     * <code>required double double_field = 1;</code>
     */
    double getDoubleField();

    /**
     * <code>required float float_field = 2;</code>
     */
    boolean hasFloatField();
    /**
     * <code>required float float_field = 2;</code>
     */
    float getFloatField();

    /**
     * <code>required int32 int32_field = 3;</code>
     */
    boolean hasInt32Field();
    /**
     * <code>required int32 int32_field = 3;</code>
     */
    int getInt32Field();

    /**
     * <code>required int64 int64_field = 4;</code>
     */
    boolean hasInt64Field();
    /**
     * <code>required int64 int64_field = 4;</code>
     */
    long getInt64Field();

    /**
     * <code>required uint32 uint32_field = 5;</code>
     */
    boolean hasUint32Field();
    /**
     * <code>required uint32 uint32_field = 5;</code>
     */
    int getUint32Field();

    /**
     * <code>required uint64 uint64_field = 6;</code>
     */
    boolean hasUint64Field();
    /**
     * <code>required uint64 uint64_field = 6;</code>
     */
    long getUint64Field();

    /**
     * <code>required sint32 sint32_field = 7;</code>
     */
    boolean hasSint32Field();
    /**
     * <code>required sint32 sint32_field = 7;</code>
     */
    int getSint32Field();

    /**
     * <code>required sint64 sint64_field = 8;</code>
     */
    boolean hasSint64Field();
    /**
     * <code>required sint64 sint64_field = 8;</code>
     */
    long getSint64Field();

    /**
     * <code>required fixed32 fixed32_field = 9;</code>
     */
    boolean hasFixed32Field();
    /**
     * <code>required fixed32 fixed32_field = 9;</code>
     */
    int getFixed32Field();

    /**
     * <code>required fixed64 fixed64_field = 10;</code>
     */
    boolean hasFixed64Field();
    /**
     * <code>required fixed64 fixed64_field = 10;</code>
     */
    long getFixed64Field();

    /**
     * <code>required sfixed32 sfixed32_field = 11;</code>
     */
    boolean hasSfixed32Field();
    /**
     * <code>required sfixed32 sfixed32_field = 11;</code>
     */
    int getSfixed32Field();

    /**
     * <code>required sfixed64 sfixed64_field = 12;</code>
     */
    boolean hasSfixed64Field();
    /**
     * <code>required sfixed64 sfixed64_field = 12;</code>
     */
    long getSfixed64Field();

    /**
     * <code>required bool bool_field = 13;</code>
     */
    boolean hasBoolField();
    /**
     * <code>required bool bool_field = 13;</code>
     */
    boolean getBoolField();

    /**
     * <code>required string string_field = 14;</code>
     */
    boolean hasStringField();
    /**
     * <code>required string string_field = 14;</code>
     */
    java.lang.String getStringField();
    /**
     * <code>required string string_field = 14;</code>
     */
    com.google.protobuf.ByteString
        getStringFieldBytes();

    /**
     * <code>required bytes bytes_field = 15;</code>
     */
    boolean hasBytesField();
    /**
     * <code>required bytes bytes_field = 15;</code>
     */
    com.google.protobuf.ByteString getBytesField();

    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    boolean hasColorField();
    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Color getColorField();
  }
  /**
   * Protobuf type {@code me.lyh.protobuf.generic.proto2.Required}
   */
  public static final class Required extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:me.lyh.protobuf.generic.proto2.Required)
      RequiredOrBuilder {
    // Use Required.newBuilder() to construct.
    private Required(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Required(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Required defaultInstance;
    public static Required getDefaultInstance() {
      return defaultInstance;
    }

    public Required getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Required(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              doubleField_ = input.readDouble();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              floatField_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              int32Field_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              int64Field_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              uint32Field_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              uint64Field_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sint32Field_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              sint64Field_ = input.readSInt64();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              fixed32Field_ = input.readFixed32();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              fixed64Field_ = input.readFixed64();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              sfixed32Field_ = input.readSFixed32();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              sfixed64Field_ = input.readSFixed64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              boolField_ = input.readBool();
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00002000;
              stringField_ = bs;
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              bytesField_ = input.readBytes();
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                bitField0_ |= 0x00008000;
                colorField_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Required_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Required_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.lyh.protobuf.generic.proto2.Schemas.Required.class, me.lyh.protobuf.generic.proto2.Schemas.Required.Builder.class);
    }

    public static com.google.protobuf.Parser<Required> PARSER =
        new com.google.protobuf.AbstractParser<Required>() {
      public Required parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Required(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Required> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DOUBLE_FIELD_FIELD_NUMBER = 1;
    private double doubleField_;
    /**
     * <code>required double double_field = 1;</code>
     */
    public boolean hasDoubleField() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double double_field = 1;</code>
     */
    public double getDoubleField() {
      return doubleField_;
    }

    public static final int FLOAT_FIELD_FIELD_NUMBER = 2;
    private float floatField_;
    /**
     * <code>required float float_field = 2;</code>
     */
    public boolean hasFloatField() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float float_field = 2;</code>
     */
    public float getFloatField() {
      return floatField_;
    }

    public static final int INT32_FIELD_FIELD_NUMBER = 3;
    private int int32Field_;
    /**
     * <code>required int32 int32_field = 3;</code>
     */
    public boolean hasInt32Field() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 int32_field = 3;</code>
     */
    public int getInt32Field() {
      return int32Field_;
    }

    public static final int INT64_FIELD_FIELD_NUMBER = 4;
    private long int64Field_;
    /**
     * <code>required int64 int64_field = 4;</code>
     */
    public boolean hasInt64Field() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 int64_field = 4;</code>
     */
    public long getInt64Field() {
      return int64Field_;
    }

    public static final int UINT32_FIELD_FIELD_NUMBER = 5;
    private int uint32Field_;
    /**
     * <code>required uint32 uint32_field = 5;</code>
     */
    public boolean hasUint32Field() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 uint32_field = 5;</code>
     */
    public int getUint32Field() {
      return uint32Field_;
    }

    public static final int UINT64_FIELD_FIELD_NUMBER = 6;
    private long uint64Field_;
    /**
     * <code>required uint64 uint64_field = 6;</code>
     */
    public boolean hasUint64Field() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint64 uint64_field = 6;</code>
     */
    public long getUint64Field() {
      return uint64Field_;
    }

    public static final int SINT32_FIELD_FIELD_NUMBER = 7;
    private int sint32Field_;
    /**
     * <code>required sint32 sint32_field = 7;</code>
     */
    public boolean hasSint32Field() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required sint32 sint32_field = 7;</code>
     */
    public int getSint32Field() {
      return sint32Field_;
    }

    public static final int SINT64_FIELD_FIELD_NUMBER = 8;
    private long sint64Field_;
    /**
     * <code>required sint64 sint64_field = 8;</code>
     */
    public boolean hasSint64Field() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required sint64 sint64_field = 8;</code>
     */
    public long getSint64Field() {
      return sint64Field_;
    }

    public static final int FIXED32_FIELD_FIELD_NUMBER = 9;
    private int fixed32Field_;
    /**
     * <code>required fixed32 fixed32_field = 9;</code>
     */
    public boolean hasFixed32Field() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required fixed32 fixed32_field = 9;</code>
     */
    public int getFixed32Field() {
      return fixed32Field_;
    }

    public static final int FIXED64_FIELD_FIELD_NUMBER = 10;
    private long fixed64Field_;
    /**
     * <code>required fixed64 fixed64_field = 10;</code>
     */
    public boolean hasFixed64Field() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required fixed64 fixed64_field = 10;</code>
     */
    public long getFixed64Field() {
      return fixed64Field_;
    }

    public static final int SFIXED32_FIELD_FIELD_NUMBER = 11;
    private int sfixed32Field_;
    /**
     * <code>required sfixed32 sfixed32_field = 11;</code>
     */
    public boolean hasSfixed32Field() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required sfixed32 sfixed32_field = 11;</code>
     */
    public int getSfixed32Field() {
      return sfixed32Field_;
    }

    public static final int SFIXED64_FIELD_FIELD_NUMBER = 12;
    private long sfixed64Field_;
    /**
     * <code>required sfixed64 sfixed64_field = 12;</code>
     */
    public boolean hasSfixed64Field() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required sfixed64 sfixed64_field = 12;</code>
     */
    public long getSfixed64Field() {
      return sfixed64Field_;
    }

    public static final int BOOL_FIELD_FIELD_NUMBER = 13;
    private boolean boolField_;
    /**
     * <code>required bool bool_field = 13;</code>
     */
    public boolean hasBoolField() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required bool bool_field = 13;</code>
     */
    public boolean getBoolField() {
      return boolField_;
    }

    public static final int STRING_FIELD_FIELD_NUMBER = 14;
    private java.lang.Object stringField_;
    /**
     * <code>required string string_field = 14;</code>
     */
    public boolean hasStringField() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required string string_field = 14;</code>
     */
    public java.lang.String getStringField() {
      java.lang.Object ref = stringField_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stringField_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string string_field = 14;</code>
     */
    public com.google.protobuf.ByteString
        getStringFieldBytes() {
      java.lang.Object ref = stringField_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringField_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BYTES_FIELD_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString bytesField_;
    /**
     * <code>required bytes bytes_field = 15;</code>
     */
    public boolean hasBytesField() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required bytes bytes_field = 15;</code>
     */
    public com.google.protobuf.ByteString getBytesField() {
      return bytesField_;
    }

    public static final int COLOR_FIELD_FIELD_NUMBER = 16;
    private me.lyh.protobuf.generic.proto2.Schemas.Color colorField_;
    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    public boolean hasColorField() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField() {
      return colorField_;
    }

    private void initFields() {
      doubleField_ = 0D;
      floatField_ = 0F;
      int32Field_ = 0;
      int64Field_ = 0L;
      uint32Field_ = 0;
      uint64Field_ = 0L;
      sint32Field_ = 0;
      sint64Field_ = 0L;
      fixed32Field_ = 0;
      fixed64Field_ = 0L;
      sfixed32Field_ = 0;
      sfixed64Field_ = 0L;
      boolField_ = false;
      stringField_ = "";
      bytesField_ = com.google.protobuf.ByteString.EMPTY;
      colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDoubleField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFloatField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInt32Field()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInt64Field()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUint32Field()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUint64Field()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSint32Field()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSint64Field()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFixed32Field()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFixed64Field()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSfixed32Field()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSfixed64Field()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBoolField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStringField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBytesField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColorField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, doubleField_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, floatField_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, int32Field_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, int64Field_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, uint32Field_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, uint64Field_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(7, sint32Field_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt64(8, sint64Field_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFixed32(9, fixed32Field_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFixed64(10, fixed64Field_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeSFixed32(11, sfixed32Field_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeSFixed64(12, sfixed64Field_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(13, boolField_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getStringFieldBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, bytesField_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeEnum(16, colorField_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, doubleField_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, floatField_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int32Field_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, int64Field_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, uint32Field_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, uint64Field_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, sint32Field_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(8, sint64Field_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, fixed32Field_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, fixed64Field_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(11, sfixed32Field_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(12, sfixed64Field_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, boolField_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getStringFieldBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, bytesField_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, colorField_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.lyh.protobuf.generic.proto2.Schemas.Required parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Required parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Required parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Required parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Required parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Required parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Required parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Required parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Required parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Required parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.lyh.protobuf.generic.proto2.Schemas.Required prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code me.lyh.protobuf.generic.proto2.Required}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:me.lyh.protobuf.generic.proto2.Required)
        me.lyh.protobuf.generic.proto2.Schemas.RequiredOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Required_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Required_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.lyh.protobuf.generic.proto2.Schemas.Required.class, me.lyh.protobuf.generic.proto2.Schemas.Required.Builder.class);
      }

      // Construct using me.lyh.protobuf.generic.proto2.Schemas.Required.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        doubleField_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        floatField_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        int32Field_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        int64Field_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        uint32Field_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        uint64Field_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        sint32Field_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        sint64Field_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        fixed32Field_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed64Field_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        sfixed32Field_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed64Field_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        boolField_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        stringField_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        bytesField_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00004000);
        colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Required_descriptor;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Required getDefaultInstanceForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.Required.getDefaultInstance();
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Required build() {
        me.lyh.protobuf.generic.proto2.Schemas.Required result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Required buildPartial() {
        me.lyh.protobuf.generic.proto2.Schemas.Required result = new me.lyh.protobuf.generic.proto2.Schemas.Required(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.doubleField_ = doubleField_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.floatField_ = floatField_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.int32Field_ = int32Field_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.int64Field_ = int64Field_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.uint32Field_ = uint32Field_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.uint64Field_ = uint64Field_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sint32Field_ = sint32Field_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.sint64Field_ = sint64Field_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fixed32Field_ = fixed32Field_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.fixed64Field_ = fixed64Field_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.sfixed32Field_ = sfixed32Field_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.sfixed64Field_ = sfixed64Field_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.boolField_ = boolField_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.stringField_ = stringField_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.bytesField_ = bytesField_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.colorField_ = colorField_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.lyh.protobuf.generic.proto2.Schemas.Required) {
          return mergeFrom((me.lyh.protobuf.generic.proto2.Schemas.Required)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.lyh.protobuf.generic.proto2.Schemas.Required other) {
        if (other == me.lyh.protobuf.generic.proto2.Schemas.Required.getDefaultInstance()) return this;
        if (other.hasDoubleField()) {
          setDoubleField(other.getDoubleField());
        }
        if (other.hasFloatField()) {
          setFloatField(other.getFloatField());
        }
        if (other.hasInt32Field()) {
          setInt32Field(other.getInt32Field());
        }
        if (other.hasInt64Field()) {
          setInt64Field(other.getInt64Field());
        }
        if (other.hasUint32Field()) {
          setUint32Field(other.getUint32Field());
        }
        if (other.hasUint64Field()) {
          setUint64Field(other.getUint64Field());
        }
        if (other.hasSint32Field()) {
          setSint32Field(other.getSint32Field());
        }
        if (other.hasSint64Field()) {
          setSint64Field(other.getSint64Field());
        }
        if (other.hasFixed32Field()) {
          setFixed32Field(other.getFixed32Field());
        }
        if (other.hasFixed64Field()) {
          setFixed64Field(other.getFixed64Field());
        }
        if (other.hasSfixed32Field()) {
          setSfixed32Field(other.getSfixed32Field());
        }
        if (other.hasSfixed64Field()) {
          setSfixed64Field(other.getSfixed64Field());
        }
        if (other.hasBoolField()) {
          setBoolField(other.getBoolField());
        }
        if (other.hasStringField()) {
          bitField0_ |= 0x00002000;
          stringField_ = other.stringField_;
          onChanged();
        }
        if (other.hasBytesField()) {
          setBytesField(other.getBytesField());
        }
        if (other.hasColorField()) {
          setColorField(other.getColorField());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDoubleField()) {
          
          return false;
        }
        if (!hasFloatField()) {
          
          return false;
        }
        if (!hasInt32Field()) {
          
          return false;
        }
        if (!hasInt64Field()) {
          
          return false;
        }
        if (!hasUint32Field()) {
          
          return false;
        }
        if (!hasUint64Field()) {
          
          return false;
        }
        if (!hasSint32Field()) {
          
          return false;
        }
        if (!hasSint64Field()) {
          
          return false;
        }
        if (!hasFixed32Field()) {
          
          return false;
        }
        if (!hasFixed64Field()) {
          
          return false;
        }
        if (!hasSfixed32Field()) {
          
          return false;
        }
        if (!hasSfixed64Field()) {
          
          return false;
        }
        if (!hasBoolField()) {
          
          return false;
        }
        if (!hasStringField()) {
          
          return false;
        }
        if (!hasBytesField()) {
          
          return false;
        }
        if (!hasColorField()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.lyh.protobuf.generic.proto2.Schemas.Required parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.lyh.protobuf.generic.proto2.Schemas.Required) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double doubleField_ ;
      /**
       * <code>required double double_field = 1;</code>
       */
      public boolean hasDoubleField() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double double_field = 1;</code>
       */
      public double getDoubleField() {
        return doubleField_;
      }
      /**
       * <code>required double double_field = 1;</code>
       */
      public Builder setDoubleField(double value) {
        bitField0_ |= 0x00000001;
        doubleField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double double_field = 1;</code>
       */
      public Builder clearDoubleField() {
        bitField0_ = (bitField0_ & ~0x00000001);
        doubleField_ = 0D;
        onChanged();
        return this;
      }

      private float floatField_ ;
      /**
       * <code>required float float_field = 2;</code>
       */
      public boolean hasFloatField() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float float_field = 2;</code>
       */
      public float getFloatField() {
        return floatField_;
      }
      /**
       * <code>required float float_field = 2;</code>
       */
      public Builder setFloatField(float value) {
        bitField0_ |= 0x00000002;
        floatField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float float_field = 2;</code>
       */
      public Builder clearFloatField() {
        bitField0_ = (bitField0_ & ~0x00000002);
        floatField_ = 0F;
        onChanged();
        return this;
      }

      private int int32Field_ ;
      /**
       * <code>required int32 int32_field = 3;</code>
       */
      public boolean hasInt32Field() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 int32_field = 3;</code>
       */
      public int getInt32Field() {
        return int32Field_;
      }
      /**
       * <code>required int32 int32_field = 3;</code>
       */
      public Builder setInt32Field(int value) {
        bitField0_ |= 0x00000004;
        int32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 int32_field = 3;</code>
       */
      public Builder clearInt32Field() {
        bitField0_ = (bitField0_ & ~0x00000004);
        int32Field_ = 0;
        onChanged();
        return this;
      }

      private long int64Field_ ;
      /**
       * <code>required int64 int64_field = 4;</code>
       */
      public boolean hasInt64Field() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 int64_field = 4;</code>
       */
      public long getInt64Field() {
        return int64Field_;
      }
      /**
       * <code>required int64 int64_field = 4;</code>
       */
      public Builder setInt64Field(long value) {
        bitField0_ |= 0x00000008;
        int64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 int64_field = 4;</code>
       */
      public Builder clearInt64Field() {
        bitField0_ = (bitField0_ & ~0x00000008);
        int64Field_ = 0L;
        onChanged();
        return this;
      }

      private int uint32Field_ ;
      /**
       * <code>required uint32 uint32_field = 5;</code>
       */
      public boolean hasUint32Field() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 uint32_field = 5;</code>
       */
      public int getUint32Field() {
        return uint32Field_;
      }
      /**
       * <code>required uint32 uint32_field = 5;</code>
       */
      public Builder setUint32Field(int value) {
        bitField0_ |= 0x00000010;
        uint32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 uint32_field = 5;</code>
       */
      public Builder clearUint32Field() {
        bitField0_ = (bitField0_ & ~0x00000010);
        uint32Field_ = 0;
        onChanged();
        return this;
      }

      private long uint64Field_ ;
      /**
       * <code>required uint64 uint64_field = 6;</code>
       */
      public boolean hasUint64Field() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint64 uint64_field = 6;</code>
       */
      public long getUint64Field() {
        return uint64Field_;
      }
      /**
       * <code>required uint64 uint64_field = 6;</code>
       */
      public Builder setUint64Field(long value) {
        bitField0_ |= 0x00000020;
        uint64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 uint64_field = 6;</code>
       */
      public Builder clearUint64Field() {
        bitField0_ = (bitField0_ & ~0x00000020);
        uint64Field_ = 0L;
        onChanged();
        return this;
      }

      private int sint32Field_ ;
      /**
       * <code>required sint32 sint32_field = 7;</code>
       */
      public boolean hasSint32Field() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required sint32 sint32_field = 7;</code>
       */
      public int getSint32Field() {
        return sint32Field_;
      }
      /**
       * <code>required sint32 sint32_field = 7;</code>
       */
      public Builder setSint32Field(int value) {
        bitField0_ |= 0x00000040;
        sint32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 sint32_field = 7;</code>
       */
      public Builder clearSint32Field() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sint32Field_ = 0;
        onChanged();
        return this;
      }

      private long sint64Field_ ;
      /**
       * <code>required sint64 sint64_field = 8;</code>
       */
      public boolean hasSint64Field() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required sint64 sint64_field = 8;</code>
       */
      public long getSint64Field() {
        return sint64Field_;
      }
      /**
       * <code>required sint64 sint64_field = 8;</code>
       */
      public Builder setSint64Field(long value) {
        bitField0_ |= 0x00000080;
        sint64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint64 sint64_field = 8;</code>
       */
      public Builder clearSint64Field() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sint64Field_ = 0L;
        onChanged();
        return this;
      }

      private int fixed32Field_ ;
      /**
       * <code>required fixed32 fixed32_field = 9;</code>
       */
      public boolean hasFixed32Field() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required fixed32 fixed32_field = 9;</code>
       */
      public int getFixed32Field() {
        return fixed32Field_;
      }
      /**
       * <code>required fixed32 fixed32_field = 9;</code>
       */
      public Builder setFixed32Field(int value) {
        bitField0_ |= 0x00000100;
        fixed32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 fixed32_field = 9;</code>
       */
      public Builder clearFixed32Field() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed32Field_ = 0;
        onChanged();
        return this;
      }

      private long fixed64Field_ ;
      /**
       * <code>required fixed64 fixed64_field = 10;</code>
       */
      public boolean hasFixed64Field() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required fixed64 fixed64_field = 10;</code>
       */
      public long getFixed64Field() {
        return fixed64Field_;
      }
      /**
       * <code>required fixed64 fixed64_field = 10;</code>
       */
      public Builder setFixed64Field(long value) {
        bitField0_ |= 0x00000200;
        fixed64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed64 fixed64_field = 10;</code>
       */
      public Builder clearFixed64Field() {
        bitField0_ = (bitField0_ & ~0x00000200);
        fixed64Field_ = 0L;
        onChanged();
        return this;
      }

      private int sfixed32Field_ ;
      /**
       * <code>required sfixed32 sfixed32_field = 11;</code>
       */
      public boolean hasSfixed32Field() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required sfixed32 sfixed32_field = 11;</code>
       */
      public int getSfixed32Field() {
        return sfixed32Field_;
      }
      /**
       * <code>required sfixed32 sfixed32_field = 11;</code>
       */
      public Builder setSfixed32Field(int value) {
        bitField0_ |= 0x00000400;
        sfixed32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sfixed32 sfixed32_field = 11;</code>
       */
      public Builder clearSfixed32Field() {
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed32Field_ = 0;
        onChanged();
        return this;
      }

      private long sfixed64Field_ ;
      /**
       * <code>required sfixed64 sfixed64_field = 12;</code>
       */
      public boolean hasSfixed64Field() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required sfixed64 sfixed64_field = 12;</code>
       */
      public long getSfixed64Field() {
        return sfixed64Field_;
      }
      /**
       * <code>required sfixed64 sfixed64_field = 12;</code>
       */
      public Builder setSfixed64Field(long value) {
        bitField0_ |= 0x00000800;
        sfixed64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sfixed64 sfixed64_field = 12;</code>
       */
      public Builder clearSfixed64Field() {
        bitField0_ = (bitField0_ & ~0x00000800);
        sfixed64Field_ = 0L;
        onChanged();
        return this;
      }

      private boolean boolField_ ;
      /**
       * <code>required bool bool_field = 13;</code>
       */
      public boolean hasBoolField() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required bool bool_field = 13;</code>
       */
      public boolean getBoolField() {
        return boolField_;
      }
      /**
       * <code>required bool bool_field = 13;</code>
       */
      public Builder setBoolField(boolean value) {
        bitField0_ |= 0x00001000;
        boolField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool bool_field = 13;</code>
       */
      public Builder clearBoolField() {
        bitField0_ = (bitField0_ & ~0x00001000);
        boolField_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object stringField_ = "";
      /**
       * <code>required string string_field = 14;</code>
       */
      public boolean hasStringField() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required string string_field = 14;</code>
       */
      public java.lang.String getStringField() {
        java.lang.Object ref = stringField_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringField_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string string_field = 14;</code>
       */
      public com.google.protobuf.ByteString
          getStringFieldBytes() {
        java.lang.Object ref = stringField_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringField_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string string_field = 14;</code>
       */
      public Builder setStringField(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        stringField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string string_field = 14;</code>
       */
      public Builder clearStringField() {
        bitField0_ = (bitField0_ & ~0x00002000);
        stringField_ = getDefaultInstance().getStringField();
        onChanged();
        return this;
      }
      /**
       * <code>required string string_field = 14;</code>
       */
      public Builder setStringFieldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        stringField_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesField_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes bytes_field = 15;</code>
       */
      public boolean hasBytesField() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required bytes bytes_field = 15;</code>
       */
      public com.google.protobuf.ByteString getBytesField() {
        return bytesField_;
      }
      /**
       * <code>required bytes bytes_field = 15;</code>
       */
      public Builder setBytesField(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        bytesField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes bytes_field = 15;</code>
       */
      public Builder clearBytesField() {
        bitField0_ = (bitField0_ & ~0x00004000);
        bytesField_ = getDefaultInstance().getBytesField();
        onChanged();
        return this;
      }

      private me.lyh.protobuf.generic.proto2.Schemas.Color colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public boolean hasColorField() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField() {
        return colorField_;
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public Builder setColorField(me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00008000;
        colorField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public Builder clearColorField() {
        bitField0_ = (bitField0_ & ~0x00008000);
        colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:me.lyh.protobuf.generic.proto2.Required)
    }

    static {
      defaultInstance = new Required(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:me.lyh.protobuf.generic.proto2.Required)
  }

  public interface OptionalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:me.lyh.protobuf.generic.proto2.Optional)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional double double_field = 1;</code>
     */
    boolean hasDoubleField();
    /**
     * <code>optional double double_field = 1;</code>
     */
    double getDoubleField();

    /**
     * <code>optional float float_field = 2;</code>
     */
    boolean hasFloatField();
    /**
     * <code>optional float float_field = 2;</code>
     */
    float getFloatField();

    /**
     * <code>optional int32 int32_field = 3;</code>
     */
    boolean hasInt32Field();
    /**
     * <code>optional int32 int32_field = 3;</code>
     */
    int getInt32Field();

    /**
     * <code>optional int64 int64_field = 4;</code>
     */
    boolean hasInt64Field();
    /**
     * <code>optional int64 int64_field = 4;</code>
     */
    long getInt64Field();

    /**
     * <code>optional uint32 uint32_field = 5;</code>
     */
    boolean hasUint32Field();
    /**
     * <code>optional uint32 uint32_field = 5;</code>
     */
    int getUint32Field();

    /**
     * <code>optional uint64 uint64_field = 6;</code>
     */
    boolean hasUint64Field();
    /**
     * <code>optional uint64 uint64_field = 6;</code>
     */
    long getUint64Field();

    /**
     * <code>optional sint32 sint32_field = 7;</code>
     */
    boolean hasSint32Field();
    /**
     * <code>optional sint32 sint32_field = 7;</code>
     */
    int getSint32Field();

    /**
     * <code>optional sint64 sint64_field = 8;</code>
     */
    boolean hasSint64Field();
    /**
     * <code>optional sint64 sint64_field = 8;</code>
     */
    long getSint64Field();

    /**
     * <code>optional fixed32 fixed32_field = 9;</code>
     */
    boolean hasFixed32Field();
    /**
     * <code>optional fixed32 fixed32_field = 9;</code>
     */
    int getFixed32Field();

    /**
     * <code>optional fixed64 fixed64_field = 10;</code>
     */
    boolean hasFixed64Field();
    /**
     * <code>optional fixed64 fixed64_field = 10;</code>
     */
    long getFixed64Field();

    /**
     * <code>optional sfixed32 sfixed32_field = 11;</code>
     */
    boolean hasSfixed32Field();
    /**
     * <code>optional sfixed32 sfixed32_field = 11;</code>
     */
    int getSfixed32Field();

    /**
     * <code>optional sfixed64 sfixed64_field = 12;</code>
     */
    boolean hasSfixed64Field();
    /**
     * <code>optional sfixed64 sfixed64_field = 12;</code>
     */
    long getSfixed64Field();

    /**
     * <code>optional bool bool_field = 13;</code>
     */
    boolean hasBoolField();
    /**
     * <code>optional bool bool_field = 13;</code>
     */
    boolean getBoolField();

    /**
     * <code>optional string string_field = 14;</code>
     */
    boolean hasStringField();
    /**
     * <code>optional string string_field = 14;</code>
     */
    java.lang.String getStringField();
    /**
     * <code>optional string string_field = 14;</code>
     */
    com.google.protobuf.ByteString
        getStringFieldBytes();

    /**
     * <code>optional bytes bytes_field = 15;</code>
     */
    boolean hasBytesField();
    /**
     * <code>optional bytes bytes_field = 15;</code>
     */
    com.google.protobuf.ByteString getBytesField();

    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    boolean hasColorField();
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Color getColorField();
  }
  /**
   * Protobuf type {@code me.lyh.protobuf.generic.proto2.Optional}
   */
  public static final class Optional extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:me.lyh.protobuf.generic.proto2.Optional)
      OptionalOrBuilder {
    // Use Optional.newBuilder() to construct.
    private Optional(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Optional(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Optional defaultInstance;
    public static Optional getDefaultInstance() {
      return defaultInstance;
    }

    public Optional getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Optional(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              doubleField_ = input.readDouble();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              floatField_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              int32Field_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              int64Field_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              uint32Field_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              uint64Field_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sint32Field_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              sint64Field_ = input.readSInt64();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              fixed32Field_ = input.readFixed32();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              fixed64Field_ = input.readFixed64();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              sfixed32Field_ = input.readSFixed32();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              sfixed64Field_ = input.readSFixed64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              boolField_ = input.readBool();
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00002000;
              stringField_ = bs;
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              bytesField_ = input.readBytes();
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                bitField0_ |= 0x00008000;
                colorField_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Optional_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Optional_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.lyh.protobuf.generic.proto2.Schemas.Optional.class, me.lyh.protobuf.generic.proto2.Schemas.Optional.Builder.class);
    }

    public static com.google.protobuf.Parser<Optional> PARSER =
        new com.google.protobuf.AbstractParser<Optional>() {
      public Optional parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Optional(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Optional> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DOUBLE_FIELD_FIELD_NUMBER = 1;
    private double doubleField_;
    /**
     * <code>optional double double_field = 1;</code>
     */
    public boolean hasDoubleField() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional double double_field = 1;</code>
     */
    public double getDoubleField() {
      return doubleField_;
    }

    public static final int FLOAT_FIELD_FIELD_NUMBER = 2;
    private float floatField_;
    /**
     * <code>optional float float_field = 2;</code>
     */
    public boolean hasFloatField() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float float_field = 2;</code>
     */
    public float getFloatField() {
      return floatField_;
    }

    public static final int INT32_FIELD_FIELD_NUMBER = 3;
    private int int32Field_;
    /**
     * <code>optional int32 int32_field = 3;</code>
     */
    public boolean hasInt32Field() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 int32_field = 3;</code>
     */
    public int getInt32Field() {
      return int32Field_;
    }

    public static final int INT64_FIELD_FIELD_NUMBER = 4;
    private long int64Field_;
    /**
     * <code>optional int64 int64_field = 4;</code>
     */
    public boolean hasInt64Field() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 int64_field = 4;</code>
     */
    public long getInt64Field() {
      return int64Field_;
    }

    public static final int UINT32_FIELD_FIELD_NUMBER = 5;
    private int uint32Field_;
    /**
     * <code>optional uint32 uint32_field = 5;</code>
     */
    public boolean hasUint32Field() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 uint32_field = 5;</code>
     */
    public int getUint32Field() {
      return uint32Field_;
    }

    public static final int UINT64_FIELD_FIELD_NUMBER = 6;
    private long uint64Field_;
    /**
     * <code>optional uint64 uint64_field = 6;</code>
     */
    public boolean hasUint64Field() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 uint64_field = 6;</code>
     */
    public long getUint64Field() {
      return uint64Field_;
    }

    public static final int SINT32_FIELD_FIELD_NUMBER = 7;
    private int sint32Field_;
    /**
     * <code>optional sint32 sint32_field = 7;</code>
     */
    public boolean hasSint32Field() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 sint32_field = 7;</code>
     */
    public int getSint32Field() {
      return sint32Field_;
    }

    public static final int SINT64_FIELD_FIELD_NUMBER = 8;
    private long sint64Field_;
    /**
     * <code>optional sint64 sint64_field = 8;</code>
     */
    public boolean hasSint64Field() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint64 sint64_field = 8;</code>
     */
    public long getSint64Field() {
      return sint64Field_;
    }

    public static final int FIXED32_FIELD_FIELD_NUMBER = 9;
    private int fixed32Field_;
    /**
     * <code>optional fixed32 fixed32_field = 9;</code>
     */
    public boolean hasFixed32Field() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional fixed32 fixed32_field = 9;</code>
     */
    public int getFixed32Field() {
      return fixed32Field_;
    }

    public static final int FIXED64_FIELD_FIELD_NUMBER = 10;
    private long fixed64Field_;
    /**
     * <code>optional fixed64 fixed64_field = 10;</code>
     */
    public boolean hasFixed64Field() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional fixed64 fixed64_field = 10;</code>
     */
    public long getFixed64Field() {
      return fixed64Field_;
    }

    public static final int SFIXED32_FIELD_FIELD_NUMBER = 11;
    private int sfixed32Field_;
    /**
     * <code>optional sfixed32 sfixed32_field = 11;</code>
     */
    public boolean hasSfixed32Field() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional sfixed32 sfixed32_field = 11;</code>
     */
    public int getSfixed32Field() {
      return sfixed32Field_;
    }

    public static final int SFIXED64_FIELD_FIELD_NUMBER = 12;
    private long sfixed64Field_;
    /**
     * <code>optional sfixed64 sfixed64_field = 12;</code>
     */
    public boolean hasSfixed64Field() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional sfixed64 sfixed64_field = 12;</code>
     */
    public long getSfixed64Field() {
      return sfixed64Field_;
    }

    public static final int BOOL_FIELD_FIELD_NUMBER = 13;
    private boolean boolField_;
    /**
     * <code>optional bool bool_field = 13;</code>
     */
    public boolean hasBoolField() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool bool_field = 13;</code>
     */
    public boolean getBoolField() {
      return boolField_;
    }

    public static final int STRING_FIELD_FIELD_NUMBER = 14;
    private java.lang.Object stringField_;
    /**
     * <code>optional string string_field = 14;</code>
     */
    public boolean hasStringField() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string string_field = 14;</code>
     */
    public java.lang.String getStringField() {
      java.lang.Object ref = stringField_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stringField_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string string_field = 14;</code>
     */
    public com.google.protobuf.ByteString
        getStringFieldBytes() {
      java.lang.Object ref = stringField_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringField_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BYTES_FIELD_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString bytesField_;
    /**
     * <code>optional bytes bytes_field = 15;</code>
     */
    public boolean hasBytesField() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional bytes bytes_field = 15;</code>
     */
    public com.google.protobuf.ByteString getBytesField() {
      return bytesField_;
    }

    public static final int COLOR_FIELD_FIELD_NUMBER = 16;
    private me.lyh.protobuf.generic.proto2.Schemas.Color colorField_;
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    public boolean hasColorField() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField() {
      return colorField_;
    }

    private void initFields() {
      doubleField_ = 0D;
      floatField_ = 0F;
      int32Field_ = 0;
      int64Field_ = 0L;
      uint32Field_ = 0;
      uint64Field_ = 0L;
      sint32Field_ = 0;
      sint64Field_ = 0L;
      fixed32Field_ = 0;
      fixed64Field_ = 0L;
      sfixed32Field_ = 0;
      sfixed64Field_ = 0L;
      boolField_ = false;
      stringField_ = "";
      bytesField_ = com.google.protobuf.ByteString.EMPTY;
      colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, doubleField_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, floatField_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, int32Field_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, int64Field_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, uint32Field_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, uint64Field_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(7, sint32Field_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt64(8, sint64Field_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFixed32(9, fixed32Field_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFixed64(10, fixed64Field_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeSFixed32(11, sfixed32Field_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeSFixed64(12, sfixed64Field_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(13, boolField_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getStringFieldBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, bytesField_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeEnum(16, colorField_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, doubleField_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, floatField_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int32Field_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, int64Field_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, uint32Field_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, uint64Field_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, sint32Field_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(8, sint64Field_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, fixed32Field_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, fixed64Field_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(11, sfixed32Field_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(12, sfixed64Field_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, boolField_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getStringFieldBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, bytesField_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, colorField_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.lyh.protobuf.generic.proto2.Schemas.Optional parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Optional parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Optional parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Optional parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Optional parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Optional parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Optional parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Optional parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Optional parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Optional parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.lyh.protobuf.generic.proto2.Schemas.Optional prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code me.lyh.protobuf.generic.proto2.Optional}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:me.lyh.protobuf.generic.proto2.Optional)
        me.lyh.protobuf.generic.proto2.Schemas.OptionalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Optional_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Optional_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.lyh.protobuf.generic.proto2.Schemas.Optional.class, me.lyh.protobuf.generic.proto2.Schemas.Optional.Builder.class);
      }

      // Construct using me.lyh.protobuf.generic.proto2.Schemas.Optional.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        doubleField_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        floatField_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        int32Field_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        int64Field_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        uint32Field_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        uint64Field_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        sint32Field_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        sint64Field_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        fixed32Field_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed64Field_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        sfixed32Field_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed64Field_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        boolField_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        stringField_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        bytesField_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00004000);
        colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Optional_descriptor;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Optional getDefaultInstanceForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.Optional.getDefaultInstance();
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Optional build() {
        me.lyh.protobuf.generic.proto2.Schemas.Optional result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Optional buildPartial() {
        me.lyh.protobuf.generic.proto2.Schemas.Optional result = new me.lyh.protobuf.generic.proto2.Schemas.Optional(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.doubleField_ = doubleField_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.floatField_ = floatField_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.int32Field_ = int32Field_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.int64Field_ = int64Field_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.uint32Field_ = uint32Field_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.uint64Field_ = uint64Field_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sint32Field_ = sint32Field_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.sint64Field_ = sint64Field_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fixed32Field_ = fixed32Field_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.fixed64Field_ = fixed64Field_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.sfixed32Field_ = sfixed32Field_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.sfixed64Field_ = sfixed64Field_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.boolField_ = boolField_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.stringField_ = stringField_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.bytesField_ = bytesField_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.colorField_ = colorField_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.lyh.protobuf.generic.proto2.Schemas.Optional) {
          return mergeFrom((me.lyh.protobuf.generic.proto2.Schemas.Optional)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.lyh.protobuf.generic.proto2.Schemas.Optional other) {
        if (other == me.lyh.protobuf.generic.proto2.Schemas.Optional.getDefaultInstance()) return this;
        if (other.hasDoubleField()) {
          setDoubleField(other.getDoubleField());
        }
        if (other.hasFloatField()) {
          setFloatField(other.getFloatField());
        }
        if (other.hasInt32Field()) {
          setInt32Field(other.getInt32Field());
        }
        if (other.hasInt64Field()) {
          setInt64Field(other.getInt64Field());
        }
        if (other.hasUint32Field()) {
          setUint32Field(other.getUint32Field());
        }
        if (other.hasUint64Field()) {
          setUint64Field(other.getUint64Field());
        }
        if (other.hasSint32Field()) {
          setSint32Field(other.getSint32Field());
        }
        if (other.hasSint64Field()) {
          setSint64Field(other.getSint64Field());
        }
        if (other.hasFixed32Field()) {
          setFixed32Field(other.getFixed32Field());
        }
        if (other.hasFixed64Field()) {
          setFixed64Field(other.getFixed64Field());
        }
        if (other.hasSfixed32Field()) {
          setSfixed32Field(other.getSfixed32Field());
        }
        if (other.hasSfixed64Field()) {
          setSfixed64Field(other.getSfixed64Field());
        }
        if (other.hasBoolField()) {
          setBoolField(other.getBoolField());
        }
        if (other.hasStringField()) {
          bitField0_ |= 0x00002000;
          stringField_ = other.stringField_;
          onChanged();
        }
        if (other.hasBytesField()) {
          setBytesField(other.getBytesField());
        }
        if (other.hasColorField()) {
          setColorField(other.getColorField());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.lyh.protobuf.generic.proto2.Schemas.Optional parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.lyh.protobuf.generic.proto2.Schemas.Optional) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double doubleField_ ;
      /**
       * <code>optional double double_field = 1;</code>
       */
      public boolean hasDoubleField() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional double double_field = 1;</code>
       */
      public double getDoubleField() {
        return doubleField_;
      }
      /**
       * <code>optional double double_field = 1;</code>
       */
      public Builder setDoubleField(double value) {
        bitField0_ |= 0x00000001;
        doubleField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double double_field = 1;</code>
       */
      public Builder clearDoubleField() {
        bitField0_ = (bitField0_ & ~0x00000001);
        doubleField_ = 0D;
        onChanged();
        return this;
      }

      private float floatField_ ;
      /**
       * <code>optional float float_field = 2;</code>
       */
      public boolean hasFloatField() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float float_field = 2;</code>
       */
      public float getFloatField() {
        return floatField_;
      }
      /**
       * <code>optional float float_field = 2;</code>
       */
      public Builder setFloatField(float value) {
        bitField0_ |= 0x00000002;
        floatField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float float_field = 2;</code>
       */
      public Builder clearFloatField() {
        bitField0_ = (bitField0_ & ~0x00000002);
        floatField_ = 0F;
        onChanged();
        return this;
      }

      private int int32Field_ ;
      /**
       * <code>optional int32 int32_field = 3;</code>
       */
      public boolean hasInt32Field() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 int32_field = 3;</code>
       */
      public int getInt32Field() {
        return int32Field_;
      }
      /**
       * <code>optional int32 int32_field = 3;</code>
       */
      public Builder setInt32Field(int value) {
        bitField0_ |= 0x00000004;
        int32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 int32_field = 3;</code>
       */
      public Builder clearInt32Field() {
        bitField0_ = (bitField0_ & ~0x00000004);
        int32Field_ = 0;
        onChanged();
        return this;
      }

      private long int64Field_ ;
      /**
       * <code>optional int64 int64_field = 4;</code>
       */
      public boolean hasInt64Field() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 int64_field = 4;</code>
       */
      public long getInt64Field() {
        return int64Field_;
      }
      /**
       * <code>optional int64 int64_field = 4;</code>
       */
      public Builder setInt64Field(long value) {
        bitField0_ |= 0x00000008;
        int64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 int64_field = 4;</code>
       */
      public Builder clearInt64Field() {
        bitField0_ = (bitField0_ & ~0x00000008);
        int64Field_ = 0L;
        onChanged();
        return this;
      }

      private int uint32Field_ ;
      /**
       * <code>optional uint32 uint32_field = 5;</code>
       */
      public boolean hasUint32Field() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 uint32_field = 5;</code>
       */
      public int getUint32Field() {
        return uint32Field_;
      }
      /**
       * <code>optional uint32 uint32_field = 5;</code>
       */
      public Builder setUint32Field(int value) {
        bitField0_ |= 0x00000010;
        uint32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 uint32_field = 5;</code>
       */
      public Builder clearUint32Field() {
        bitField0_ = (bitField0_ & ~0x00000010);
        uint32Field_ = 0;
        onChanged();
        return this;
      }

      private long uint64Field_ ;
      /**
       * <code>optional uint64 uint64_field = 6;</code>
       */
      public boolean hasUint64Field() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 uint64_field = 6;</code>
       */
      public long getUint64Field() {
        return uint64Field_;
      }
      /**
       * <code>optional uint64 uint64_field = 6;</code>
       */
      public Builder setUint64Field(long value) {
        bitField0_ |= 0x00000020;
        uint64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 uint64_field = 6;</code>
       */
      public Builder clearUint64Field() {
        bitField0_ = (bitField0_ & ~0x00000020);
        uint64Field_ = 0L;
        onChanged();
        return this;
      }

      private int sint32Field_ ;
      /**
       * <code>optional sint32 sint32_field = 7;</code>
       */
      public boolean hasSint32Field() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint32 sint32_field = 7;</code>
       */
      public int getSint32Field() {
        return sint32Field_;
      }
      /**
       * <code>optional sint32 sint32_field = 7;</code>
       */
      public Builder setSint32Field(int value) {
        bitField0_ |= 0x00000040;
        sint32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 sint32_field = 7;</code>
       */
      public Builder clearSint32Field() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sint32Field_ = 0;
        onChanged();
        return this;
      }

      private long sint64Field_ ;
      /**
       * <code>optional sint64 sint64_field = 8;</code>
       */
      public boolean hasSint64Field() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint64 sint64_field = 8;</code>
       */
      public long getSint64Field() {
        return sint64Field_;
      }
      /**
       * <code>optional sint64 sint64_field = 8;</code>
       */
      public Builder setSint64Field(long value) {
        bitField0_ |= 0x00000080;
        sint64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 sint64_field = 8;</code>
       */
      public Builder clearSint64Field() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sint64Field_ = 0L;
        onChanged();
        return this;
      }

      private int fixed32Field_ ;
      /**
       * <code>optional fixed32 fixed32_field = 9;</code>
       */
      public boolean hasFixed32Field() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional fixed32 fixed32_field = 9;</code>
       */
      public int getFixed32Field() {
        return fixed32Field_;
      }
      /**
       * <code>optional fixed32 fixed32_field = 9;</code>
       */
      public Builder setFixed32Field(int value) {
        bitField0_ |= 0x00000100;
        fixed32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 fixed32_field = 9;</code>
       */
      public Builder clearFixed32Field() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed32Field_ = 0;
        onChanged();
        return this;
      }

      private long fixed64Field_ ;
      /**
       * <code>optional fixed64 fixed64_field = 10;</code>
       */
      public boolean hasFixed64Field() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional fixed64 fixed64_field = 10;</code>
       */
      public long getFixed64Field() {
        return fixed64Field_;
      }
      /**
       * <code>optional fixed64 fixed64_field = 10;</code>
       */
      public Builder setFixed64Field(long value) {
        bitField0_ |= 0x00000200;
        fixed64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 fixed64_field = 10;</code>
       */
      public Builder clearFixed64Field() {
        bitField0_ = (bitField0_ & ~0x00000200);
        fixed64Field_ = 0L;
        onChanged();
        return this;
      }

      private int sfixed32Field_ ;
      /**
       * <code>optional sfixed32 sfixed32_field = 11;</code>
       */
      public boolean hasSfixed32Field() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional sfixed32 sfixed32_field = 11;</code>
       */
      public int getSfixed32Field() {
        return sfixed32Field_;
      }
      /**
       * <code>optional sfixed32 sfixed32_field = 11;</code>
       */
      public Builder setSfixed32Field(int value) {
        bitField0_ |= 0x00000400;
        sfixed32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed32 sfixed32_field = 11;</code>
       */
      public Builder clearSfixed32Field() {
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed32Field_ = 0;
        onChanged();
        return this;
      }

      private long sfixed64Field_ ;
      /**
       * <code>optional sfixed64 sfixed64_field = 12;</code>
       */
      public boolean hasSfixed64Field() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional sfixed64 sfixed64_field = 12;</code>
       */
      public long getSfixed64Field() {
        return sfixed64Field_;
      }
      /**
       * <code>optional sfixed64 sfixed64_field = 12;</code>
       */
      public Builder setSfixed64Field(long value) {
        bitField0_ |= 0x00000800;
        sfixed64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed64 sfixed64_field = 12;</code>
       */
      public Builder clearSfixed64Field() {
        bitField0_ = (bitField0_ & ~0x00000800);
        sfixed64Field_ = 0L;
        onChanged();
        return this;
      }

      private boolean boolField_ ;
      /**
       * <code>optional bool bool_field = 13;</code>
       */
      public boolean hasBoolField() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool bool_field = 13;</code>
       */
      public boolean getBoolField() {
        return boolField_;
      }
      /**
       * <code>optional bool bool_field = 13;</code>
       */
      public Builder setBoolField(boolean value) {
        bitField0_ |= 0x00001000;
        boolField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool bool_field = 13;</code>
       */
      public Builder clearBoolField() {
        bitField0_ = (bitField0_ & ~0x00001000);
        boolField_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object stringField_ = "";
      /**
       * <code>optional string string_field = 14;</code>
       */
      public boolean hasStringField() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string string_field = 14;</code>
       */
      public java.lang.String getStringField() {
        java.lang.Object ref = stringField_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringField_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string string_field = 14;</code>
       */
      public com.google.protobuf.ByteString
          getStringFieldBytes() {
        java.lang.Object ref = stringField_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringField_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string string_field = 14;</code>
       */
      public Builder setStringField(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        stringField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_field = 14;</code>
       */
      public Builder clearStringField() {
        bitField0_ = (bitField0_ & ~0x00002000);
        stringField_ = getDefaultInstance().getStringField();
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_field = 14;</code>
       */
      public Builder setStringFieldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        stringField_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesField_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes bytes_field = 15;</code>
       */
      public boolean hasBytesField() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bytes bytes_field = 15;</code>
       */
      public com.google.protobuf.ByteString getBytesField() {
        return bytesField_;
      }
      /**
       * <code>optional bytes bytes_field = 15;</code>
       */
      public Builder setBytesField(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        bytesField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes bytes_field = 15;</code>
       */
      public Builder clearBytesField() {
        bitField0_ = (bitField0_ & ~0x00004000);
        bytesField_ = getDefaultInstance().getBytesField();
        onChanged();
        return this;
      }

      private me.lyh.protobuf.generic.proto2.Schemas.Color colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public boolean hasColorField() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField() {
        return colorField_;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public Builder setColorField(me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00008000;
        colorField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public Builder clearColorField() {
        bitField0_ = (bitField0_ & ~0x00008000);
        colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:me.lyh.protobuf.generic.proto2.Optional)
    }

    static {
      defaultInstance = new Optional(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:me.lyh.protobuf.generic.proto2.Optional)
  }

  public interface RepeatedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:me.lyh.protobuf.generic.proto2.Repeated)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double double_field = 1;</code>
     */
    java.util.List<java.lang.Double> getDoubleFieldList();
    /**
     * <code>repeated double double_field = 1;</code>
     */
    int getDoubleFieldCount();
    /**
     * <code>repeated double double_field = 1;</code>
     */
    double getDoubleField(int index);

    /**
     * <code>repeated float float_field = 2;</code>
     */
    java.util.List<java.lang.Float> getFloatFieldList();
    /**
     * <code>repeated float float_field = 2;</code>
     */
    int getFloatFieldCount();
    /**
     * <code>repeated float float_field = 2;</code>
     */
    float getFloatField(int index);

    /**
     * <code>repeated int32 int32_field = 3;</code>
     */
    java.util.List<java.lang.Integer> getInt32FieldList();
    /**
     * <code>repeated int32 int32_field = 3;</code>
     */
    int getInt32FieldCount();
    /**
     * <code>repeated int32 int32_field = 3;</code>
     */
    int getInt32Field(int index);

    /**
     * <code>repeated int64 int64_field = 4;</code>
     */
    java.util.List<java.lang.Long> getInt64FieldList();
    /**
     * <code>repeated int64 int64_field = 4;</code>
     */
    int getInt64FieldCount();
    /**
     * <code>repeated int64 int64_field = 4;</code>
     */
    long getInt64Field(int index);

    /**
     * <code>repeated uint32 uint32_field = 5;</code>
     */
    java.util.List<java.lang.Integer> getUint32FieldList();
    /**
     * <code>repeated uint32 uint32_field = 5;</code>
     */
    int getUint32FieldCount();
    /**
     * <code>repeated uint32 uint32_field = 5;</code>
     */
    int getUint32Field(int index);

    /**
     * <code>repeated uint64 uint64_field = 6;</code>
     */
    java.util.List<java.lang.Long> getUint64FieldList();
    /**
     * <code>repeated uint64 uint64_field = 6;</code>
     */
    int getUint64FieldCount();
    /**
     * <code>repeated uint64 uint64_field = 6;</code>
     */
    long getUint64Field(int index);

    /**
     * <code>repeated sint32 sint32_field = 7;</code>
     */
    java.util.List<java.lang.Integer> getSint32FieldList();
    /**
     * <code>repeated sint32 sint32_field = 7;</code>
     */
    int getSint32FieldCount();
    /**
     * <code>repeated sint32 sint32_field = 7;</code>
     */
    int getSint32Field(int index);

    /**
     * <code>repeated sint64 sint64_field = 8;</code>
     */
    java.util.List<java.lang.Long> getSint64FieldList();
    /**
     * <code>repeated sint64 sint64_field = 8;</code>
     */
    int getSint64FieldCount();
    /**
     * <code>repeated sint64 sint64_field = 8;</code>
     */
    long getSint64Field(int index);

    /**
     * <code>repeated fixed32 fixed32_field = 9;</code>
     */
    java.util.List<java.lang.Integer> getFixed32FieldList();
    /**
     * <code>repeated fixed32 fixed32_field = 9;</code>
     */
    int getFixed32FieldCount();
    /**
     * <code>repeated fixed32 fixed32_field = 9;</code>
     */
    int getFixed32Field(int index);

    /**
     * <code>repeated fixed64 fixed64_field = 10;</code>
     */
    java.util.List<java.lang.Long> getFixed64FieldList();
    /**
     * <code>repeated fixed64 fixed64_field = 10;</code>
     */
    int getFixed64FieldCount();
    /**
     * <code>repeated fixed64 fixed64_field = 10;</code>
     */
    long getFixed64Field(int index);

    /**
     * <code>repeated sfixed32 sfixed32_field = 11;</code>
     */
    java.util.List<java.lang.Integer> getSfixed32FieldList();
    /**
     * <code>repeated sfixed32 sfixed32_field = 11;</code>
     */
    int getSfixed32FieldCount();
    /**
     * <code>repeated sfixed32 sfixed32_field = 11;</code>
     */
    int getSfixed32Field(int index);

    /**
     * <code>repeated sfixed64 sfixed64_field = 12;</code>
     */
    java.util.List<java.lang.Long> getSfixed64FieldList();
    /**
     * <code>repeated sfixed64 sfixed64_field = 12;</code>
     */
    int getSfixed64FieldCount();
    /**
     * <code>repeated sfixed64 sfixed64_field = 12;</code>
     */
    long getSfixed64Field(int index);

    /**
     * <code>repeated bool bool_field = 13;</code>
     */
    java.util.List<java.lang.Boolean> getBoolFieldList();
    /**
     * <code>repeated bool bool_field = 13;</code>
     */
    int getBoolFieldCount();
    /**
     * <code>repeated bool bool_field = 13;</code>
     */
    boolean getBoolField(int index);

    /**
     * <code>repeated string string_field = 14;</code>
     */
    com.google.protobuf.ProtocolStringList
        getStringFieldList();
    /**
     * <code>repeated string string_field = 14;</code>
     */
    int getStringFieldCount();
    /**
     * <code>repeated string string_field = 14;</code>
     */
    java.lang.String getStringField(int index);
    /**
     * <code>repeated string string_field = 14;</code>
     */
    com.google.protobuf.ByteString
        getStringFieldBytes(int index);

    /**
     * <code>repeated bytes bytes_field = 15;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getBytesFieldList();
    /**
     * <code>repeated bytes bytes_field = 15;</code>
     */
    int getBytesFieldCount();
    /**
     * <code>repeated bytes bytes_field = 15;</code>
     */
    com.google.protobuf.ByteString getBytesField(int index);

    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldList();
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    int getColorFieldCount();
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Color getColorField(int index);
  }
  /**
   * Protobuf type {@code me.lyh.protobuf.generic.proto2.Repeated}
   */
  public static final class Repeated extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:me.lyh.protobuf.generic.proto2.Repeated)
      RepeatedOrBuilder {
    // Use Repeated.newBuilder() to construct.
    private Repeated(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Repeated(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Repeated defaultInstance;
    public static Repeated getDefaultInstance() {
      return defaultInstance;
    }

    public Repeated getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Repeated(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                doubleField_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              doubleField_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                doubleField_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                doubleField_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                floatField_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              floatField_.add(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                floatField_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                floatField_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                int32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              int32Field_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                int32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                int32Field_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                int64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              int64Field_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                int64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                int64Field_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                uint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              uint32Field_.add(input.readUInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                uint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                uint32Field_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                uint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              uint64Field_.add(input.readUInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                uint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                uint64Field_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                sint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              sint32Field_.add(input.readSInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                sint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                sint32Field_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                sint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              sint64Field_.add(input.readSInt64());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                sint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                sint64Field_.add(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 77: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                fixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              fixed32Field_.add(input.readFixed32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                fixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                fixed32Field_.add(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 81: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                fixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              fixed64Field_.add(input.readFixed64());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                fixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                fixed64Field_.add(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 93: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                sfixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              sfixed32Field_.add(input.readSFixed32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                sfixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                sfixed32Field_.add(input.readSFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 97: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                sfixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000800;
              }
              sfixed64Field_.add(input.readSFixed64());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                sfixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                sfixed64Field_.add(input.readSFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                boolField_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00001000;
              }
              boolField_.add(input.readBool());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                boolField_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                boolField_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                stringField_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00002000;
              }
              stringField_.add(bs);
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                bytesField_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00004000;
              }
              bytesField_.add(input.readBytes());
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
                } else {
                if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                  colorField_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>();
                  mutable_bitField0_ |= 0x00008000;
                }
                colorField_.add(value);
              }
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(16, rawValue);
                  } else {
                  if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                    colorField_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>();
                    mutable_bitField0_ |= 0x00008000;
                  }
                  colorField_.add(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          doubleField_ = java.util.Collections.unmodifiableList(doubleField_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          floatField_ = java.util.Collections.unmodifiableList(floatField_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          int32Field_ = java.util.Collections.unmodifiableList(int32Field_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          int64Field_ = java.util.Collections.unmodifiableList(int64Field_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          uint32Field_ = java.util.Collections.unmodifiableList(uint32Field_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          uint64Field_ = java.util.Collections.unmodifiableList(uint64Field_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          sint32Field_ = java.util.Collections.unmodifiableList(sint32Field_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          sint64Field_ = java.util.Collections.unmodifiableList(sint64Field_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32Field_ = java.util.Collections.unmodifiableList(fixed32Field_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64Field_ = java.util.Collections.unmodifiableList(fixed64Field_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32Field_ = java.util.Collections.unmodifiableList(sfixed32Field_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64Field_ = java.util.Collections.unmodifiableList(sfixed64Field_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          boolField_ = java.util.Collections.unmodifiableList(boolField_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          stringField_ = stringField_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          bytesField_ = java.util.Collections.unmodifiableList(bytesField_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          colorField_ = java.util.Collections.unmodifiableList(colorField_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Repeated_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Repeated_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.lyh.protobuf.generic.proto2.Schemas.Repeated.class, me.lyh.protobuf.generic.proto2.Schemas.Repeated.Builder.class);
    }

    public static com.google.protobuf.Parser<Repeated> PARSER =
        new com.google.protobuf.AbstractParser<Repeated>() {
      public Repeated parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Repeated(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Repeated> getParserForType() {
      return PARSER;
    }

    public static final int DOUBLE_FIELD_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> doubleField_;
    /**
     * <code>repeated double double_field = 1;</code>
     */
    public java.util.List<java.lang.Double>
        getDoubleFieldList() {
      return doubleField_;
    }
    /**
     * <code>repeated double double_field = 1;</code>
     */
    public int getDoubleFieldCount() {
      return doubleField_.size();
    }
    /**
     * <code>repeated double double_field = 1;</code>
     */
    public double getDoubleField(int index) {
      return doubleField_.get(index);
    }

    public static final int FLOAT_FIELD_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Float> floatField_;
    /**
     * <code>repeated float float_field = 2;</code>
     */
    public java.util.List<java.lang.Float>
        getFloatFieldList() {
      return floatField_;
    }
    /**
     * <code>repeated float float_field = 2;</code>
     */
    public int getFloatFieldCount() {
      return floatField_.size();
    }
    /**
     * <code>repeated float float_field = 2;</code>
     */
    public float getFloatField(int index) {
      return floatField_.get(index);
    }

    public static final int INT32_FIELD_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> int32Field_;
    /**
     * <code>repeated int32 int32_field = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getInt32FieldList() {
      return int32Field_;
    }
    /**
     * <code>repeated int32 int32_field = 3;</code>
     */
    public int getInt32FieldCount() {
      return int32Field_.size();
    }
    /**
     * <code>repeated int32 int32_field = 3;</code>
     */
    public int getInt32Field(int index) {
      return int32Field_.get(index);
    }

    public static final int INT64_FIELD_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> int64Field_;
    /**
     * <code>repeated int64 int64_field = 4;</code>
     */
    public java.util.List<java.lang.Long>
        getInt64FieldList() {
      return int64Field_;
    }
    /**
     * <code>repeated int64 int64_field = 4;</code>
     */
    public int getInt64FieldCount() {
      return int64Field_.size();
    }
    /**
     * <code>repeated int64 int64_field = 4;</code>
     */
    public long getInt64Field(int index) {
      return int64Field_.get(index);
    }

    public static final int UINT32_FIELD_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> uint32Field_;
    /**
     * <code>repeated uint32 uint32_field = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getUint32FieldList() {
      return uint32Field_;
    }
    /**
     * <code>repeated uint32 uint32_field = 5;</code>
     */
    public int getUint32FieldCount() {
      return uint32Field_.size();
    }
    /**
     * <code>repeated uint32 uint32_field = 5;</code>
     */
    public int getUint32Field(int index) {
      return uint32Field_.get(index);
    }

    public static final int UINT64_FIELD_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Long> uint64Field_;
    /**
     * <code>repeated uint64 uint64_field = 6;</code>
     */
    public java.util.List<java.lang.Long>
        getUint64FieldList() {
      return uint64Field_;
    }
    /**
     * <code>repeated uint64 uint64_field = 6;</code>
     */
    public int getUint64FieldCount() {
      return uint64Field_.size();
    }
    /**
     * <code>repeated uint64 uint64_field = 6;</code>
     */
    public long getUint64Field(int index) {
      return uint64Field_.get(index);
    }

    public static final int SINT32_FIELD_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> sint32Field_;
    /**
     * <code>repeated sint32 sint32_field = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getSint32FieldList() {
      return sint32Field_;
    }
    /**
     * <code>repeated sint32 sint32_field = 7;</code>
     */
    public int getSint32FieldCount() {
      return sint32Field_.size();
    }
    /**
     * <code>repeated sint32 sint32_field = 7;</code>
     */
    public int getSint32Field(int index) {
      return sint32Field_.get(index);
    }

    public static final int SINT64_FIELD_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Long> sint64Field_;
    /**
     * <code>repeated sint64 sint64_field = 8;</code>
     */
    public java.util.List<java.lang.Long>
        getSint64FieldList() {
      return sint64Field_;
    }
    /**
     * <code>repeated sint64 sint64_field = 8;</code>
     */
    public int getSint64FieldCount() {
      return sint64Field_.size();
    }
    /**
     * <code>repeated sint64 sint64_field = 8;</code>
     */
    public long getSint64Field(int index) {
      return sint64Field_.get(index);
    }

    public static final int FIXED32_FIELD_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> fixed32Field_;
    /**
     * <code>repeated fixed32 fixed32_field = 9;</code>
     */
    public java.util.List<java.lang.Integer>
        getFixed32FieldList() {
      return fixed32Field_;
    }
    /**
     * <code>repeated fixed32 fixed32_field = 9;</code>
     */
    public int getFixed32FieldCount() {
      return fixed32Field_.size();
    }
    /**
     * <code>repeated fixed32 fixed32_field = 9;</code>
     */
    public int getFixed32Field(int index) {
      return fixed32Field_.get(index);
    }

    public static final int FIXED64_FIELD_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Long> fixed64Field_;
    /**
     * <code>repeated fixed64 fixed64_field = 10;</code>
     */
    public java.util.List<java.lang.Long>
        getFixed64FieldList() {
      return fixed64Field_;
    }
    /**
     * <code>repeated fixed64 fixed64_field = 10;</code>
     */
    public int getFixed64FieldCount() {
      return fixed64Field_.size();
    }
    /**
     * <code>repeated fixed64 fixed64_field = 10;</code>
     */
    public long getFixed64Field(int index) {
      return fixed64Field_.get(index);
    }

    public static final int SFIXED32_FIELD_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> sfixed32Field_;
    /**
     * <code>repeated sfixed32 sfixed32_field = 11;</code>
     */
    public java.util.List<java.lang.Integer>
        getSfixed32FieldList() {
      return sfixed32Field_;
    }
    /**
     * <code>repeated sfixed32 sfixed32_field = 11;</code>
     */
    public int getSfixed32FieldCount() {
      return sfixed32Field_.size();
    }
    /**
     * <code>repeated sfixed32 sfixed32_field = 11;</code>
     */
    public int getSfixed32Field(int index) {
      return sfixed32Field_.get(index);
    }

    public static final int SFIXED64_FIELD_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Long> sfixed64Field_;
    /**
     * <code>repeated sfixed64 sfixed64_field = 12;</code>
     */
    public java.util.List<java.lang.Long>
        getSfixed64FieldList() {
      return sfixed64Field_;
    }
    /**
     * <code>repeated sfixed64 sfixed64_field = 12;</code>
     */
    public int getSfixed64FieldCount() {
      return sfixed64Field_.size();
    }
    /**
     * <code>repeated sfixed64 sfixed64_field = 12;</code>
     */
    public long getSfixed64Field(int index) {
      return sfixed64Field_.get(index);
    }

    public static final int BOOL_FIELD_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Boolean> boolField_;
    /**
     * <code>repeated bool bool_field = 13;</code>
     */
    public java.util.List<java.lang.Boolean>
        getBoolFieldList() {
      return boolField_;
    }
    /**
     * <code>repeated bool bool_field = 13;</code>
     */
    public int getBoolFieldCount() {
      return boolField_.size();
    }
    /**
     * <code>repeated bool bool_field = 13;</code>
     */
    public boolean getBoolField(int index) {
      return boolField_.get(index);
    }

    public static final int STRING_FIELD_FIELD_NUMBER = 14;
    private com.google.protobuf.LazyStringList stringField_;
    /**
     * <code>repeated string string_field = 14;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getStringFieldList() {
      return stringField_;
    }
    /**
     * <code>repeated string string_field = 14;</code>
     */
    public int getStringFieldCount() {
      return stringField_.size();
    }
    /**
     * <code>repeated string string_field = 14;</code>
     */
    public java.lang.String getStringField(int index) {
      return stringField_.get(index);
    }
    /**
     * <code>repeated string string_field = 14;</code>
     */
    public com.google.protobuf.ByteString
        getStringFieldBytes(int index) {
      return stringField_.getByteString(index);
    }

    public static final int BYTES_FIELD_FIELD_NUMBER = 15;
    private java.util.List<com.google.protobuf.ByteString> bytesField_;
    /**
     * <code>repeated bytes bytes_field = 15;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getBytesFieldList() {
      return bytesField_;
    }
    /**
     * <code>repeated bytes bytes_field = 15;</code>
     */
    public int getBytesFieldCount() {
      return bytesField_.size();
    }
    /**
     * <code>repeated bytes bytes_field = 15;</code>
     */
    public com.google.protobuf.ByteString getBytesField(int index) {
      return bytesField_.get(index);
    }

    public static final int COLOR_FIELD_FIELD_NUMBER = 16;
    private java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> colorField_;
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    public java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldList() {
      return colorField_;
    }
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    public int getColorFieldCount() {
      return colorField_.size();
    }
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField(int index) {
      return colorField_.get(index);
    }

    private void initFields() {
      doubleField_ = java.util.Collections.emptyList();
      floatField_ = java.util.Collections.emptyList();
      int32Field_ = java.util.Collections.emptyList();
      int64Field_ = java.util.Collections.emptyList();
      uint32Field_ = java.util.Collections.emptyList();
      uint64Field_ = java.util.Collections.emptyList();
      sint32Field_ = java.util.Collections.emptyList();
      sint64Field_ = java.util.Collections.emptyList();
      fixed32Field_ = java.util.Collections.emptyList();
      fixed64Field_ = java.util.Collections.emptyList();
      sfixed32Field_ = java.util.Collections.emptyList();
      sfixed64Field_ = java.util.Collections.emptyList();
      boolField_ = java.util.Collections.emptyList();
      stringField_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bytesField_ = java.util.Collections.emptyList();
      colorField_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < doubleField_.size(); i++) {
        output.writeDouble(1, doubleField_.get(i));
      }
      for (int i = 0; i < floatField_.size(); i++) {
        output.writeFloat(2, floatField_.get(i));
      }
      for (int i = 0; i < int32Field_.size(); i++) {
        output.writeInt32(3, int32Field_.get(i));
      }
      for (int i = 0; i < int64Field_.size(); i++) {
        output.writeInt64(4, int64Field_.get(i));
      }
      for (int i = 0; i < uint32Field_.size(); i++) {
        output.writeUInt32(5, uint32Field_.get(i));
      }
      for (int i = 0; i < uint64Field_.size(); i++) {
        output.writeUInt64(6, uint64Field_.get(i));
      }
      for (int i = 0; i < sint32Field_.size(); i++) {
        output.writeSInt32(7, sint32Field_.get(i));
      }
      for (int i = 0; i < sint64Field_.size(); i++) {
        output.writeSInt64(8, sint64Field_.get(i));
      }
      for (int i = 0; i < fixed32Field_.size(); i++) {
        output.writeFixed32(9, fixed32Field_.get(i));
      }
      for (int i = 0; i < fixed64Field_.size(); i++) {
        output.writeFixed64(10, fixed64Field_.get(i));
      }
      for (int i = 0; i < sfixed32Field_.size(); i++) {
        output.writeSFixed32(11, sfixed32Field_.get(i));
      }
      for (int i = 0; i < sfixed64Field_.size(); i++) {
        output.writeSFixed64(12, sfixed64Field_.get(i));
      }
      for (int i = 0; i < boolField_.size(); i++) {
        output.writeBool(13, boolField_.get(i));
      }
      for (int i = 0; i < stringField_.size(); i++) {
        output.writeBytes(14, stringField_.getByteString(i));
      }
      for (int i = 0; i < bytesField_.size(); i++) {
        output.writeBytes(15, bytesField_.get(i));
      }
      for (int i = 0; i < colorField_.size(); i++) {
        output.writeEnum(16, colorField_.get(i).getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleFieldList().size();
        size += dataSize;
        size += 1 * getDoubleFieldList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatFieldList().size();
        size += dataSize;
        size += 1 * getFloatFieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int32Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(int32Field_.get(i));
        }
        size += dataSize;
        size += 1 * getInt32FieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int64Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(int64Field_.get(i));
        }
        size += dataSize;
        size += 1 * getInt64FieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint32Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(uint32Field_.get(i));
        }
        size += dataSize;
        size += 1 * getUint32FieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint64Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(uint64Field_.get(i));
        }
        size += dataSize;
        size += 1 * getUint64FieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint32Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(sint32Field_.get(i));
        }
        size += dataSize;
        size += 1 * getSint32FieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint64Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(sint64Field_.get(i));
        }
        size += dataSize;
        size += 1 * getSint64FieldList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFixed32FieldList().size();
        size += dataSize;
        size += 1 * getFixed32FieldList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getFixed64FieldList().size();
        size += dataSize;
        size += 1 * getFixed64FieldList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getSfixed32FieldList().size();
        size += dataSize;
        size += 1 * getSfixed32FieldList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getSfixed64FieldList().size();
        size += dataSize;
        size += 1 * getSfixed64FieldList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getBoolFieldList().size();
        size += dataSize;
        size += 1 * getBoolFieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stringField_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(stringField_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getStringFieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bytesField_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(bytesField_.get(i));
        }
        size += dataSize;
        size += 1 * getBytesFieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < colorField_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(colorField_.get(i).getNumber());
        }
        size += dataSize;
        size += 2 * colorField_.size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.lyh.protobuf.generic.proto2.Schemas.Repeated parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Repeated parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Repeated parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Repeated parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Repeated parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Repeated parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Repeated parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Repeated parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Repeated parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Repeated parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.lyh.protobuf.generic.proto2.Schemas.Repeated prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code me.lyh.protobuf.generic.proto2.Repeated}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:me.lyh.protobuf.generic.proto2.Repeated)
        me.lyh.protobuf.generic.proto2.Schemas.RepeatedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Repeated_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Repeated_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.lyh.protobuf.generic.proto2.Schemas.Repeated.class, me.lyh.protobuf.generic.proto2.Schemas.Repeated.Builder.class);
      }

      // Construct using me.lyh.protobuf.generic.proto2.Schemas.Repeated.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        doubleField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        floatField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        int32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        int64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        uint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        uint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        sint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        sint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        fixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        sfixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        boolField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        stringField_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00002000);
        bytesField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        colorField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Repeated_descriptor;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Repeated getDefaultInstanceForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.Repeated.getDefaultInstance();
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Repeated build() {
        me.lyh.protobuf.generic.proto2.Schemas.Repeated result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Repeated buildPartial() {
        me.lyh.protobuf.generic.proto2.Schemas.Repeated result = new me.lyh.protobuf.generic.proto2.Schemas.Repeated(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          doubleField_ = java.util.Collections.unmodifiableList(doubleField_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.doubleField_ = doubleField_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          floatField_ = java.util.Collections.unmodifiableList(floatField_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.floatField_ = floatField_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          int32Field_ = java.util.Collections.unmodifiableList(int32Field_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.int32Field_ = int32Field_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          int64Field_ = java.util.Collections.unmodifiableList(int64Field_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.int64Field_ = int64Field_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          uint32Field_ = java.util.Collections.unmodifiableList(uint32Field_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.uint32Field_ = uint32Field_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          uint64Field_ = java.util.Collections.unmodifiableList(uint64Field_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.uint64Field_ = uint64Field_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          sint32Field_ = java.util.Collections.unmodifiableList(sint32Field_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.sint32Field_ = sint32Field_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          sint64Field_ = java.util.Collections.unmodifiableList(sint64Field_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.sint64Field_ = sint64Field_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32Field_ = java.util.Collections.unmodifiableList(fixed32Field_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.fixed32Field_ = fixed32Field_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64Field_ = java.util.Collections.unmodifiableList(fixed64Field_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.fixed64Field_ = fixed64Field_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32Field_ = java.util.Collections.unmodifiableList(sfixed32Field_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.sfixed32Field_ = sfixed32Field_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64Field_ = java.util.Collections.unmodifiableList(sfixed64Field_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.sfixed64Field_ = sfixed64Field_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          boolField_ = java.util.Collections.unmodifiableList(boolField_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.boolField_ = boolField_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          stringField_ = stringField_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.stringField_ = stringField_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          bytesField_ = java.util.Collections.unmodifiableList(bytesField_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.bytesField_ = bytesField_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          colorField_ = java.util.Collections.unmodifiableList(colorField_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.colorField_ = colorField_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.lyh.protobuf.generic.proto2.Schemas.Repeated) {
          return mergeFrom((me.lyh.protobuf.generic.proto2.Schemas.Repeated)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.lyh.protobuf.generic.proto2.Schemas.Repeated other) {
        if (other == me.lyh.protobuf.generic.proto2.Schemas.Repeated.getDefaultInstance()) return this;
        if (!other.doubleField_.isEmpty()) {
          if (doubleField_.isEmpty()) {
            doubleField_ = other.doubleField_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDoubleFieldIsMutable();
            doubleField_.addAll(other.doubleField_);
          }
          onChanged();
        }
        if (!other.floatField_.isEmpty()) {
          if (floatField_.isEmpty()) {
            floatField_ = other.floatField_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFloatFieldIsMutable();
            floatField_.addAll(other.floatField_);
          }
          onChanged();
        }
        if (!other.int32Field_.isEmpty()) {
          if (int32Field_.isEmpty()) {
            int32Field_ = other.int32Field_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureInt32FieldIsMutable();
            int32Field_.addAll(other.int32Field_);
          }
          onChanged();
        }
        if (!other.int64Field_.isEmpty()) {
          if (int64Field_.isEmpty()) {
            int64Field_ = other.int64Field_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureInt64FieldIsMutable();
            int64Field_.addAll(other.int64Field_);
          }
          onChanged();
        }
        if (!other.uint32Field_.isEmpty()) {
          if (uint32Field_.isEmpty()) {
            uint32Field_ = other.uint32Field_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureUint32FieldIsMutable();
            uint32Field_.addAll(other.uint32Field_);
          }
          onChanged();
        }
        if (!other.uint64Field_.isEmpty()) {
          if (uint64Field_.isEmpty()) {
            uint64Field_ = other.uint64Field_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureUint64FieldIsMutable();
            uint64Field_.addAll(other.uint64Field_);
          }
          onChanged();
        }
        if (!other.sint32Field_.isEmpty()) {
          if (sint32Field_.isEmpty()) {
            sint32Field_ = other.sint32Field_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureSint32FieldIsMutable();
            sint32Field_.addAll(other.sint32Field_);
          }
          onChanged();
        }
        if (!other.sint64Field_.isEmpty()) {
          if (sint64Field_.isEmpty()) {
            sint64Field_ = other.sint64Field_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureSint64FieldIsMutable();
            sint64Field_.addAll(other.sint64Field_);
          }
          onChanged();
        }
        if (!other.fixed32Field_.isEmpty()) {
          if (fixed32Field_.isEmpty()) {
            fixed32Field_ = other.fixed32Field_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureFixed32FieldIsMutable();
            fixed32Field_.addAll(other.fixed32Field_);
          }
          onChanged();
        }
        if (!other.fixed64Field_.isEmpty()) {
          if (fixed64Field_.isEmpty()) {
            fixed64Field_ = other.fixed64Field_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureFixed64FieldIsMutable();
            fixed64Field_.addAll(other.fixed64Field_);
          }
          onChanged();
        }
        if (!other.sfixed32Field_.isEmpty()) {
          if (sfixed32Field_.isEmpty()) {
            sfixed32Field_ = other.sfixed32Field_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureSfixed32FieldIsMutable();
            sfixed32Field_.addAll(other.sfixed32Field_);
          }
          onChanged();
        }
        if (!other.sfixed64Field_.isEmpty()) {
          if (sfixed64Field_.isEmpty()) {
            sfixed64Field_ = other.sfixed64Field_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureSfixed64FieldIsMutable();
            sfixed64Field_.addAll(other.sfixed64Field_);
          }
          onChanged();
        }
        if (!other.boolField_.isEmpty()) {
          if (boolField_.isEmpty()) {
            boolField_ = other.boolField_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureBoolFieldIsMutable();
            boolField_.addAll(other.boolField_);
          }
          onChanged();
        }
        if (!other.stringField_.isEmpty()) {
          if (stringField_.isEmpty()) {
            stringField_ = other.stringField_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureStringFieldIsMutable();
            stringField_.addAll(other.stringField_);
          }
          onChanged();
        }
        if (!other.bytesField_.isEmpty()) {
          if (bytesField_.isEmpty()) {
            bytesField_ = other.bytesField_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureBytesFieldIsMutable();
            bytesField_.addAll(other.bytesField_);
          }
          onChanged();
        }
        if (!other.colorField_.isEmpty()) {
          if (colorField_.isEmpty()) {
            colorField_ = other.colorField_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureColorFieldIsMutable();
            colorField_.addAll(other.colorField_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.lyh.protobuf.generic.proto2.Schemas.Repeated parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.lyh.protobuf.generic.proto2.Schemas.Repeated) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> doubleField_ = java.util.Collections.emptyList();
      private void ensureDoubleFieldIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          doubleField_ = new java.util.ArrayList<java.lang.Double>(doubleField_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double double_field = 1;</code>
       */
      public java.util.List<java.lang.Double>
          getDoubleFieldList() {
        return java.util.Collections.unmodifiableList(doubleField_);
      }
      /**
       * <code>repeated double double_field = 1;</code>
       */
      public int getDoubleFieldCount() {
        return doubleField_.size();
      }
      /**
       * <code>repeated double double_field = 1;</code>
       */
      public double getDoubleField(int index) {
        return doubleField_.get(index);
      }
      /**
       * <code>repeated double double_field = 1;</code>
       */
      public Builder setDoubleField(
          int index, double value) {
        ensureDoubleFieldIsMutable();
        doubleField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field = 1;</code>
       */
      public Builder addDoubleField(double value) {
        ensureDoubleFieldIsMutable();
        doubleField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field = 1;</code>
       */
      public Builder addAllDoubleField(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDoubleFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, doubleField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field = 1;</code>
       */
      public Builder clearDoubleField() {
        doubleField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> floatField_ = java.util.Collections.emptyList();
      private void ensureFloatFieldIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          floatField_ = new java.util.ArrayList<java.lang.Float>(floatField_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float float_field = 2;</code>
       */
      public java.util.List<java.lang.Float>
          getFloatFieldList() {
        return java.util.Collections.unmodifiableList(floatField_);
      }
      /**
       * <code>repeated float float_field = 2;</code>
       */
      public int getFloatFieldCount() {
        return floatField_.size();
      }
      /**
       * <code>repeated float float_field = 2;</code>
       */
      public float getFloatField(int index) {
        return floatField_.get(index);
      }
      /**
       * <code>repeated float float_field = 2;</code>
       */
      public Builder setFloatField(
          int index, float value) {
        ensureFloatFieldIsMutable();
        floatField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_field = 2;</code>
       */
      public Builder addFloatField(float value) {
        ensureFloatFieldIsMutable();
        floatField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_field = 2;</code>
       */
      public Builder addAllFloatField(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, floatField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_field = 2;</code>
       */
      public Builder clearFloatField() {
        floatField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> int32Field_ = java.util.Collections.emptyList();
      private void ensureInt32FieldIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          int32Field_ = new java.util.ArrayList<java.lang.Integer>(int32Field_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 int32_field = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getInt32FieldList() {
        return java.util.Collections.unmodifiableList(int32Field_);
      }
      /**
       * <code>repeated int32 int32_field = 3;</code>
       */
      public int getInt32FieldCount() {
        return int32Field_.size();
      }
      /**
       * <code>repeated int32 int32_field = 3;</code>
       */
      public int getInt32Field(int index) {
        return int32Field_.get(index);
      }
      /**
       * <code>repeated int32 int32_field = 3;</code>
       */
      public Builder setInt32Field(
          int index, int value) {
        ensureInt32FieldIsMutable();
        int32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int32_field = 3;</code>
       */
      public Builder addInt32Field(int value) {
        ensureInt32FieldIsMutable();
        int32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int32_field = 3;</code>
       */
      public Builder addAllInt32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInt32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int32_field = 3;</code>
       */
      public Builder clearInt32Field() {
        int32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> int64Field_ = java.util.Collections.emptyList();
      private void ensureInt64FieldIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          int64Field_ = new java.util.ArrayList<java.lang.Long>(int64Field_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 int64_field = 4;</code>
       */
      public java.util.List<java.lang.Long>
          getInt64FieldList() {
        return java.util.Collections.unmodifiableList(int64Field_);
      }
      /**
       * <code>repeated int64 int64_field = 4;</code>
       */
      public int getInt64FieldCount() {
        return int64Field_.size();
      }
      /**
       * <code>repeated int64 int64_field = 4;</code>
       */
      public long getInt64Field(int index) {
        return int64Field_.get(index);
      }
      /**
       * <code>repeated int64 int64_field = 4;</code>
       */
      public Builder setInt64Field(
          int index, long value) {
        ensureInt64FieldIsMutable();
        int64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_field = 4;</code>
       */
      public Builder addInt64Field(long value) {
        ensureInt64FieldIsMutable();
        int64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_field = 4;</code>
       */
      public Builder addAllInt64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInt64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_field = 4;</code>
       */
      public Builder clearInt64Field() {
        int64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> uint32Field_ = java.util.Collections.emptyList();
      private void ensureUint32FieldIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          uint32Field_ = new java.util.ArrayList<java.lang.Integer>(uint32Field_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint32 uint32_field = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getUint32FieldList() {
        return java.util.Collections.unmodifiableList(uint32Field_);
      }
      /**
       * <code>repeated uint32 uint32_field = 5;</code>
       */
      public int getUint32FieldCount() {
        return uint32Field_.size();
      }
      /**
       * <code>repeated uint32 uint32_field = 5;</code>
       */
      public int getUint32Field(int index) {
        return uint32Field_.get(index);
      }
      /**
       * <code>repeated uint32 uint32_field = 5;</code>
       */
      public Builder setUint32Field(
          int index, int value) {
        ensureUint32FieldIsMutable();
        uint32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32_field = 5;</code>
       */
      public Builder addUint32Field(int value) {
        ensureUint32FieldIsMutable();
        uint32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32_field = 5;</code>
       */
      public Builder addAllUint32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUint32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uint32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32_field = 5;</code>
       */
      public Builder clearUint32Field() {
        uint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> uint64Field_ = java.util.Collections.emptyList();
      private void ensureUint64FieldIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          uint64Field_ = new java.util.ArrayList<java.lang.Long>(uint64Field_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated uint64 uint64_field = 6;</code>
       */
      public java.util.List<java.lang.Long>
          getUint64FieldList() {
        return java.util.Collections.unmodifiableList(uint64Field_);
      }
      /**
       * <code>repeated uint64 uint64_field = 6;</code>
       */
      public int getUint64FieldCount() {
        return uint64Field_.size();
      }
      /**
       * <code>repeated uint64 uint64_field = 6;</code>
       */
      public long getUint64Field(int index) {
        return uint64Field_.get(index);
      }
      /**
       * <code>repeated uint64 uint64_field = 6;</code>
       */
      public Builder setUint64Field(
          int index, long value) {
        ensureUint64FieldIsMutable();
        uint64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64_field = 6;</code>
       */
      public Builder addUint64Field(long value) {
        ensureUint64FieldIsMutable();
        uint64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64_field = 6;</code>
       */
      public Builder addAllUint64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUint64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uint64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64_field = 6;</code>
       */
      public Builder clearUint64Field() {
        uint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> sint32Field_ = java.util.Collections.emptyList();
      private void ensureSint32FieldIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          sint32Field_ = new java.util.ArrayList<java.lang.Integer>(sint32Field_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated sint32 sint32_field = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getSint32FieldList() {
        return java.util.Collections.unmodifiableList(sint32Field_);
      }
      /**
       * <code>repeated sint32 sint32_field = 7;</code>
       */
      public int getSint32FieldCount() {
        return sint32Field_.size();
      }
      /**
       * <code>repeated sint32 sint32_field = 7;</code>
       */
      public int getSint32Field(int index) {
        return sint32Field_.get(index);
      }
      /**
       * <code>repeated sint32 sint32_field = 7;</code>
       */
      public Builder setSint32Field(
          int index, int value) {
        ensureSint32FieldIsMutable();
        sint32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32_field = 7;</code>
       */
      public Builder addSint32Field(int value) {
        ensureSint32FieldIsMutable();
        sint32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32_field = 7;</code>
       */
      public Builder addAllSint32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSint32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sint32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32_field = 7;</code>
       */
      public Builder clearSint32Field() {
        sint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> sint64Field_ = java.util.Collections.emptyList();
      private void ensureSint64FieldIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          sint64Field_ = new java.util.ArrayList<java.lang.Long>(sint64Field_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated sint64 sint64_field = 8;</code>
       */
      public java.util.List<java.lang.Long>
          getSint64FieldList() {
        return java.util.Collections.unmodifiableList(sint64Field_);
      }
      /**
       * <code>repeated sint64 sint64_field = 8;</code>
       */
      public int getSint64FieldCount() {
        return sint64Field_.size();
      }
      /**
       * <code>repeated sint64 sint64_field = 8;</code>
       */
      public long getSint64Field(int index) {
        return sint64Field_.get(index);
      }
      /**
       * <code>repeated sint64 sint64_field = 8;</code>
       */
      public Builder setSint64Field(
          int index, long value) {
        ensureSint64FieldIsMutable();
        sint64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64_field = 8;</code>
       */
      public Builder addSint64Field(long value) {
        ensureSint64FieldIsMutable();
        sint64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64_field = 8;</code>
       */
      public Builder addAllSint64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSint64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sint64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64_field = 8;</code>
       */
      public Builder clearSint64Field() {
        sint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> fixed32Field_ = java.util.Collections.emptyList();
      private void ensureFixed32FieldIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32Field_ = new java.util.ArrayList<java.lang.Integer>(fixed32Field_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9;</code>
       */
      public java.util.List<java.lang.Integer>
          getFixed32FieldList() {
        return java.util.Collections.unmodifiableList(fixed32Field_);
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9;</code>
       */
      public int getFixed32FieldCount() {
        return fixed32Field_.size();
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9;</code>
       */
      public int getFixed32Field(int index) {
        return fixed32Field_.get(index);
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9;</code>
       */
      public Builder setFixed32Field(
          int index, int value) {
        ensureFixed32FieldIsMutable();
        fixed32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9;</code>
       */
      public Builder addFixed32Field(int value) {
        ensureFixed32FieldIsMutable();
        fixed32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9;</code>
       */
      public Builder addAllFixed32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFixed32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fixed32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9;</code>
       */
      public Builder clearFixed32Field() {
        fixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> fixed64Field_ = java.util.Collections.emptyList();
      private void ensureFixed64FieldIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64Field_ = new java.util.ArrayList<java.lang.Long>(fixed64Field_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10;</code>
       */
      public java.util.List<java.lang.Long>
          getFixed64FieldList() {
        return java.util.Collections.unmodifiableList(fixed64Field_);
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10;</code>
       */
      public int getFixed64FieldCount() {
        return fixed64Field_.size();
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10;</code>
       */
      public long getFixed64Field(int index) {
        return fixed64Field_.get(index);
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10;</code>
       */
      public Builder setFixed64Field(
          int index, long value) {
        ensureFixed64FieldIsMutable();
        fixed64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10;</code>
       */
      public Builder addFixed64Field(long value) {
        ensureFixed64FieldIsMutable();
        fixed64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10;</code>
       */
      public Builder addAllFixed64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFixed64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fixed64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10;</code>
       */
      public Builder clearFixed64Field() {
        fixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> sfixed32Field_ = java.util.Collections.emptyList();
      private void ensureSfixed32FieldIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32Field_ = new java.util.ArrayList<java.lang.Integer>(sfixed32Field_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11;</code>
       */
      public java.util.List<java.lang.Integer>
          getSfixed32FieldList() {
        return java.util.Collections.unmodifiableList(sfixed32Field_);
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11;</code>
       */
      public int getSfixed32FieldCount() {
        return sfixed32Field_.size();
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11;</code>
       */
      public int getSfixed32Field(int index) {
        return sfixed32Field_.get(index);
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11;</code>
       */
      public Builder setSfixed32Field(
          int index, int value) {
        ensureSfixed32FieldIsMutable();
        sfixed32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11;</code>
       */
      public Builder addSfixed32Field(int value) {
        ensureSfixed32FieldIsMutable();
        sfixed32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11;</code>
       */
      public Builder addAllSfixed32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSfixed32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sfixed32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11;</code>
       */
      public Builder clearSfixed32Field() {
        sfixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> sfixed64Field_ = java.util.Collections.emptyList();
      private void ensureSfixed64FieldIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64Field_ = new java.util.ArrayList<java.lang.Long>(sfixed64Field_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12;</code>
       */
      public java.util.List<java.lang.Long>
          getSfixed64FieldList() {
        return java.util.Collections.unmodifiableList(sfixed64Field_);
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12;</code>
       */
      public int getSfixed64FieldCount() {
        return sfixed64Field_.size();
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12;</code>
       */
      public long getSfixed64Field(int index) {
        return sfixed64Field_.get(index);
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12;</code>
       */
      public Builder setSfixed64Field(
          int index, long value) {
        ensureSfixed64FieldIsMutable();
        sfixed64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12;</code>
       */
      public Builder addSfixed64Field(long value) {
        ensureSfixed64FieldIsMutable();
        sfixed64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12;</code>
       */
      public Builder addAllSfixed64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSfixed64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sfixed64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12;</code>
       */
      public Builder clearSfixed64Field() {
        sfixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Boolean> boolField_ = java.util.Collections.emptyList();
      private void ensureBoolFieldIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          boolField_ = new java.util.ArrayList<java.lang.Boolean>(boolField_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated bool bool_field = 13;</code>
       */
      public java.util.List<java.lang.Boolean>
          getBoolFieldList() {
        return java.util.Collections.unmodifiableList(boolField_);
      }
      /**
       * <code>repeated bool bool_field = 13;</code>
       */
      public int getBoolFieldCount() {
        return boolField_.size();
      }
      /**
       * <code>repeated bool bool_field = 13;</code>
       */
      public boolean getBoolField(int index) {
        return boolField_.get(index);
      }
      /**
       * <code>repeated bool bool_field = 13;</code>
       */
      public Builder setBoolField(
          int index, boolean value) {
        ensureBoolFieldIsMutable();
        boolField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_field = 13;</code>
       */
      public Builder addBoolField(boolean value) {
        ensureBoolFieldIsMutable();
        boolField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_field = 13;</code>
       */
      public Builder addAllBoolField(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureBoolFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, boolField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_field = 13;</code>
       */
      public Builder clearBoolField() {
        boolField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList stringField_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStringFieldIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          stringField_ = new com.google.protobuf.LazyStringArrayList(stringField_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getStringFieldList() {
        return stringField_.getUnmodifiableView();
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public int getStringFieldCount() {
        return stringField_.size();
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public java.lang.String getStringField(int index) {
        return stringField_.get(index);
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public com.google.protobuf.ByteString
          getStringFieldBytes(int index) {
        return stringField_.getByteString(index);
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public Builder setStringField(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringFieldIsMutable();
        stringField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public Builder addStringField(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringFieldIsMutable();
        stringField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public Builder addAllStringField(
          java.lang.Iterable<java.lang.String> values) {
        ensureStringFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stringField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public Builder clearStringField() {
        stringField_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public Builder addStringFieldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringFieldIsMutable();
        stringField_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> bytesField_ = java.util.Collections.emptyList();
      private void ensureBytesFieldIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          bytesField_ = new java.util.ArrayList<com.google.protobuf.ByteString>(bytesField_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated bytes bytes_field = 15;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getBytesFieldList() {
        return java.util.Collections.unmodifiableList(bytesField_);
      }
      /**
       * <code>repeated bytes bytes_field = 15;</code>
       */
      public int getBytesFieldCount() {
        return bytesField_.size();
      }
      /**
       * <code>repeated bytes bytes_field = 15;</code>
       */
      public com.google.protobuf.ByteString getBytesField(int index) {
        return bytesField_.get(index);
      }
      /**
       * <code>repeated bytes bytes_field = 15;</code>
       */
      public Builder setBytesField(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesFieldIsMutable();
        bytesField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes_field = 15;</code>
       */
      public Builder addBytesField(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesFieldIsMutable();
        bytesField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes_field = 15;</code>
       */
      public Builder addAllBytesField(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureBytesFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bytesField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes_field = 15;</code>
       */
      public Builder clearBytesField() {
        bytesField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      private java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> colorField_ =
        java.util.Collections.emptyList();
      private void ensureColorFieldIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          colorField_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>(colorField_);
          bitField0_ |= 0x00008000;
        }
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldList() {
        return java.util.Collections.unmodifiableList(colorField_);
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public int getColorFieldCount() {
        return colorField_.size();
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField(int index) {
        return colorField_.get(index);
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public Builder setColorField(
          int index, me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorFieldIsMutable();
        colorField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public Builder addColorField(me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorFieldIsMutable();
        colorField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public Builder addAllColorField(
          java.lang.Iterable<? extends me.lyh.protobuf.generic.proto2.Schemas.Color> values) {
        ensureColorFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, colorField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public Builder clearColorField() {
        colorField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:me.lyh.protobuf.generic.proto2.Repeated)
    }

    static {
      defaultInstance = new Repeated(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:me.lyh.protobuf.generic.proto2.Repeated)
  }

  public interface RepeatedPackedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:me.lyh.protobuf.generic.proto2.RepeatedPacked)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double double_field = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Double> getDoubleFieldList();
    /**
     * <code>repeated double double_field = 1 [packed = true];</code>
     */
    int getDoubleFieldCount();
    /**
     * <code>repeated double double_field = 1 [packed = true];</code>
     */
    double getDoubleField(int index);

    /**
     * <code>repeated float float_field = 2 [packed = true];</code>
     */
    java.util.List<java.lang.Float> getFloatFieldList();
    /**
     * <code>repeated float float_field = 2 [packed = true];</code>
     */
    int getFloatFieldCount();
    /**
     * <code>repeated float float_field = 2 [packed = true];</code>
     */
    float getFloatField(int index);

    /**
     * <code>repeated int32 int32_field = 3 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getInt32FieldList();
    /**
     * <code>repeated int32 int32_field = 3 [packed = true];</code>
     */
    int getInt32FieldCount();
    /**
     * <code>repeated int32 int32_field = 3 [packed = true];</code>
     */
    int getInt32Field(int index);

    /**
     * <code>repeated int64 int64_field = 4 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getInt64FieldList();
    /**
     * <code>repeated int64 int64_field = 4 [packed = true];</code>
     */
    int getInt64FieldCount();
    /**
     * <code>repeated int64 int64_field = 4 [packed = true];</code>
     */
    long getInt64Field(int index);

    /**
     * <code>repeated uint32 uint32_field = 5 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getUint32FieldList();
    /**
     * <code>repeated uint32 uint32_field = 5 [packed = true];</code>
     */
    int getUint32FieldCount();
    /**
     * <code>repeated uint32 uint32_field = 5 [packed = true];</code>
     */
    int getUint32Field(int index);

    /**
     * <code>repeated uint64 uint64_field = 6 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getUint64FieldList();
    /**
     * <code>repeated uint64 uint64_field = 6 [packed = true];</code>
     */
    int getUint64FieldCount();
    /**
     * <code>repeated uint64 uint64_field = 6 [packed = true];</code>
     */
    long getUint64Field(int index);

    /**
     * <code>repeated sint32 sint32_field = 7 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getSint32FieldList();
    /**
     * <code>repeated sint32 sint32_field = 7 [packed = true];</code>
     */
    int getSint32FieldCount();
    /**
     * <code>repeated sint32 sint32_field = 7 [packed = true];</code>
     */
    int getSint32Field(int index);

    /**
     * <code>repeated sint64 sint64_field = 8 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getSint64FieldList();
    /**
     * <code>repeated sint64 sint64_field = 8 [packed = true];</code>
     */
    int getSint64FieldCount();
    /**
     * <code>repeated sint64 sint64_field = 8 [packed = true];</code>
     */
    long getSint64Field(int index);

    /**
     * <code>repeated fixed32 fixed32_field = 9 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getFixed32FieldList();
    /**
     * <code>repeated fixed32 fixed32_field = 9 [packed = true];</code>
     */
    int getFixed32FieldCount();
    /**
     * <code>repeated fixed32 fixed32_field = 9 [packed = true];</code>
     */
    int getFixed32Field(int index);

    /**
     * <code>repeated fixed64 fixed64_field = 10 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getFixed64FieldList();
    /**
     * <code>repeated fixed64 fixed64_field = 10 [packed = true];</code>
     */
    int getFixed64FieldCount();
    /**
     * <code>repeated fixed64 fixed64_field = 10 [packed = true];</code>
     */
    long getFixed64Field(int index);

    /**
     * <code>repeated sfixed32 sfixed32_field = 11 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getSfixed32FieldList();
    /**
     * <code>repeated sfixed32 sfixed32_field = 11 [packed = true];</code>
     */
    int getSfixed32FieldCount();
    /**
     * <code>repeated sfixed32 sfixed32_field = 11 [packed = true];</code>
     */
    int getSfixed32Field(int index);

    /**
     * <code>repeated sfixed64 sfixed64_field = 12 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getSfixed64FieldList();
    /**
     * <code>repeated sfixed64 sfixed64_field = 12 [packed = true];</code>
     */
    int getSfixed64FieldCount();
    /**
     * <code>repeated sfixed64 sfixed64_field = 12 [packed = true];</code>
     */
    long getSfixed64Field(int index);

    /**
     * <code>repeated bool bool_field = 13 [packed = true];</code>
     */
    java.util.List<java.lang.Boolean> getBoolFieldList();
    /**
     * <code>repeated bool bool_field = 13 [packed = true];</code>
     */
    int getBoolFieldCount();
    /**
     * <code>repeated bool bool_field = 13 [packed = true];</code>
     */
    boolean getBoolField(int index);

    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = true];</code>
     */
    java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldList();
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = true];</code>
     */
    int getColorFieldCount();
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = true];</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Color getColorField(int index);
  }
  /**
   * Protobuf type {@code me.lyh.protobuf.generic.proto2.RepeatedPacked}
   */
  public static final class RepeatedPacked extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:me.lyh.protobuf.generic.proto2.RepeatedPacked)
      RepeatedPackedOrBuilder {
    // Use RepeatedPacked.newBuilder() to construct.
    private RepeatedPacked(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RepeatedPacked(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RepeatedPacked defaultInstance;
    public static RepeatedPacked getDefaultInstance() {
      return defaultInstance;
    }

    public RepeatedPacked getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RepeatedPacked(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                doubleField_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              doubleField_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                doubleField_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                doubleField_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                floatField_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              floatField_.add(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                floatField_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                floatField_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                int32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              int32Field_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                int32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                int32Field_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                int64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              int64Field_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                int64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                int64Field_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                uint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              uint32Field_.add(input.readUInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                uint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                uint32Field_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                uint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              uint64Field_.add(input.readUInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                uint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                uint64Field_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                sint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              sint32Field_.add(input.readSInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                sint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                sint32Field_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                sint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              sint64Field_.add(input.readSInt64());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                sint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                sint64Field_.add(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 77: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                fixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              fixed32Field_.add(input.readFixed32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                fixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                fixed32Field_.add(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 81: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                fixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              fixed64Field_.add(input.readFixed64());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                fixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                fixed64Field_.add(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 93: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                sfixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              sfixed32Field_.add(input.readSFixed32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                sfixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                sfixed32Field_.add(input.readSFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 97: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                sfixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000800;
              }
              sfixed64Field_.add(input.readSFixed64());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                sfixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                sfixed64Field_.add(input.readSFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                boolField_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00001000;
              }
              boolField_.add(input.readBool());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                boolField_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                boolField_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
                } else {
                if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                  colorField_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>();
                  mutable_bitField0_ |= 0x00002000;
                }
                colorField_.add(value);
              }
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(16, rawValue);
                  } else {
                  if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                    colorField_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>();
                    mutable_bitField0_ |= 0x00002000;
                  }
                  colorField_.add(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          doubleField_ = java.util.Collections.unmodifiableList(doubleField_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          floatField_ = java.util.Collections.unmodifiableList(floatField_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          int32Field_ = java.util.Collections.unmodifiableList(int32Field_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          int64Field_ = java.util.Collections.unmodifiableList(int64Field_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          uint32Field_ = java.util.Collections.unmodifiableList(uint32Field_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          uint64Field_ = java.util.Collections.unmodifiableList(uint64Field_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          sint32Field_ = java.util.Collections.unmodifiableList(sint32Field_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          sint64Field_ = java.util.Collections.unmodifiableList(sint64Field_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32Field_ = java.util.Collections.unmodifiableList(fixed32Field_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64Field_ = java.util.Collections.unmodifiableList(fixed64Field_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32Field_ = java.util.Collections.unmodifiableList(sfixed32Field_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64Field_ = java.util.Collections.unmodifiableList(sfixed64Field_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          boolField_ = java.util.Collections.unmodifiableList(boolField_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          colorField_ = java.util.Collections.unmodifiableList(colorField_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_RepeatedPacked_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_RepeatedPacked_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked.class, me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked.Builder.class);
    }

    public static com.google.protobuf.Parser<RepeatedPacked> PARSER =
        new com.google.protobuf.AbstractParser<RepeatedPacked>() {
      public RepeatedPacked parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RepeatedPacked(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RepeatedPacked> getParserForType() {
      return PARSER;
    }

    public static final int DOUBLE_FIELD_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> doubleField_;
    /**
     * <code>repeated double double_field = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Double>
        getDoubleFieldList() {
      return doubleField_;
    }
    /**
     * <code>repeated double double_field = 1 [packed = true];</code>
     */
    public int getDoubleFieldCount() {
      return doubleField_.size();
    }
    /**
     * <code>repeated double double_field = 1 [packed = true];</code>
     */
    public double getDoubleField(int index) {
      return doubleField_.get(index);
    }
    private int doubleFieldMemoizedSerializedSize = -1;

    public static final int FLOAT_FIELD_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Float> floatField_;
    /**
     * <code>repeated float float_field = 2 [packed = true];</code>
     */
    public java.util.List<java.lang.Float>
        getFloatFieldList() {
      return floatField_;
    }
    /**
     * <code>repeated float float_field = 2 [packed = true];</code>
     */
    public int getFloatFieldCount() {
      return floatField_.size();
    }
    /**
     * <code>repeated float float_field = 2 [packed = true];</code>
     */
    public float getFloatField(int index) {
      return floatField_.get(index);
    }
    private int floatFieldMemoizedSerializedSize = -1;

    public static final int INT32_FIELD_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> int32Field_;
    /**
     * <code>repeated int32 int32_field = 3 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getInt32FieldList() {
      return int32Field_;
    }
    /**
     * <code>repeated int32 int32_field = 3 [packed = true];</code>
     */
    public int getInt32FieldCount() {
      return int32Field_.size();
    }
    /**
     * <code>repeated int32 int32_field = 3 [packed = true];</code>
     */
    public int getInt32Field(int index) {
      return int32Field_.get(index);
    }
    private int int32FieldMemoizedSerializedSize = -1;

    public static final int INT64_FIELD_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> int64Field_;
    /**
     * <code>repeated int64 int64_field = 4 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getInt64FieldList() {
      return int64Field_;
    }
    /**
     * <code>repeated int64 int64_field = 4 [packed = true];</code>
     */
    public int getInt64FieldCount() {
      return int64Field_.size();
    }
    /**
     * <code>repeated int64 int64_field = 4 [packed = true];</code>
     */
    public long getInt64Field(int index) {
      return int64Field_.get(index);
    }
    private int int64FieldMemoizedSerializedSize = -1;

    public static final int UINT32_FIELD_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> uint32Field_;
    /**
     * <code>repeated uint32 uint32_field = 5 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getUint32FieldList() {
      return uint32Field_;
    }
    /**
     * <code>repeated uint32 uint32_field = 5 [packed = true];</code>
     */
    public int getUint32FieldCount() {
      return uint32Field_.size();
    }
    /**
     * <code>repeated uint32 uint32_field = 5 [packed = true];</code>
     */
    public int getUint32Field(int index) {
      return uint32Field_.get(index);
    }
    private int uint32FieldMemoizedSerializedSize = -1;

    public static final int UINT64_FIELD_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Long> uint64Field_;
    /**
     * <code>repeated uint64 uint64_field = 6 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getUint64FieldList() {
      return uint64Field_;
    }
    /**
     * <code>repeated uint64 uint64_field = 6 [packed = true];</code>
     */
    public int getUint64FieldCount() {
      return uint64Field_.size();
    }
    /**
     * <code>repeated uint64 uint64_field = 6 [packed = true];</code>
     */
    public long getUint64Field(int index) {
      return uint64Field_.get(index);
    }
    private int uint64FieldMemoizedSerializedSize = -1;

    public static final int SINT32_FIELD_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> sint32Field_;
    /**
     * <code>repeated sint32 sint32_field = 7 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getSint32FieldList() {
      return sint32Field_;
    }
    /**
     * <code>repeated sint32 sint32_field = 7 [packed = true];</code>
     */
    public int getSint32FieldCount() {
      return sint32Field_.size();
    }
    /**
     * <code>repeated sint32 sint32_field = 7 [packed = true];</code>
     */
    public int getSint32Field(int index) {
      return sint32Field_.get(index);
    }
    private int sint32FieldMemoizedSerializedSize = -1;

    public static final int SINT64_FIELD_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Long> sint64Field_;
    /**
     * <code>repeated sint64 sint64_field = 8 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getSint64FieldList() {
      return sint64Field_;
    }
    /**
     * <code>repeated sint64 sint64_field = 8 [packed = true];</code>
     */
    public int getSint64FieldCount() {
      return sint64Field_.size();
    }
    /**
     * <code>repeated sint64 sint64_field = 8 [packed = true];</code>
     */
    public long getSint64Field(int index) {
      return sint64Field_.get(index);
    }
    private int sint64FieldMemoizedSerializedSize = -1;

    public static final int FIXED32_FIELD_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> fixed32Field_;
    /**
     * <code>repeated fixed32 fixed32_field = 9 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getFixed32FieldList() {
      return fixed32Field_;
    }
    /**
     * <code>repeated fixed32 fixed32_field = 9 [packed = true];</code>
     */
    public int getFixed32FieldCount() {
      return fixed32Field_.size();
    }
    /**
     * <code>repeated fixed32 fixed32_field = 9 [packed = true];</code>
     */
    public int getFixed32Field(int index) {
      return fixed32Field_.get(index);
    }
    private int fixed32FieldMemoizedSerializedSize = -1;

    public static final int FIXED64_FIELD_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Long> fixed64Field_;
    /**
     * <code>repeated fixed64 fixed64_field = 10 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getFixed64FieldList() {
      return fixed64Field_;
    }
    /**
     * <code>repeated fixed64 fixed64_field = 10 [packed = true];</code>
     */
    public int getFixed64FieldCount() {
      return fixed64Field_.size();
    }
    /**
     * <code>repeated fixed64 fixed64_field = 10 [packed = true];</code>
     */
    public long getFixed64Field(int index) {
      return fixed64Field_.get(index);
    }
    private int fixed64FieldMemoizedSerializedSize = -1;

    public static final int SFIXED32_FIELD_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> sfixed32Field_;
    /**
     * <code>repeated sfixed32 sfixed32_field = 11 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getSfixed32FieldList() {
      return sfixed32Field_;
    }
    /**
     * <code>repeated sfixed32 sfixed32_field = 11 [packed = true];</code>
     */
    public int getSfixed32FieldCount() {
      return sfixed32Field_.size();
    }
    /**
     * <code>repeated sfixed32 sfixed32_field = 11 [packed = true];</code>
     */
    public int getSfixed32Field(int index) {
      return sfixed32Field_.get(index);
    }
    private int sfixed32FieldMemoizedSerializedSize = -1;

    public static final int SFIXED64_FIELD_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Long> sfixed64Field_;
    /**
     * <code>repeated sfixed64 sfixed64_field = 12 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getSfixed64FieldList() {
      return sfixed64Field_;
    }
    /**
     * <code>repeated sfixed64 sfixed64_field = 12 [packed = true];</code>
     */
    public int getSfixed64FieldCount() {
      return sfixed64Field_.size();
    }
    /**
     * <code>repeated sfixed64 sfixed64_field = 12 [packed = true];</code>
     */
    public long getSfixed64Field(int index) {
      return sfixed64Field_.get(index);
    }
    private int sfixed64FieldMemoizedSerializedSize = -1;

    public static final int BOOL_FIELD_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Boolean> boolField_;
    /**
     * <code>repeated bool bool_field = 13 [packed = true];</code>
     */
    public java.util.List<java.lang.Boolean>
        getBoolFieldList() {
      return boolField_;
    }
    /**
     * <code>repeated bool bool_field = 13 [packed = true];</code>
     */
    public int getBoolFieldCount() {
      return boolField_.size();
    }
    /**
     * <code>repeated bool bool_field = 13 [packed = true];</code>
     */
    public boolean getBoolField(int index) {
      return boolField_.get(index);
    }
    private int boolFieldMemoizedSerializedSize = -1;

    public static final int COLOR_FIELD_FIELD_NUMBER = 16;
    private java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> colorField_;
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = true];</code>
     */
    public java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldList() {
      return colorField_;
    }
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = true];</code>
     */
    public int getColorFieldCount() {
      return colorField_.size();
    }
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = true];</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField(int index) {
      return colorField_.get(index);
    }
    private int colorFieldMemoizedSerializedSize;

    private void initFields() {
      doubleField_ = java.util.Collections.emptyList();
      floatField_ = java.util.Collections.emptyList();
      int32Field_ = java.util.Collections.emptyList();
      int64Field_ = java.util.Collections.emptyList();
      uint32Field_ = java.util.Collections.emptyList();
      uint64Field_ = java.util.Collections.emptyList();
      sint32Field_ = java.util.Collections.emptyList();
      sint64Field_ = java.util.Collections.emptyList();
      fixed32Field_ = java.util.Collections.emptyList();
      fixed64Field_ = java.util.Collections.emptyList();
      sfixed32Field_ = java.util.Collections.emptyList();
      sfixed64Field_ = java.util.Collections.emptyList();
      boolField_ = java.util.Collections.emptyList();
      colorField_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDoubleFieldList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(doubleFieldMemoizedSerializedSize);
      }
      for (int i = 0; i < doubleField_.size(); i++) {
        output.writeDoubleNoTag(doubleField_.get(i));
      }
      if (getFloatFieldList().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(floatFieldMemoizedSerializedSize);
      }
      for (int i = 0; i < floatField_.size(); i++) {
        output.writeFloatNoTag(floatField_.get(i));
      }
      if (getInt32FieldList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(int32FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < int32Field_.size(); i++) {
        output.writeInt32NoTag(int32Field_.get(i));
      }
      if (getInt64FieldList().size() > 0) {
        output.writeRawVarint32(34);
        output.writeRawVarint32(int64FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < int64Field_.size(); i++) {
        output.writeInt64NoTag(int64Field_.get(i));
      }
      if (getUint32FieldList().size() > 0) {
        output.writeRawVarint32(42);
        output.writeRawVarint32(uint32FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < uint32Field_.size(); i++) {
        output.writeUInt32NoTag(uint32Field_.get(i));
      }
      if (getUint64FieldList().size() > 0) {
        output.writeRawVarint32(50);
        output.writeRawVarint32(uint64FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < uint64Field_.size(); i++) {
        output.writeUInt64NoTag(uint64Field_.get(i));
      }
      if (getSint32FieldList().size() > 0) {
        output.writeRawVarint32(58);
        output.writeRawVarint32(sint32FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < sint32Field_.size(); i++) {
        output.writeSInt32NoTag(sint32Field_.get(i));
      }
      if (getSint64FieldList().size() > 0) {
        output.writeRawVarint32(66);
        output.writeRawVarint32(sint64FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < sint64Field_.size(); i++) {
        output.writeSInt64NoTag(sint64Field_.get(i));
      }
      if (getFixed32FieldList().size() > 0) {
        output.writeRawVarint32(74);
        output.writeRawVarint32(fixed32FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < fixed32Field_.size(); i++) {
        output.writeFixed32NoTag(fixed32Field_.get(i));
      }
      if (getFixed64FieldList().size() > 0) {
        output.writeRawVarint32(82);
        output.writeRawVarint32(fixed64FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < fixed64Field_.size(); i++) {
        output.writeFixed64NoTag(fixed64Field_.get(i));
      }
      if (getSfixed32FieldList().size() > 0) {
        output.writeRawVarint32(90);
        output.writeRawVarint32(sfixed32FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < sfixed32Field_.size(); i++) {
        output.writeSFixed32NoTag(sfixed32Field_.get(i));
      }
      if (getSfixed64FieldList().size() > 0) {
        output.writeRawVarint32(98);
        output.writeRawVarint32(sfixed64FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < sfixed64Field_.size(); i++) {
        output.writeSFixed64NoTag(sfixed64Field_.get(i));
      }
      if (getBoolFieldList().size() > 0) {
        output.writeRawVarint32(106);
        output.writeRawVarint32(boolFieldMemoizedSerializedSize);
      }
      for (int i = 0; i < boolField_.size(); i++) {
        output.writeBoolNoTag(boolField_.get(i));
      }
      if (getColorFieldList().size() > 0) {
        output.writeRawVarint32(130);
        output.writeRawVarint32(colorFieldMemoizedSerializedSize);
      }
      for (int i = 0; i < colorField_.size(); i++) {
        output.writeEnumNoTag(colorField_.get(i).getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleFieldList().size();
        size += dataSize;
        if (!getDoubleFieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        doubleFieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatFieldList().size();
        size += dataSize;
        if (!getFloatFieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        floatFieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int32Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(int32Field_.get(i));
        }
        size += dataSize;
        if (!getInt32FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        int32FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int64Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(int64Field_.get(i));
        }
        size += dataSize;
        if (!getInt64FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        int64FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint32Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(uint32Field_.get(i));
        }
        size += dataSize;
        if (!getUint32FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        uint32FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint64Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(uint64Field_.get(i));
        }
        size += dataSize;
        if (!getUint64FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        uint64FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint32Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(sint32Field_.get(i));
        }
        size += dataSize;
        if (!getSint32FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sint32FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint64Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(sint64Field_.get(i));
        }
        size += dataSize;
        if (!getSint64FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sint64FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFixed32FieldList().size();
        size += dataSize;
        if (!getFixed32FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        fixed32FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getFixed64FieldList().size();
        size += dataSize;
        if (!getFixed64FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        fixed64FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getSfixed32FieldList().size();
        size += dataSize;
        if (!getSfixed32FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sfixed32FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getSfixed64FieldList().size();
        size += dataSize;
        if (!getSfixed64FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sfixed64FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 1 * getBoolFieldList().size();
        size += dataSize;
        if (!getBoolFieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        boolFieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < colorField_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(colorField_.get(i).getNumber());
        }
        size += dataSize;
        if (!getColorFieldList().isEmpty()) {  size += 2;
          size += com.google.protobuf.CodedOutputStream
            .computeRawVarint32Size(dataSize);
        }colorFieldMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code me.lyh.protobuf.generic.proto2.RepeatedPacked}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:me.lyh.protobuf.generic.proto2.RepeatedPacked)
        me.lyh.protobuf.generic.proto2.Schemas.RepeatedPackedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_RepeatedPacked_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_RepeatedPacked_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked.class, me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked.Builder.class);
      }

      // Construct using me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        doubleField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        floatField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        int32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        int64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        uint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        uint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        sint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        sint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        fixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        sfixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        boolField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        colorField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_RepeatedPacked_descriptor;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked getDefaultInstanceForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked.getDefaultInstance();
      }

      public me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked build() {
        me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked buildPartial() {
        me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked result = new me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          doubleField_ = java.util.Collections.unmodifiableList(doubleField_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.doubleField_ = doubleField_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          floatField_ = java.util.Collections.unmodifiableList(floatField_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.floatField_ = floatField_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          int32Field_ = java.util.Collections.unmodifiableList(int32Field_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.int32Field_ = int32Field_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          int64Field_ = java.util.Collections.unmodifiableList(int64Field_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.int64Field_ = int64Field_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          uint32Field_ = java.util.Collections.unmodifiableList(uint32Field_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.uint32Field_ = uint32Field_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          uint64Field_ = java.util.Collections.unmodifiableList(uint64Field_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.uint64Field_ = uint64Field_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          sint32Field_ = java.util.Collections.unmodifiableList(sint32Field_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.sint32Field_ = sint32Field_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          sint64Field_ = java.util.Collections.unmodifiableList(sint64Field_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.sint64Field_ = sint64Field_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32Field_ = java.util.Collections.unmodifiableList(fixed32Field_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.fixed32Field_ = fixed32Field_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64Field_ = java.util.Collections.unmodifiableList(fixed64Field_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.fixed64Field_ = fixed64Field_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32Field_ = java.util.Collections.unmodifiableList(sfixed32Field_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.sfixed32Field_ = sfixed32Field_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64Field_ = java.util.Collections.unmodifiableList(sfixed64Field_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.sfixed64Field_ = sfixed64Field_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          boolField_ = java.util.Collections.unmodifiableList(boolField_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.boolField_ = boolField_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          colorField_ = java.util.Collections.unmodifiableList(colorField_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.colorField_ = colorField_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked) {
          return mergeFrom((me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked other) {
        if (other == me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked.getDefaultInstance()) return this;
        if (!other.doubleField_.isEmpty()) {
          if (doubleField_.isEmpty()) {
            doubleField_ = other.doubleField_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDoubleFieldIsMutable();
            doubleField_.addAll(other.doubleField_);
          }
          onChanged();
        }
        if (!other.floatField_.isEmpty()) {
          if (floatField_.isEmpty()) {
            floatField_ = other.floatField_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFloatFieldIsMutable();
            floatField_.addAll(other.floatField_);
          }
          onChanged();
        }
        if (!other.int32Field_.isEmpty()) {
          if (int32Field_.isEmpty()) {
            int32Field_ = other.int32Field_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureInt32FieldIsMutable();
            int32Field_.addAll(other.int32Field_);
          }
          onChanged();
        }
        if (!other.int64Field_.isEmpty()) {
          if (int64Field_.isEmpty()) {
            int64Field_ = other.int64Field_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureInt64FieldIsMutable();
            int64Field_.addAll(other.int64Field_);
          }
          onChanged();
        }
        if (!other.uint32Field_.isEmpty()) {
          if (uint32Field_.isEmpty()) {
            uint32Field_ = other.uint32Field_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureUint32FieldIsMutable();
            uint32Field_.addAll(other.uint32Field_);
          }
          onChanged();
        }
        if (!other.uint64Field_.isEmpty()) {
          if (uint64Field_.isEmpty()) {
            uint64Field_ = other.uint64Field_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureUint64FieldIsMutable();
            uint64Field_.addAll(other.uint64Field_);
          }
          onChanged();
        }
        if (!other.sint32Field_.isEmpty()) {
          if (sint32Field_.isEmpty()) {
            sint32Field_ = other.sint32Field_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureSint32FieldIsMutable();
            sint32Field_.addAll(other.sint32Field_);
          }
          onChanged();
        }
        if (!other.sint64Field_.isEmpty()) {
          if (sint64Field_.isEmpty()) {
            sint64Field_ = other.sint64Field_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureSint64FieldIsMutable();
            sint64Field_.addAll(other.sint64Field_);
          }
          onChanged();
        }
        if (!other.fixed32Field_.isEmpty()) {
          if (fixed32Field_.isEmpty()) {
            fixed32Field_ = other.fixed32Field_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureFixed32FieldIsMutable();
            fixed32Field_.addAll(other.fixed32Field_);
          }
          onChanged();
        }
        if (!other.fixed64Field_.isEmpty()) {
          if (fixed64Field_.isEmpty()) {
            fixed64Field_ = other.fixed64Field_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureFixed64FieldIsMutable();
            fixed64Field_.addAll(other.fixed64Field_);
          }
          onChanged();
        }
        if (!other.sfixed32Field_.isEmpty()) {
          if (sfixed32Field_.isEmpty()) {
            sfixed32Field_ = other.sfixed32Field_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureSfixed32FieldIsMutable();
            sfixed32Field_.addAll(other.sfixed32Field_);
          }
          onChanged();
        }
        if (!other.sfixed64Field_.isEmpty()) {
          if (sfixed64Field_.isEmpty()) {
            sfixed64Field_ = other.sfixed64Field_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureSfixed64FieldIsMutable();
            sfixed64Field_.addAll(other.sfixed64Field_);
          }
          onChanged();
        }
        if (!other.boolField_.isEmpty()) {
          if (boolField_.isEmpty()) {
            boolField_ = other.boolField_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureBoolFieldIsMutable();
            boolField_.addAll(other.boolField_);
          }
          onChanged();
        }
        if (!other.colorField_.isEmpty()) {
          if (colorField_.isEmpty()) {
            colorField_ = other.colorField_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureColorFieldIsMutable();
            colorField_.addAll(other.colorField_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.lyh.protobuf.generic.proto2.Schemas.RepeatedPacked) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> doubleField_ = java.util.Collections.emptyList();
      private void ensureDoubleFieldIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          doubleField_ = new java.util.ArrayList<java.lang.Double>(doubleField_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double double_field = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getDoubleFieldList() {
        return java.util.Collections.unmodifiableList(doubleField_);
      }
      /**
       * <code>repeated double double_field = 1 [packed = true];</code>
       */
      public int getDoubleFieldCount() {
        return doubleField_.size();
      }
      /**
       * <code>repeated double double_field = 1 [packed = true];</code>
       */
      public double getDoubleField(int index) {
        return doubleField_.get(index);
      }
      /**
       * <code>repeated double double_field = 1 [packed = true];</code>
       */
      public Builder setDoubleField(
          int index, double value) {
        ensureDoubleFieldIsMutable();
        doubleField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field = 1 [packed = true];</code>
       */
      public Builder addDoubleField(double value) {
        ensureDoubleFieldIsMutable();
        doubleField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field = 1 [packed = true];</code>
       */
      public Builder addAllDoubleField(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDoubleFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, doubleField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field = 1 [packed = true];</code>
       */
      public Builder clearDoubleField() {
        doubleField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> floatField_ = java.util.Collections.emptyList();
      private void ensureFloatFieldIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          floatField_ = new java.util.ArrayList<java.lang.Float>(floatField_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float float_field = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Float>
          getFloatFieldList() {
        return java.util.Collections.unmodifiableList(floatField_);
      }
      /**
       * <code>repeated float float_field = 2 [packed = true];</code>
       */
      public int getFloatFieldCount() {
        return floatField_.size();
      }
      /**
       * <code>repeated float float_field = 2 [packed = true];</code>
       */
      public float getFloatField(int index) {
        return floatField_.get(index);
      }
      /**
       * <code>repeated float float_field = 2 [packed = true];</code>
       */
      public Builder setFloatField(
          int index, float value) {
        ensureFloatFieldIsMutable();
        floatField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_field = 2 [packed = true];</code>
       */
      public Builder addFloatField(float value) {
        ensureFloatFieldIsMutable();
        floatField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_field = 2 [packed = true];</code>
       */
      public Builder addAllFloatField(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, floatField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_field = 2 [packed = true];</code>
       */
      public Builder clearFloatField() {
        floatField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> int32Field_ = java.util.Collections.emptyList();
      private void ensureInt32FieldIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          int32Field_ = new java.util.ArrayList<java.lang.Integer>(int32Field_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 int32_field = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getInt32FieldList() {
        return java.util.Collections.unmodifiableList(int32Field_);
      }
      /**
       * <code>repeated int32 int32_field = 3 [packed = true];</code>
       */
      public int getInt32FieldCount() {
        return int32Field_.size();
      }
      /**
       * <code>repeated int32 int32_field = 3 [packed = true];</code>
       */
      public int getInt32Field(int index) {
        return int32Field_.get(index);
      }
      /**
       * <code>repeated int32 int32_field = 3 [packed = true];</code>
       */
      public Builder setInt32Field(
          int index, int value) {
        ensureInt32FieldIsMutable();
        int32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int32_field = 3 [packed = true];</code>
       */
      public Builder addInt32Field(int value) {
        ensureInt32FieldIsMutable();
        int32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int32_field = 3 [packed = true];</code>
       */
      public Builder addAllInt32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInt32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int32_field = 3 [packed = true];</code>
       */
      public Builder clearInt32Field() {
        int32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> int64Field_ = java.util.Collections.emptyList();
      private void ensureInt64FieldIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          int64Field_ = new java.util.ArrayList<java.lang.Long>(int64Field_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 int64_field = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getInt64FieldList() {
        return java.util.Collections.unmodifiableList(int64Field_);
      }
      /**
       * <code>repeated int64 int64_field = 4 [packed = true];</code>
       */
      public int getInt64FieldCount() {
        return int64Field_.size();
      }
      /**
       * <code>repeated int64 int64_field = 4 [packed = true];</code>
       */
      public long getInt64Field(int index) {
        return int64Field_.get(index);
      }
      /**
       * <code>repeated int64 int64_field = 4 [packed = true];</code>
       */
      public Builder setInt64Field(
          int index, long value) {
        ensureInt64FieldIsMutable();
        int64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_field = 4 [packed = true];</code>
       */
      public Builder addInt64Field(long value) {
        ensureInt64FieldIsMutable();
        int64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_field = 4 [packed = true];</code>
       */
      public Builder addAllInt64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInt64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_field = 4 [packed = true];</code>
       */
      public Builder clearInt64Field() {
        int64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> uint32Field_ = java.util.Collections.emptyList();
      private void ensureUint32FieldIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          uint32Field_ = new java.util.ArrayList<java.lang.Integer>(uint32Field_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint32 uint32_field = 5 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getUint32FieldList() {
        return java.util.Collections.unmodifiableList(uint32Field_);
      }
      /**
       * <code>repeated uint32 uint32_field = 5 [packed = true];</code>
       */
      public int getUint32FieldCount() {
        return uint32Field_.size();
      }
      /**
       * <code>repeated uint32 uint32_field = 5 [packed = true];</code>
       */
      public int getUint32Field(int index) {
        return uint32Field_.get(index);
      }
      /**
       * <code>repeated uint32 uint32_field = 5 [packed = true];</code>
       */
      public Builder setUint32Field(
          int index, int value) {
        ensureUint32FieldIsMutable();
        uint32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32_field = 5 [packed = true];</code>
       */
      public Builder addUint32Field(int value) {
        ensureUint32FieldIsMutable();
        uint32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32_field = 5 [packed = true];</code>
       */
      public Builder addAllUint32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUint32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uint32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32_field = 5 [packed = true];</code>
       */
      public Builder clearUint32Field() {
        uint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> uint64Field_ = java.util.Collections.emptyList();
      private void ensureUint64FieldIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          uint64Field_ = new java.util.ArrayList<java.lang.Long>(uint64Field_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated uint64 uint64_field = 6 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getUint64FieldList() {
        return java.util.Collections.unmodifiableList(uint64Field_);
      }
      /**
       * <code>repeated uint64 uint64_field = 6 [packed = true];</code>
       */
      public int getUint64FieldCount() {
        return uint64Field_.size();
      }
      /**
       * <code>repeated uint64 uint64_field = 6 [packed = true];</code>
       */
      public long getUint64Field(int index) {
        return uint64Field_.get(index);
      }
      /**
       * <code>repeated uint64 uint64_field = 6 [packed = true];</code>
       */
      public Builder setUint64Field(
          int index, long value) {
        ensureUint64FieldIsMutable();
        uint64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64_field = 6 [packed = true];</code>
       */
      public Builder addUint64Field(long value) {
        ensureUint64FieldIsMutable();
        uint64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64_field = 6 [packed = true];</code>
       */
      public Builder addAllUint64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUint64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uint64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64_field = 6 [packed = true];</code>
       */
      public Builder clearUint64Field() {
        uint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> sint32Field_ = java.util.Collections.emptyList();
      private void ensureSint32FieldIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          sint32Field_ = new java.util.ArrayList<java.lang.Integer>(sint32Field_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated sint32 sint32_field = 7 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getSint32FieldList() {
        return java.util.Collections.unmodifiableList(sint32Field_);
      }
      /**
       * <code>repeated sint32 sint32_field = 7 [packed = true];</code>
       */
      public int getSint32FieldCount() {
        return sint32Field_.size();
      }
      /**
       * <code>repeated sint32 sint32_field = 7 [packed = true];</code>
       */
      public int getSint32Field(int index) {
        return sint32Field_.get(index);
      }
      /**
       * <code>repeated sint32 sint32_field = 7 [packed = true];</code>
       */
      public Builder setSint32Field(
          int index, int value) {
        ensureSint32FieldIsMutable();
        sint32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32_field = 7 [packed = true];</code>
       */
      public Builder addSint32Field(int value) {
        ensureSint32FieldIsMutable();
        sint32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32_field = 7 [packed = true];</code>
       */
      public Builder addAllSint32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSint32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sint32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32_field = 7 [packed = true];</code>
       */
      public Builder clearSint32Field() {
        sint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> sint64Field_ = java.util.Collections.emptyList();
      private void ensureSint64FieldIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          sint64Field_ = new java.util.ArrayList<java.lang.Long>(sint64Field_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated sint64 sint64_field = 8 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getSint64FieldList() {
        return java.util.Collections.unmodifiableList(sint64Field_);
      }
      /**
       * <code>repeated sint64 sint64_field = 8 [packed = true];</code>
       */
      public int getSint64FieldCount() {
        return sint64Field_.size();
      }
      /**
       * <code>repeated sint64 sint64_field = 8 [packed = true];</code>
       */
      public long getSint64Field(int index) {
        return sint64Field_.get(index);
      }
      /**
       * <code>repeated sint64 sint64_field = 8 [packed = true];</code>
       */
      public Builder setSint64Field(
          int index, long value) {
        ensureSint64FieldIsMutable();
        sint64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64_field = 8 [packed = true];</code>
       */
      public Builder addSint64Field(long value) {
        ensureSint64FieldIsMutable();
        sint64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64_field = 8 [packed = true];</code>
       */
      public Builder addAllSint64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSint64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sint64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64_field = 8 [packed = true];</code>
       */
      public Builder clearSint64Field() {
        sint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> fixed32Field_ = java.util.Collections.emptyList();
      private void ensureFixed32FieldIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32Field_ = new java.util.ArrayList<java.lang.Integer>(fixed32Field_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getFixed32FieldList() {
        return java.util.Collections.unmodifiableList(fixed32Field_);
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9 [packed = true];</code>
       */
      public int getFixed32FieldCount() {
        return fixed32Field_.size();
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9 [packed = true];</code>
       */
      public int getFixed32Field(int index) {
        return fixed32Field_.get(index);
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9 [packed = true];</code>
       */
      public Builder setFixed32Field(
          int index, int value) {
        ensureFixed32FieldIsMutable();
        fixed32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9 [packed = true];</code>
       */
      public Builder addFixed32Field(int value) {
        ensureFixed32FieldIsMutable();
        fixed32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9 [packed = true];</code>
       */
      public Builder addAllFixed32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFixed32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fixed32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9 [packed = true];</code>
       */
      public Builder clearFixed32Field() {
        fixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> fixed64Field_ = java.util.Collections.emptyList();
      private void ensureFixed64FieldIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64Field_ = new java.util.ArrayList<java.lang.Long>(fixed64Field_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getFixed64FieldList() {
        return java.util.Collections.unmodifiableList(fixed64Field_);
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10 [packed = true];</code>
       */
      public int getFixed64FieldCount() {
        return fixed64Field_.size();
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10 [packed = true];</code>
       */
      public long getFixed64Field(int index) {
        return fixed64Field_.get(index);
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10 [packed = true];</code>
       */
      public Builder setFixed64Field(
          int index, long value) {
        ensureFixed64FieldIsMutable();
        fixed64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10 [packed = true];</code>
       */
      public Builder addFixed64Field(long value) {
        ensureFixed64FieldIsMutable();
        fixed64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10 [packed = true];</code>
       */
      public Builder addAllFixed64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFixed64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fixed64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10 [packed = true];</code>
       */
      public Builder clearFixed64Field() {
        fixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> sfixed32Field_ = java.util.Collections.emptyList();
      private void ensureSfixed32FieldIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32Field_ = new java.util.ArrayList<java.lang.Integer>(sfixed32Field_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getSfixed32FieldList() {
        return java.util.Collections.unmodifiableList(sfixed32Field_);
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11 [packed = true];</code>
       */
      public int getSfixed32FieldCount() {
        return sfixed32Field_.size();
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11 [packed = true];</code>
       */
      public int getSfixed32Field(int index) {
        return sfixed32Field_.get(index);
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11 [packed = true];</code>
       */
      public Builder setSfixed32Field(
          int index, int value) {
        ensureSfixed32FieldIsMutable();
        sfixed32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11 [packed = true];</code>
       */
      public Builder addSfixed32Field(int value) {
        ensureSfixed32FieldIsMutable();
        sfixed32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11 [packed = true];</code>
       */
      public Builder addAllSfixed32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSfixed32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sfixed32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11 [packed = true];</code>
       */
      public Builder clearSfixed32Field() {
        sfixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> sfixed64Field_ = java.util.Collections.emptyList();
      private void ensureSfixed64FieldIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64Field_ = new java.util.ArrayList<java.lang.Long>(sfixed64Field_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getSfixed64FieldList() {
        return java.util.Collections.unmodifiableList(sfixed64Field_);
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12 [packed = true];</code>
       */
      public int getSfixed64FieldCount() {
        return sfixed64Field_.size();
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12 [packed = true];</code>
       */
      public long getSfixed64Field(int index) {
        return sfixed64Field_.get(index);
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12 [packed = true];</code>
       */
      public Builder setSfixed64Field(
          int index, long value) {
        ensureSfixed64FieldIsMutable();
        sfixed64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12 [packed = true];</code>
       */
      public Builder addSfixed64Field(long value) {
        ensureSfixed64FieldIsMutable();
        sfixed64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12 [packed = true];</code>
       */
      public Builder addAllSfixed64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSfixed64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sfixed64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12 [packed = true];</code>
       */
      public Builder clearSfixed64Field() {
        sfixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Boolean> boolField_ = java.util.Collections.emptyList();
      private void ensureBoolFieldIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          boolField_ = new java.util.ArrayList<java.lang.Boolean>(boolField_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated bool bool_field = 13 [packed = true];</code>
       */
      public java.util.List<java.lang.Boolean>
          getBoolFieldList() {
        return java.util.Collections.unmodifiableList(boolField_);
      }
      /**
       * <code>repeated bool bool_field = 13 [packed = true];</code>
       */
      public int getBoolFieldCount() {
        return boolField_.size();
      }
      /**
       * <code>repeated bool bool_field = 13 [packed = true];</code>
       */
      public boolean getBoolField(int index) {
        return boolField_.get(index);
      }
      /**
       * <code>repeated bool bool_field = 13 [packed = true];</code>
       */
      public Builder setBoolField(
          int index, boolean value) {
        ensureBoolFieldIsMutable();
        boolField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_field = 13 [packed = true];</code>
       */
      public Builder addBoolField(boolean value) {
        ensureBoolFieldIsMutable();
        boolField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_field = 13 [packed = true];</code>
       */
      public Builder addAllBoolField(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureBoolFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, boolField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_field = 13 [packed = true];</code>
       */
      public Builder clearBoolField() {
        boolField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      private java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> colorField_ =
        java.util.Collections.emptyList();
      private void ensureColorFieldIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          colorField_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>(colorField_);
          bitField0_ |= 0x00002000;
        }
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = true];</code>
       */
      public java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldList() {
        return java.util.Collections.unmodifiableList(colorField_);
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = true];</code>
       */
      public int getColorFieldCount() {
        return colorField_.size();
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = true];</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField(int index) {
        return colorField_.get(index);
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = true];</code>
       */
      public Builder setColorField(
          int index, me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorFieldIsMutable();
        colorField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = true];</code>
       */
      public Builder addColorField(me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorFieldIsMutable();
        colorField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = true];</code>
       */
      public Builder addAllColorField(
          java.lang.Iterable<? extends me.lyh.protobuf.generic.proto2.Schemas.Color> values) {
        ensureColorFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, colorField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = true];</code>
       */
      public Builder clearColorField() {
        colorField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:me.lyh.protobuf.generic.proto2.RepeatedPacked)
    }

    static {
      defaultInstance = new RepeatedPacked(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:me.lyh.protobuf.generic.proto2.RepeatedPacked)
  }

  public interface RepeatedUnpackedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:me.lyh.protobuf.generic.proto2.RepeatedUnpacked)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double double_field = 1 [packed = false];</code>
     */
    java.util.List<java.lang.Double> getDoubleFieldList();
    /**
     * <code>repeated double double_field = 1 [packed = false];</code>
     */
    int getDoubleFieldCount();
    /**
     * <code>repeated double double_field = 1 [packed = false];</code>
     */
    double getDoubleField(int index);

    /**
     * <code>repeated float float_field = 2 [packed = false];</code>
     */
    java.util.List<java.lang.Float> getFloatFieldList();
    /**
     * <code>repeated float float_field = 2 [packed = false];</code>
     */
    int getFloatFieldCount();
    /**
     * <code>repeated float float_field = 2 [packed = false];</code>
     */
    float getFloatField(int index);

    /**
     * <code>repeated int32 int32_field = 3 [packed = false];</code>
     */
    java.util.List<java.lang.Integer> getInt32FieldList();
    /**
     * <code>repeated int32 int32_field = 3 [packed = false];</code>
     */
    int getInt32FieldCount();
    /**
     * <code>repeated int32 int32_field = 3 [packed = false];</code>
     */
    int getInt32Field(int index);

    /**
     * <code>repeated int64 int64_field = 4 [packed = false];</code>
     */
    java.util.List<java.lang.Long> getInt64FieldList();
    /**
     * <code>repeated int64 int64_field = 4 [packed = false];</code>
     */
    int getInt64FieldCount();
    /**
     * <code>repeated int64 int64_field = 4 [packed = false];</code>
     */
    long getInt64Field(int index);

    /**
     * <code>repeated uint32 uint32_field = 5 [packed = false];</code>
     */
    java.util.List<java.lang.Integer> getUint32FieldList();
    /**
     * <code>repeated uint32 uint32_field = 5 [packed = false];</code>
     */
    int getUint32FieldCount();
    /**
     * <code>repeated uint32 uint32_field = 5 [packed = false];</code>
     */
    int getUint32Field(int index);

    /**
     * <code>repeated uint64 uint64_field = 6 [packed = false];</code>
     */
    java.util.List<java.lang.Long> getUint64FieldList();
    /**
     * <code>repeated uint64 uint64_field = 6 [packed = false];</code>
     */
    int getUint64FieldCount();
    /**
     * <code>repeated uint64 uint64_field = 6 [packed = false];</code>
     */
    long getUint64Field(int index);

    /**
     * <code>repeated sint32 sint32_field = 7 [packed = false];</code>
     */
    java.util.List<java.lang.Integer> getSint32FieldList();
    /**
     * <code>repeated sint32 sint32_field = 7 [packed = false];</code>
     */
    int getSint32FieldCount();
    /**
     * <code>repeated sint32 sint32_field = 7 [packed = false];</code>
     */
    int getSint32Field(int index);

    /**
     * <code>repeated sint64 sint64_field = 8 [packed = false];</code>
     */
    java.util.List<java.lang.Long> getSint64FieldList();
    /**
     * <code>repeated sint64 sint64_field = 8 [packed = false];</code>
     */
    int getSint64FieldCount();
    /**
     * <code>repeated sint64 sint64_field = 8 [packed = false];</code>
     */
    long getSint64Field(int index);

    /**
     * <code>repeated fixed32 fixed32_field = 9 [packed = false];</code>
     */
    java.util.List<java.lang.Integer> getFixed32FieldList();
    /**
     * <code>repeated fixed32 fixed32_field = 9 [packed = false];</code>
     */
    int getFixed32FieldCount();
    /**
     * <code>repeated fixed32 fixed32_field = 9 [packed = false];</code>
     */
    int getFixed32Field(int index);

    /**
     * <code>repeated fixed64 fixed64_field = 10 [packed = false];</code>
     */
    java.util.List<java.lang.Long> getFixed64FieldList();
    /**
     * <code>repeated fixed64 fixed64_field = 10 [packed = false];</code>
     */
    int getFixed64FieldCount();
    /**
     * <code>repeated fixed64 fixed64_field = 10 [packed = false];</code>
     */
    long getFixed64Field(int index);

    /**
     * <code>repeated sfixed32 sfixed32_field = 11 [packed = false];</code>
     */
    java.util.List<java.lang.Integer> getSfixed32FieldList();
    /**
     * <code>repeated sfixed32 sfixed32_field = 11 [packed = false];</code>
     */
    int getSfixed32FieldCount();
    /**
     * <code>repeated sfixed32 sfixed32_field = 11 [packed = false];</code>
     */
    int getSfixed32Field(int index);

    /**
     * <code>repeated sfixed64 sfixed64_field = 12 [packed = false];</code>
     */
    java.util.List<java.lang.Long> getSfixed64FieldList();
    /**
     * <code>repeated sfixed64 sfixed64_field = 12 [packed = false];</code>
     */
    int getSfixed64FieldCount();
    /**
     * <code>repeated sfixed64 sfixed64_field = 12 [packed = false];</code>
     */
    long getSfixed64Field(int index);

    /**
     * <code>repeated bool bool_field = 13 [packed = false];</code>
     */
    java.util.List<java.lang.Boolean> getBoolFieldList();
    /**
     * <code>repeated bool bool_field = 13 [packed = false];</code>
     */
    int getBoolFieldCount();
    /**
     * <code>repeated bool bool_field = 13 [packed = false];</code>
     */
    boolean getBoolField(int index);

    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = false];</code>
     */
    java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldList();
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = false];</code>
     */
    int getColorFieldCount();
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = false];</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Color getColorField(int index);
  }
  /**
   * Protobuf type {@code me.lyh.protobuf.generic.proto2.RepeatedUnpacked}
   */
  public static final class RepeatedUnpacked extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:me.lyh.protobuf.generic.proto2.RepeatedUnpacked)
      RepeatedUnpackedOrBuilder {
    // Use RepeatedUnpacked.newBuilder() to construct.
    private RepeatedUnpacked(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RepeatedUnpacked(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RepeatedUnpacked defaultInstance;
    public static RepeatedUnpacked getDefaultInstance() {
      return defaultInstance;
    }

    public RepeatedUnpacked getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RepeatedUnpacked(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                doubleField_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              doubleField_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                doubleField_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                doubleField_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                floatField_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              floatField_.add(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                floatField_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                floatField_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                int32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              int32Field_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                int32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                int32Field_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                int64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              int64Field_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                int64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                int64Field_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                uint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              uint32Field_.add(input.readUInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                uint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                uint32Field_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                uint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              uint64Field_.add(input.readUInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                uint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                uint64Field_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                sint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              sint32Field_.add(input.readSInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                sint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                sint32Field_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                sint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              sint64Field_.add(input.readSInt64());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                sint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                sint64Field_.add(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 77: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                fixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              fixed32Field_.add(input.readFixed32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                fixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                fixed32Field_.add(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 81: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                fixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              fixed64Field_.add(input.readFixed64());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                fixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                fixed64Field_.add(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 93: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                sfixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              sfixed32Field_.add(input.readSFixed32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                sfixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                sfixed32Field_.add(input.readSFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 97: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                sfixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000800;
              }
              sfixed64Field_.add(input.readSFixed64());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                sfixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                sfixed64Field_.add(input.readSFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                boolField_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00001000;
              }
              boolField_.add(input.readBool());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                boolField_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                boolField_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
                } else {
                if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                  colorField_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>();
                  mutable_bitField0_ |= 0x00002000;
                }
                colorField_.add(value);
              }
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(16, rawValue);
                  } else {
                  if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                    colorField_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>();
                    mutable_bitField0_ |= 0x00002000;
                  }
                  colorField_.add(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          doubleField_ = java.util.Collections.unmodifiableList(doubleField_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          floatField_ = java.util.Collections.unmodifiableList(floatField_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          int32Field_ = java.util.Collections.unmodifiableList(int32Field_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          int64Field_ = java.util.Collections.unmodifiableList(int64Field_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          uint32Field_ = java.util.Collections.unmodifiableList(uint32Field_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          uint64Field_ = java.util.Collections.unmodifiableList(uint64Field_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          sint32Field_ = java.util.Collections.unmodifiableList(sint32Field_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          sint64Field_ = java.util.Collections.unmodifiableList(sint64Field_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32Field_ = java.util.Collections.unmodifiableList(fixed32Field_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64Field_ = java.util.Collections.unmodifiableList(fixed64Field_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32Field_ = java.util.Collections.unmodifiableList(sfixed32Field_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64Field_ = java.util.Collections.unmodifiableList(sfixed64Field_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          boolField_ = java.util.Collections.unmodifiableList(boolField_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          colorField_ = java.util.Collections.unmodifiableList(colorField_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_RepeatedUnpacked_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_RepeatedUnpacked_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked.class, me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked.Builder.class);
    }

    public static com.google.protobuf.Parser<RepeatedUnpacked> PARSER =
        new com.google.protobuf.AbstractParser<RepeatedUnpacked>() {
      public RepeatedUnpacked parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RepeatedUnpacked(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RepeatedUnpacked> getParserForType() {
      return PARSER;
    }

    public static final int DOUBLE_FIELD_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> doubleField_;
    /**
     * <code>repeated double double_field = 1 [packed = false];</code>
     */
    public java.util.List<java.lang.Double>
        getDoubleFieldList() {
      return doubleField_;
    }
    /**
     * <code>repeated double double_field = 1 [packed = false];</code>
     */
    public int getDoubleFieldCount() {
      return doubleField_.size();
    }
    /**
     * <code>repeated double double_field = 1 [packed = false];</code>
     */
    public double getDoubleField(int index) {
      return doubleField_.get(index);
    }

    public static final int FLOAT_FIELD_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Float> floatField_;
    /**
     * <code>repeated float float_field = 2 [packed = false];</code>
     */
    public java.util.List<java.lang.Float>
        getFloatFieldList() {
      return floatField_;
    }
    /**
     * <code>repeated float float_field = 2 [packed = false];</code>
     */
    public int getFloatFieldCount() {
      return floatField_.size();
    }
    /**
     * <code>repeated float float_field = 2 [packed = false];</code>
     */
    public float getFloatField(int index) {
      return floatField_.get(index);
    }

    public static final int INT32_FIELD_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> int32Field_;
    /**
     * <code>repeated int32 int32_field = 3 [packed = false];</code>
     */
    public java.util.List<java.lang.Integer>
        getInt32FieldList() {
      return int32Field_;
    }
    /**
     * <code>repeated int32 int32_field = 3 [packed = false];</code>
     */
    public int getInt32FieldCount() {
      return int32Field_.size();
    }
    /**
     * <code>repeated int32 int32_field = 3 [packed = false];</code>
     */
    public int getInt32Field(int index) {
      return int32Field_.get(index);
    }

    public static final int INT64_FIELD_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> int64Field_;
    /**
     * <code>repeated int64 int64_field = 4 [packed = false];</code>
     */
    public java.util.List<java.lang.Long>
        getInt64FieldList() {
      return int64Field_;
    }
    /**
     * <code>repeated int64 int64_field = 4 [packed = false];</code>
     */
    public int getInt64FieldCount() {
      return int64Field_.size();
    }
    /**
     * <code>repeated int64 int64_field = 4 [packed = false];</code>
     */
    public long getInt64Field(int index) {
      return int64Field_.get(index);
    }

    public static final int UINT32_FIELD_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> uint32Field_;
    /**
     * <code>repeated uint32 uint32_field = 5 [packed = false];</code>
     */
    public java.util.List<java.lang.Integer>
        getUint32FieldList() {
      return uint32Field_;
    }
    /**
     * <code>repeated uint32 uint32_field = 5 [packed = false];</code>
     */
    public int getUint32FieldCount() {
      return uint32Field_.size();
    }
    /**
     * <code>repeated uint32 uint32_field = 5 [packed = false];</code>
     */
    public int getUint32Field(int index) {
      return uint32Field_.get(index);
    }

    public static final int UINT64_FIELD_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Long> uint64Field_;
    /**
     * <code>repeated uint64 uint64_field = 6 [packed = false];</code>
     */
    public java.util.List<java.lang.Long>
        getUint64FieldList() {
      return uint64Field_;
    }
    /**
     * <code>repeated uint64 uint64_field = 6 [packed = false];</code>
     */
    public int getUint64FieldCount() {
      return uint64Field_.size();
    }
    /**
     * <code>repeated uint64 uint64_field = 6 [packed = false];</code>
     */
    public long getUint64Field(int index) {
      return uint64Field_.get(index);
    }

    public static final int SINT32_FIELD_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> sint32Field_;
    /**
     * <code>repeated sint32 sint32_field = 7 [packed = false];</code>
     */
    public java.util.List<java.lang.Integer>
        getSint32FieldList() {
      return sint32Field_;
    }
    /**
     * <code>repeated sint32 sint32_field = 7 [packed = false];</code>
     */
    public int getSint32FieldCount() {
      return sint32Field_.size();
    }
    /**
     * <code>repeated sint32 sint32_field = 7 [packed = false];</code>
     */
    public int getSint32Field(int index) {
      return sint32Field_.get(index);
    }

    public static final int SINT64_FIELD_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Long> sint64Field_;
    /**
     * <code>repeated sint64 sint64_field = 8 [packed = false];</code>
     */
    public java.util.List<java.lang.Long>
        getSint64FieldList() {
      return sint64Field_;
    }
    /**
     * <code>repeated sint64 sint64_field = 8 [packed = false];</code>
     */
    public int getSint64FieldCount() {
      return sint64Field_.size();
    }
    /**
     * <code>repeated sint64 sint64_field = 8 [packed = false];</code>
     */
    public long getSint64Field(int index) {
      return sint64Field_.get(index);
    }

    public static final int FIXED32_FIELD_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> fixed32Field_;
    /**
     * <code>repeated fixed32 fixed32_field = 9 [packed = false];</code>
     */
    public java.util.List<java.lang.Integer>
        getFixed32FieldList() {
      return fixed32Field_;
    }
    /**
     * <code>repeated fixed32 fixed32_field = 9 [packed = false];</code>
     */
    public int getFixed32FieldCount() {
      return fixed32Field_.size();
    }
    /**
     * <code>repeated fixed32 fixed32_field = 9 [packed = false];</code>
     */
    public int getFixed32Field(int index) {
      return fixed32Field_.get(index);
    }

    public static final int FIXED64_FIELD_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Long> fixed64Field_;
    /**
     * <code>repeated fixed64 fixed64_field = 10 [packed = false];</code>
     */
    public java.util.List<java.lang.Long>
        getFixed64FieldList() {
      return fixed64Field_;
    }
    /**
     * <code>repeated fixed64 fixed64_field = 10 [packed = false];</code>
     */
    public int getFixed64FieldCount() {
      return fixed64Field_.size();
    }
    /**
     * <code>repeated fixed64 fixed64_field = 10 [packed = false];</code>
     */
    public long getFixed64Field(int index) {
      return fixed64Field_.get(index);
    }

    public static final int SFIXED32_FIELD_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> sfixed32Field_;
    /**
     * <code>repeated sfixed32 sfixed32_field = 11 [packed = false];</code>
     */
    public java.util.List<java.lang.Integer>
        getSfixed32FieldList() {
      return sfixed32Field_;
    }
    /**
     * <code>repeated sfixed32 sfixed32_field = 11 [packed = false];</code>
     */
    public int getSfixed32FieldCount() {
      return sfixed32Field_.size();
    }
    /**
     * <code>repeated sfixed32 sfixed32_field = 11 [packed = false];</code>
     */
    public int getSfixed32Field(int index) {
      return sfixed32Field_.get(index);
    }

    public static final int SFIXED64_FIELD_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Long> sfixed64Field_;
    /**
     * <code>repeated sfixed64 sfixed64_field = 12 [packed = false];</code>
     */
    public java.util.List<java.lang.Long>
        getSfixed64FieldList() {
      return sfixed64Field_;
    }
    /**
     * <code>repeated sfixed64 sfixed64_field = 12 [packed = false];</code>
     */
    public int getSfixed64FieldCount() {
      return sfixed64Field_.size();
    }
    /**
     * <code>repeated sfixed64 sfixed64_field = 12 [packed = false];</code>
     */
    public long getSfixed64Field(int index) {
      return sfixed64Field_.get(index);
    }

    public static final int BOOL_FIELD_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Boolean> boolField_;
    /**
     * <code>repeated bool bool_field = 13 [packed = false];</code>
     */
    public java.util.List<java.lang.Boolean>
        getBoolFieldList() {
      return boolField_;
    }
    /**
     * <code>repeated bool bool_field = 13 [packed = false];</code>
     */
    public int getBoolFieldCount() {
      return boolField_.size();
    }
    /**
     * <code>repeated bool bool_field = 13 [packed = false];</code>
     */
    public boolean getBoolField(int index) {
      return boolField_.get(index);
    }

    public static final int COLOR_FIELD_FIELD_NUMBER = 16;
    private java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> colorField_;
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = false];</code>
     */
    public java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldList() {
      return colorField_;
    }
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = false];</code>
     */
    public int getColorFieldCount() {
      return colorField_.size();
    }
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = false];</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField(int index) {
      return colorField_.get(index);
    }

    private void initFields() {
      doubleField_ = java.util.Collections.emptyList();
      floatField_ = java.util.Collections.emptyList();
      int32Field_ = java.util.Collections.emptyList();
      int64Field_ = java.util.Collections.emptyList();
      uint32Field_ = java.util.Collections.emptyList();
      uint64Field_ = java.util.Collections.emptyList();
      sint32Field_ = java.util.Collections.emptyList();
      sint64Field_ = java.util.Collections.emptyList();
      fixed32Field_ = java.util.Collections.emptyList();
      fixed64Field_ = java.util.Collections.emptyList();
      sfixed32Field_ = java.util.Collections.emptyList();
      sfixed64Field_ = java.util.Collections.emptyList();
      boolField_ = java.util.Collections.emptyList();
      colorField_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < doubleField_.size(); i++) {
        output.writeDouble(1, doubleField_.get(i));
      }
      for (int i = 0; i < floatField_.size(); i++) {
        output.writeFloat(2, floatField_.get(i));
      }
      for (int i = 0; i < int32Field_.size(); i++) {
        output.writeInt32(3, int32Field_.get(i));
      }
      for (int i = 0; i < int64Field_.size(); i++) {
        output.writeInt64(4, int64Field_.get(i));
      }
      for (int i = 0; i < uint32Field_.size(); i++) {
        output.writeUInt32(5, uint32Field_.get(i));
      }
      for (int i = 0; i < uint64Field_.size(); i++) {
        output.writeUInt64(6, uint64Field_.get(i));
      }
      for (int i = 0; i < sint32Field_.size(); i++) {
        output.writeSInt32(7, sint32Field_.get(i));
      }
      for (int i = 0; i < sint64Field_.size(); i++) {
        output.writeSInt64(8, sint64Field_.get(i));
      }
      for (int i = 0; i < fixed32Field_.size(); i++) {
        output.writeFixed32(9, fixed32Field_.get(i));
      }
      for (int i = 0; i < fixed64Field_.size(); i++) {
        output.writeFixed64(10, fixed64Field_.get(i));
      }
      for (int i = 0; i < sfixed32Field_.size(); i++) {
        output.writeSFixed32(11, sfixed32Field_.get(i));
      }
      for (int i = 0; i < sfixed64Field_.size(); i++) {
        output.writeSFixed64(12, sfixed64Field_.get(i));
      }
      for (int i = 0; i < boolField_.size(); i++) {
        output.writeBool(13, boolField_.get(i));
      }
      for (int i = 0; i < colorField_.size(); i++) {
        output.writeEnum(16, colorField_.get(i).getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleFieldList().size();
        size += dataSize;
        size += 1 * getDoubleFieldList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatFieldList().size();
        size += dataSize;
        size += 1 * getFloatFieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int32Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(int32Field_.get(i));
        }
        size += dataSize;
        size += 1 * getInt32FieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int64Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(int64Field_.get(i));
        }
        size += dataSize;
        size += 1 * getInt64FieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint32Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(uint32Field_.get(i));
        }
        size += dataSize;
        size += 1 * getUint32FieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint64Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(uint64Field_.get(i));
        }
        size += dataSize;
        size += 1 * getUint64FieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint32Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(sint32Field_.get(i));
        }
        size += dataSize;
        size += 1 * getSint32FieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint64Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(sint64Field_.get(i));
        }
        size += dataSize;
        size += 1 * getSint64FieldList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFixed32FieldList().size();
        size += dataSize;
        size += 1 * getFixed32FieldList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getFixed64FieldList().size();
        size += dataSize;
        size += 1 * getFixed64FieldList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getSfixed32FieldList().size();
        size += dataSize;
        size += 1 * getSfixed32FieldList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getSfixed64FieldList().size();
        size += dataSize;
        size += 1 * getSfixed64FieldList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getBoolFieldList().size();
        size += dataSize;
        size += 1 * getBoolFieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < colorField_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(colorField_.get(i).getNumber());
        }
        size += dataSize;
        size += 2 * colorField_.size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code me.lyh.protobuf.generic.proto2.RepeatedUnpacked}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:me.lyh.protobuf.generic.proto2.RepeatedUnpacked)
        me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpackedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_RepeatedUnpacked_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_RepeatedUnpacked_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked.class, me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked.Builder.class);
      }

      // Construct using me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        doubleField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        floatField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        int32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        int64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        uint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        uint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        sint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        sint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        fixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        sfixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        boolField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        colorField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_RepeatedUnpacked_descriptor;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked getDefaultInstanceForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked.getDefaultInstance();
      }

      public me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked build() {
        me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked buildPartial() {
        me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked result = new me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          doubleField_ = java.util.Collections.unmodifiableList(doubleField_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.doubleField_ = doubleField_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          floatField_ = java.util.Collections.unmodifiableList(floatField_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.floatField_ = floatField_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          int32Field_ = java.util.Collections.unmodifiableList(int32Field_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.int32Field_ = int32Field_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          int64Field_ = java.util.Collections.unmodifiableList(int64Field_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.int64Field_ = int64Field_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          uint32Field_ = java.util.Collections.unmodifiableList(uint32Field_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.uint32Field_ = uint32Field_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          uint64Field_ = java.util.Collections.unmodifiableList(uint64Field_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.uint64Field_ = uint64Field_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          sint32Field_ = java.util.Collections.unmodifiableList(sint32Field_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.sint32Field_ = sint32Field_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          sint64Field_ = java.util.Collections.unmodifiableList(sint64Field_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.sint64Field_ = sint64Field_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32Field_ = java.util.Collections.unmodifiableList(fixed32Field_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.fixed32Field_ = fixed32Field_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64Field_ = java.util.Collections.unmodifiableList(fixed64Field_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.fixed64Field_ = fixed64Field_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32Field_ = java.util.Collections.unmodifiableList(sfixed32Field_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.sfixed32Field_ = sfixed32Field_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64Field_ = java.util.Collections.unmodifiableList(sfixed64Field_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.sfixed64Field_ = sfixed64Field_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          boolField_ = java.util.Collections.unmodifiableList(boolField_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.boolField_ = boolField_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          colorField_ = java.util.Collections.unmodifiableList(colorField_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.colorField_ = colorField_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked) {
          return mergeFrom((me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked other) {
        if (other == me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked.getDefaultInstance()) return this;
        if (!other.doubleField_.isEmpty()) {
          if (doubleField_.isEmpty()) {
            doubleField_ = other.doubleField_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDoubleFieldIsMutable();
            doubleField_.addAll(other.doubleField_);
          }
          onChanged();
        }
        if (!other.floatField_.isEmpty()) {
          if (floatField_.isEmpty()) {
            floatField_ = other.floatField_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFloatFieldIsMutable();
            floatField_.addAll(other.floatField_);
          }
          onChanged();
        }
        if (!other.int32Field_.isEmpty()) {
          if (int32Field_.isEmpty()) {
            int32Field_ = other.int32Field_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureInt32FieldIsMutable();
            int32Field_.addAll(other.int32Field_);
          }
          onChanged();
        }
        if (!other.int64Field_.isEmpty()) {
          if (int64Field_.isEmpty()) {
            int64Field_ = other.int64Field_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureInt64FieldIsMutable();
            int64Field_.addAll(other.int64Field_);
          }
          onChanged();
        }
        if (!other.uint32Field_.isEmpty()) {
          if (uint32Field_.isEmpty()) {
            uint32Field_ = other.uint32Field_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureUint32FieldIsMutable();
            uint32Field_.addAll(other.uint32Field_);
          }
          onChanged();
        }
        if (!other.uint64Field_.isEmpty()) {
          if (uint64Field_.isEmpty()) {
            uint64Field_ = other.uint64Field_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureUint64FieldIsMutable();
            uint64Field_.addAll(other.uint64Field_);
          }
          onChanged();
        }
        if (!other.sint32Field_.isEmpty()) {
          if (sint32Field_.isEmpty()) {
            sint32Field_ = other.sint32Field_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureSint32FieldIsMutable();
            sint32Field_.addAll(other.sint32Field_);
          }
          onChanged();
        }
        if (!other.sint64Field_.isEmpty()) {
          if (sint64Field_.isEmpty()) {
            sint64Field_ = other.sint64Field_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureSint64FieldIsMutable();
            sint64Field_.addAll(other.sint64Field_);
          }
          onChanged();
        }
        if (!other.fixed32Field_.isEmpty()) {
          if (fixed32Field_.isEmpty()) {
            fixed32Field_ = other.fixed32Field_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureFixed32FieldIsMutable();
            fixed32Field_.addAll(other.fixed32Field_);
          }
          onChanged();
        }
        if (!other.fixed64Field_.isEmpty()) {
          if (fixed64Field_.isEmpty()) {
            fixed64Field_ = other.fixed64Field_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureFixed64FieldIsMutable();
            fixed64Field_.addAll(other.fixed64Field_);
          }
          onChanged();
        }
        if (!other.sfixed32Field_.isEmpty()) {
          if (sfixed32Field_.isEmpty()) {
            sfixed32Field_ = other.sfixed32Field_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureSfixed32FieldIsMutable();
            sfixed32Field_.addAll(other.sfixed32Field_);
          }
          onChanged();
        }
        if (!other.sfixed64Field_.isEmpty()) {
          if (sfixed64Field_.isEmpty()) {
            sfixed64Field_ = other.sfixed64Field_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureSfixed64FieldIsMutable();
            sfixed64Field_.addAll(other.sfixed64Field_);
          }
          onChanged();
        }
        if (!other.boolField_.isEmpty()) {
          if (boolField_.isEmpty()) {
            boolField_ = other.boolField_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureBoolFieldIsMutable();
            boolField_.addAll(other.boolField_);
          }
          onChanged();
        }
        if (!other.colorField_.isEmpty()) {
          if (colorField_.isEmpty()) {
            colorField_ = other.colorField_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureColorFieldIsMutable();
            colorField_.addAll(other.colorField_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.lyh.protobuf.generic.proto2.Schemas.RepeatedUnpacked) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> doubleField_ = java.util.Collections.emptyList();
      private void ensureDoubleFieldIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          doubleField_ = new java.util.ArrayList<java.lang.Double>(doubleField_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double double_field = 1 [packed = false];</code>
       */
      public java.util.List<java.lang.Double>
          getDoubleFieldList() {
        return java.util.Collections.unmodifiableList(doubleField_);
      }
      /**
       * <code>repeated double double_field = 1 [packed = false];</code>
       */
      public int getDoubleFieldCount() {
        return doubleField_.size();
      }
      /**
       * <code>repeated double double_field = 1 [packed = false];</code>
       */
      public double getDoubleField(int index) {
        return doubleField_.get(index);
      }
      /**
       * <code>repeated double double_field = 1 [packed = false];</code>
       */
      public Builder setDoubleField(
          int index, double value) {
        ensureDoubleFieldIsMutable();
        doubleField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field = 1 [packed = false];</code>
       */
      public Builder addDoubleField(double value) {
        ensureDoubleFieldIsMutable();
        doubleField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field = 1 [packed = false];</code>
       */
      public Builder addAllDoubleField(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDoubleFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, doubleField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field = 1 [packed = false];</code>
       */
      public Builder clearDoubleField() {
        doubleField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> floatField_ = java.util.Collections.emptyList();
      private void ensureFloatFieldIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          floatField_ = new java.util.ArrayList<java.lang.Float>(floatField_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float float_field = 2 [packed = false];</code>
       */
      public java.util.List<java.lang.Float>
          getFloatFieldList() {
        return java.util.Collections.unmodifiableList(floatField_);
      }
      /**
       * <code>repeated float float_field = 2 [packed = false];</code>
       */
      public int getFloatFieldCount() {
        return floatField_.size();
      }
      /**
       * <code>repeated float float_field = 2 [packed = false];</code>
       */
      public float getFloatField(int index) {
        return floatField_.get(index);
      }
      /**
       * <code>repeated float float_field = 2 [packed = false];</code>
       */
      public Builder setFloatField(
          int index, float value) {
        ensureFloatFieldIsMutable();
        floatField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_field = 2 [packed = false];</code>
       */
      public Builder addFloatField(float value) {
        ensureFloatFieldIsMutable();
        floatField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_field = 2 [packed = false];</code>
       */
      public Builder addAllFloatField(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, floatField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_field = 2 [packed = false];</code>
       */
      public Builder clearFloatField() {
        floatField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> int32Field_ = java.util.Collections.emptyList();
      private void ensureInt32FieldIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          int32Field_ = new java.util.ArrayList<java.lang.Integer>(int32Field_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 int32_field = 3 [packed = false];</code>
       */
      public java.util.List<java.lang.Integer>
          getInt32FieldList() {
        return java.util.Collections.unmodifiableList(int32Field_);
      }
      /**
       * <code>repeated int32 int32_field = 3 [packed = false];</code>
       */
      public int getInt32FieldCount() {
        return int32Field_.size();
      }
      /**
       * <code>repeated int32 int32_field = 3 [packed = false];</code>
       */
      public int getInt32Field(int index) {
        return int32Field_.get(index);
      }
      /**
       * <code>repeated int32 int32_field = 3 [packed = false];</code>
       */
      public Builder setInt32Field(
          int index, int value) {
        ensureInt32FieldIsMutable();
        int32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int32_field = 3 [packed = false];</code>
       */
      public Builder addInt32Field(int value) {
        ensureInt32FieldIsMutable();
        int32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int32_field = 3 [packed = false];</code>
       */
      public Builder addAllInt32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInt32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int32_field = 3 [packed = false];</code>
       */
      public Builder clearInt32Field() {
        int32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> int64Field_ = java.util.Collections.emptyList();
      private void ensureInt64FieldIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          int64Field_ = new java.util.ArrayList<java.lang.Long>(int64Field_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 int64_field = 4 [packed = false];</code>
       */
      public java.util.List<java.lang.Long>
          getInt64FieldList() {
        return java.util.Collections.unmodifiableList(int64Field_);
      }
      /**
       * <code>repeated int64 int64_field = 4 [packed = false];</code>
       */
      public int getInt64FieldCount() {
        return int64Field_.size();
      }
      /**
       * <code>repeated int64 int64_field = 4 [packed = false];</code>
       */
      public long getInt64Field(int index) {
        return int64Field_.get(index);
      }
      /**
       * <code>repeated int64 int64_field = 4 [packed = false];</code>
       */
      public Builder setInt64Field(
          int index, long value) {
        ensureInt64FieldIsMutable();
        int64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_field = 4 [packed = false];</code>
       */
      public Builder addInt64Field(long value) {
        ensureInt64FieldIsMutable();
        int64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_field = 4 [packed = false];</code>
       */
      public Builder addAllInt64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInt64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_field = 4 [packed = false];</code>
       */
      public Builder clearInt64Field() {
        int64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> uint32Field_ = java.util.Collections.emptyList();
      private void ensureUint32FieldIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          uint32Field_ = new java.util.ArrayList<java.lang.Integer>(uint32Field_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint32 uint32_field = 5 [packed = false];</code>
       */
      public java.util.List<java.lang.Integer>
          getUint32FieldList() {
        return java.util.Collections.unmodifiableList(uint32Field_);
      }
      /**
       * <code>repeated uint32 uint32_field = 5 [packed = false];</code>
       */
      public int getUint32FieldCount() {
        return uint32Field_.size();
      }
      /**
       * <code>repeated uint32 uint32_field = 5 [packed = false];</code>
       */
      public int getUint32Field(int index) {
        return uint32Field_.get(index);
      }
      /**
       * <code>repeated uint32 uint32_field = 5 [packed = false];</code>
       */
      public Builder setUint32Field(
          int index, int value) {
        ensureUint32FieldIsMutable();
        uint32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32_field = 5 [packed = false];</code>
       */
      public Builder addUint32Field(int value) {
        ensureUint32FieldIsMutable();
        uint32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32_field = 5 [packed = false];</code>
       */
      public Builder addAllUint32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUint32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uint32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32_field = 5 [packed = false];</code>
       */
      public Builder clearUint32Field() {
        uint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> uint64Field_ = java.util.Collections.emptyList();
      private void ensureUint64FieldIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          uint64Field_ = new java.util.ArrayList<java.lang.Long>(uint64Field_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated uint64 uint64_field = 6 [packed = false];</code>
       */
      public java.util.List<java.lang.Long>
          getUint64FieldList() {
        return java.util.Collections.unmodifiableList(uint64Field_);
      }
      /**
       * <code>repeated uint64 uint64_field = 6 [packed = false];</code>
       */
      public int getUint64FieldCount() {
        return uint64Field_.size();
      }
      /**
       * <code>repeated uint64 uint64_field = 6 [packed = false];</code>
       */
      public long getUint64Field(int index) {
        return uint64Field_.get(index);
      }
      /**
       * <code>repeated uint64 uint64_field = 6 [packed = false];</code>
       */
      public Builder setUint64Field(
          int index, long value) {
        ensureUint64FieldIsMutable();
        uint64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64_field = 6 [packed = false];</code>
       */
      public Builder addUint64Field(long value) {
        ensureUint64FieldIsMutable();
        uint64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64_field = 6 [packed = false];</code>
       */
      public Builder addAllUint64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUint64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uint64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64_field = 6 [packed = false];</code>
       */
      public Builder clearUint64Field() {
        uint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> sint32Field_ = java.util.Collections.emptyList();
      private void ensureSint32FieldIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          sint32Field_ = new java.util.ArrayList<java.lang.Integer>(sint32Field_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated sint32 sint32_field = 7 [packed = false];</code>
       */
      public java.util.List<java.lang.Integer>
          getSint32FieldList() {
        return java.util.Collections.unmodifiableList(sint32Field_);
      }
      /**
       * <code>repeated sint32 sint32_field = 7 [packed = false];</code>
       */
      public int getSint32FieldCount() {
        return sint32Field_.size();
      }
      /**
       * <code>repeated sint32 sint32_field = 7 [packed = false];</code>
       */
      public int getSint32Field(int index) {
        return sint32Field_.get(index);
      }
      /**
       * <code>repeated sint32 sint32_field = 7 [packed = false];</code>
       */
      public Builder setSint32Field(
          int index, int value) {
        ensureSint32FieldIsMutable();
        sint32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32_field = 7 [packed = false];</code>
       */
      public Builder addSint32Field(int value) {
        ensureSint32FieldIsMutable();
        sint32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32_field = 7 [packed = false];</code>
       */
      public Builder addAllSint32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSint32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sint32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32_field = 7 [packed = false];</code>
       */
      public Builder clearSint32Field() {
        sint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> sint64Field_ = java.util.Collections.emptyList();
      private void ensureSint64FieldIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          sint64Field_ = new java.util.ArrayList<java.lang.Long>(sint64Field_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated sint64 sint64_field = 8 [packed = false];</code>
       */
      public java.util.List<java.lang.Long>
          getSint64FieldList() {
        return java.util.Collections.unmodifiableList(sint64Field_);
      }
      /**
       * <code>repeated sint64 sint64_field = 8 [packed = false];</code>
       */
      public int getSint64FieldCount() {
        return sint64Field_.size();
      }
      /**
       * <code>repeated sint64 sint64_field = 8 [packed = false];</code>
       */
      public long getSint64Field(int index) {
        return sint64Field_.get(index);
      }
      /**
       * <code>repeated sint64 sint64_field = 8 [packed = false];</code>
       */
      public Builder setSint64Field(
          int index, long value) {
        ensureSint64FieldIsMutable();
        sint64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64_field = 8 [packed = false];</code>
       */
      public Builder addSint64Field(long value) {
        ensureSint64FieldIsMutable();
        sint64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64_field = 8 [packed = false];</code>
       */
      public Builder addAllSint64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSint64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sint64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64_field = 8 [packed = false];</code>
       */
      public Builder clearSint64Field() {
        sint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> fixed32Field_ = java.util.Collections.emptyList();
      private void ensureFixed32FieldIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32Field_ = new java.util.ArrayList<java.lang.Integer>(fixed32Field_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9 [packed = false];</code>
       */
      public java.util.List<java.lang.Integer>
          getFixed32FieldList() {
        return java.util.Collections.unmodifiableList(fixed32Field_);
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9 [packed = false];</code>
       */
      public int getFixed32FieldCount() {
        return fixed32Field_.size();
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9 [packed = false];</code>
       */
      public int getFixed32Field(int index) {
        return fixed32Field_.get(index);
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9 [packed = false];</code>
       */
      public Builder setFixed32Field(
          int index, int value) {
        ensureFixed32FieldIsMutable();
        fixed32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9 [packed = false];</code>
       */
      public Builder addFixed32Field(int value) {
        ensureFixed32FieldIsMutable();
        fixed32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9 [packed = false];</code>
       */
      public Builder addAllFixed32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFixed32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fixed32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9 [packed = false];</code>
       */
      public Builder clearFixed32Field() {
        fixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> fixed64Field_ = java.util.Collections.emptyList();
      private void ensureFixed64FieldIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64Field_ = new java.util.ArrayList<java.lang.Long>(fixed64Field_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10 [packed = false];</code>
       */
      public java.util.List<java.lang.Long>
          getFixed64FieldList() {
        return java.util.Collections.unmodifiableList(fixed64Field_);
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10 [packed = false];</code>
       */
      public int getFixed64FieldCount() {
        return fixed64Field_.size();
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10 [packed = false];</code>
       */
      public long getFixed64Field(int index) {
        return fixed64Field_.get(index);
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10 [packed = false];</code>
       */
      public Builder setFixed64Field(
          int index, long value) {
        ensureFixed64FieldIsMutable();
        fixed64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10 [packed = false];</code>
       */
      public Builder addFixed64Field(long value) {
        ensureFixed64FieldIsMutable();
        fixed64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10 [packed = false];</code>
       */
      public Builder addAllFixed64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFixed64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fixed64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10 [packed = false];</code>
       */
      public Builder clearFixed64Field() {
        fixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> sfixed32Field_ = java.util.Collections.emptyList();
      private void ensureSfixed32FieldIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32Field_ = new java.util.ArrayList<java.lang.Integer>(sfixed32Field_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11 [packed = false];</code>
       */
      public java.util.List<java.lang.Integer>
          getSfixed32FieldList() {
        return java.util.Collections.unmodifiableList(sfixed32Field_);
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11 [packed = false];</code>
       */
      public int getSfixed32FieldCount() {
        return sfixed32Field_.size();
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11 [packed = false];</code>
       */
      public int getSfixed32Field(int index) {
        return sfixed32Field_.get(index);
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11 [packed = false];</code>
       */
      public Builder setSfixed32Field(
          int index, int value) {
        ensureSfixed32FieldIsMutable();
        sfixed32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11 [packed = false];</code>
       */
      public Builder addSfixed32Field(int value) {
        ensureSfixed32FieldIsMutable();
        sfixed32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11 [packed = false];</code>
       */
      public Builder addAllSfixed32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSfixed32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sfixed32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11 [packed = false];</code>
       */
      public Builder clearSfixed32Field() {
        sfixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> sfixed64Field_ = java.util.Collections.emptyList();
      private void ensureSfixed64FieldIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64Field_ = new java.util.ArrayList<java.lang.Long>(sfixed64Field_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12 [packed = false];</code>
       */
      public java.util.List<java.lang.Long>
          getSfixed64FieldList() {
        return java.util.Collections.unmodifiableList(sfixed64Field_);
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12 [packed = false];</code>
       */
      public int getSfixed64FieldCount() {
        return sfixed64Field_.size();
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12 [packed = false];</code>
       */
      public long getSfixed64Field(int index) {
        return sfixed64Field_.get(index);
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12 [packed = false];</code>
       */
      public Builder setSfixed64Field(
          int index, long value) {
        ensureSfixed64FieldIsMutable();
        sfixed64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12 [packed = false];</code>
       */
      public Builder addSfixed64Field(long value) {
        ensureSfixed64FieldIsMutable();
        sfixed64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12 [packed = false];</code>
       */
      public Builder addAllSfixed64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSfixed64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sfixed64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12 [packed = false];</code>
       */
      public Builder clearSfixed64Field() {
        sfixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Boolean> boolField_ = java.util.Collections.emptyList();
      private void ensureBoolFieldIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          boolField_ = new java.util.ArrayList<java.lang.Boolean>(boolField_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated bool bool_field = 13 [packed = false];</code>
       */
      public java.util.List<java.lang.Boolean>
          getBoolFieldList() {
        return java.util.Collections.unmodifiableList(boolField_);
      }
      /**
       * <code>repeated bool bool_field = 13 [packed = false];</code>
       */
      public int getBoolFieldCount() {
        return boolField_.size();
      }
      /**
       * <code>repeated bool bool_field = 13 [packed = false];</code>
       */
      public boolean getBoolField(int index) {
        return boolField_.get(index);
      }
      /**
       * <code>repeated bool bool_field = 13 [packed = false];</code>
       */
      public Builder setBoolField(
          int index, boolean value) {
        ensureBoolFieldIsMutable();
        boolField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_field = 13 [packed = false];</code>
       */
      public Builder addBoolField(boolean value) {
        ensureBoolFieldIsMutable();
        boolField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_field = 13 [packed = false];</code>
       */
      public Builder addAllBoolField(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureBoolFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, boolField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_field = 13 [packed = false];</code>
       */
      public Builder clearBoolField() {
        boolField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      private java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> colorField_ =
        java.util.Collections.emptyList();
      private void ensureColorFieldIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          colorField_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>(colorField_);
          bitField0_ |= 0x00002000;
        }
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = false];</code>
       */
      public java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldList() {
        return java.util.Collections.unmodifiableList(colorField_);
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = false];</code>
       */
      public int getColorFieldCount() {
        return colorField_.size();
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = false];</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField(int index) {
        return colorField_.get(index);
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = false];</code>
       */
      public Builder setColorField(
          int index, me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorFieldIsMutable();
        colorField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = false];</code>
       */
      public Builder addColorField(me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorFieldIsMutable();
        colorField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = false];</code>
       */
      public Builder addAllColorField(
          java.lang.Iterable<? extends me.lyh.protobuf.generic.proto2.Schemas.Color> values) {
        ensureColorFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, colorField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field = 16 [packed = false];</code>
       */
      public Builder clearColorField() {
        colorField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:me.lyh.protobuf.generic.proto2.RepeatedUnpacked)
    }

    static {
      defaultInstance = new RepeatedUnpacked(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:me.lyh.protobuf.generic.proto2.RepeatedUnpacked)
  }

  public interface OneOfOrBuilder extends
      // @@protoc_insertion_point(interface_extends:me.lyh.protobuf.generic.proto2.OneOf)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional double double_field = 1;</code>
     */
    boolean hasDoubleField();
    /**
     * <code>optional double double_field = 1;</code>
     */
    double getDoubleField();

    /**
     * <code>optional float float_field = 2;</code>
     */
    boolean hasFloatField();
    /**
     * <code>optional float float_field = 2;</code>
     */
    float getFloatField();

    /**
     * <code>optional int32 int32_field = 3;</code>
     */
    boolean hasInt32Field();
    /**
     * <code>optional int32 int32_field = 3;</code>
     */
    int getInt32Field();

    /**
     * <code>optional int64 int64_field = 4;</code>
     */
    boolean hasInt64Field();
    /**
     * <code>optional int64 int64_field = 4;</code>
     */
    long getInt64Field();

    /**
     * <code>optional uint32 uint32_field = 5;</code>
     */
    boolean hasUint32Field();
    /**
     * <code>optional uint32 uint32_field = 5;</code>
     */
    int getUint32Field();

    /**
     * <code>optional uint64 uint64_field = 6;</code>
     */
    boolean hasUint64Field();
    /**
     * <code>optional uint64 uint64_field = 6;</code>
     */
    long getUint64Field();

    /**
     * <code>optional sint32 sint32_field = 7;</code>
     */
    boolean hasSint32Field();
    /**
     * <code>optional sint32 sint32_field = 7;</code>
     */
    int getSint32Field();

    /**
     * <code>optional sint64 sint64_field = 8;</code>
     */
    boolean hasSint64Field();
    /**
     * <code>optional sint64 sint64_field = 8;</code>
     */
    long getSint64Field();

    /**
     * <code>optional fixed32 fixed32_field = 9;</code>
     */
    boolean hasFixed32Field();
    /**
     * <code>optional fixed32 fixed32_field = 9;</code>
     */
    int getFixed32Field();

    /**
     * <code>optional fixed64 fixed64_field = 10;</code>
     */
    boolean hasFixed64Field();
    /**
     * <code>optional fixed64 fixed64_field = 10;</code>
     */
    long getFixed64Field();

    /**
     * <code>optional sfixed32 sfixed32_field = 11;</code>
     */
    boolean hasSfixed32Field();
    /**
     * <code>optional sfixed32 sfixed32_field = 11;</code>
     */
    int getSfixed32Field();

    /**
     * <code>optional sfixed64 sfixed64_field = 12;</code>
     */
    boolean hasSfixed64Field();
    /**
     * <code>optional sfixed64 sfixed64_field = 12;</code>
     */
    long getSfixed64Field();

    /**
     * <code>optional bool bool_field = 13;</code>
     */
    boolean hasBoolField();
    /**
     * <code>optional bool bool_field = 13;</code>
     */
    boolean getBoolField();

    /**
     * <code>optional string string_field = 14;</code>
     */
    boolean hasStringField();
    /**
     * <code>optional string string_field = 14;</code>
     */
    java.lang.String getStringField();
    /**
     * <code>optional string string_field = 14;</code>
     */
    com.google.protobuf.ByteString
        getStringFieldBytes();

    /**
     * <code>optional bytes bytes_field = 15;</code>
     */
    boolean hasBytesField();
    /**
     * <code>optional bytes bytes_field = 15;</code>
     */
    com.google.protobuf.ByteString getBytesField();

    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    boolean hasColorField();
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Color getColorField();
  }
  /**
   * Protobuf type {@code me.lyh.protobuf.generic.proto2.OneOf}
   */
  public static final class OneOf extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:me.lyh.protobuf.generic.proto2.OneOf)
      OneOfOrBuilder {
    // Use OneOf.newBuilder() to construct.
    private OneOf(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OneOf(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OneOf defaultInstance;
    public static OneOf getDefaultInstance() {
      return defaultInstance;
    }

    public OneOf getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OneOf(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              fieldCase_ = 1;
              field_ = input.readDouble();
              break;
            }
            case 21: {
              fieldCase_ = 2;
              field_ = input.readFloat();
              break;
            }
            case 24: {
              fieldCase_ = 3;
              field_ = input.readInt32();
              break;
            }
            case 32: {
              fieldCase_ = 4;
              field_ = input.readInt64();
              break;
            }
            case 40: {
              fieldCase_ = 5;
              field_ = input.readUInt32();
              break;
            }
            case 48: {
              fieldCase_ = 6;
              field_ = input.readUInt64();
              break;
            }
            case 56: {
              fieldCase_ = 7;
              field_ = input.readSInt32();
              break;
            }
            case 64: {
              fieldCase_ = 8;
              field_ = input.readSInt64();
              break;
            }
            case 77: {
              fieldCase_ = 9;
              field_ = input.readFixed32();
              break;
            }
            case 81: {
              fieldCase_ = 10;
              field_ = input.readFixed64();
              break;
            }
            case 93: {
              fieldCase_ = 11;
              field_ = input.readSFixed32();
              break;
            }
            case 97: {
              fieldCase_ = 12;
              field_ = input.readSFixed64();
              break;
            }
            case 104: {
              fieldCase_ = 13;
              field_ = input.readBool();
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              fieldCase_ = 14;
              field_ = bs;
              break;
            }
            case 122: {
              fieldCase_ = 15;
              field_ = input.readBytes();
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                fieldCase_ = 16;
                field_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_OneOf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_OneOf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.lyh.protobuf.generic.proto2.Schemas.OneOf.class, me.lyh.protobuf.generic.proto2.Schemas.OneOf.Builder.class);
    }

    public static com.google.protobuf.Parser<OneOf> PARSER =
        new com.google.protobuf.AbstractParser<OneOf>() {
      public OneOf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OneOf(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OneOf> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int fieldCase_ = 0;
    private java.lang.Object field_;
    public enum FieldCase
        implements com.google.protobuf.Internal.EnumLite {
      DOUBLE_FIELD(1),
      FLOAT_FIELD(2),
      INT32_FIELD(3),
      INT64_FIELD(4),
      UINT32_FIELD(5),
      UINT64_FIELD(6),
      SINT32_FIELD(7),
      SINT64_FIELD(8),
      FIXED32_FIELD(9),
      FIXED64_FIELD(10),
      SFIXED32_FIELD(11),
      SFIXED64_FIELD(12),
      BOOL_FIELD(13),
      STRING_FIELD(14),
      BYTES_FIELD(15),
      COLOR_FIELD(16),
      FIELD_NOT_SET(0);
      private int value = 0;
      private FieldCase(int value) {
        this.value = value;
      }
      public static FieldCase valueOf(int value) {
        switch (value) {
          case 1: return DOUBLE_FIELD;
          case 2: return FLOAT_FIELD;
          case 3: return INT32_FIELD;
          case 4: return INT64_FIELD;
          case 5: return UINT32_FIELD;
          case 6: return UINT64_FIELD;
          case 7: return SINT32_FIELD;
          case 8: return SINT64_FIELD;
          case 9: return FIXED32_FIELD;
          case 10: return FIXED64_FIELD;
          case 11: return SFIXED32_FIELD;
          case 12: return SFIXED64_FIELD;
          case 13: return BOOL_FIELD;
          case 14: return STRING_FIELD;
          case 15: return BYTES_FIELD;
          case 16: return COLOR_FIELD;
          case 0: return FIELD_NOT_SET;
          default: throw new java.lang.IllegalArgumentException(
            "Value is undefined for this oneof enum.");
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public FieldCase
    getFieldCase() {
      return FieldCase.valueOf(
          fieldCase_);
    }

    public static final int DOUBLE_FIELD_FIELD_NUMBER = 1;
    /**
     * <code>optional double double_field = 1;</code>
     */
    public boolean hasDoubleField() {
      return fieldCase_ == 1;
    }
    /**
     * <code>optional double double_field = 1;</code>
     */
    public double getDoubleField() {
      if (fieldCase_ == 1) {
        return (java.lang.Double) field_;
      }
      return 0D;
    }

    public static final int FLOAT_FIELD_FIELD_NUMBER = 2;
    /**
     * <code>optional float float_field = 2;</code>
     */
    public boolean hasFloatField() {
      return fieldCase_ == 2;
    }
    /**
     * <code>optional float float_field = 2;</code>
     */
    public float getFloatField() {
      if (fieldCase_ == 2) {
        return (java.lang.Float) field_;
      }
      return 0F;
    }

    public static final int INT32_FIELD_FIELD_NUMBER = 3;
    /**
     * <code>optional int32 int32_field = 3;</code>
     */
    public boolean hasInt32Field() {
      return fieldCase_ == 3;
    }
    /**
     * <code>optional int32 int32_field = 3;</code>
     */
    public int getInt32Field() {
      if (fieldCase_ == 3) {
        return (java.lang.Integer) field_;
      }
      return 0;
    }

    public static final int INT64_FIELD_FIELD_NUMBER = 4;
    /**
     * <code>optional int64 int64_field = 4;</code>
     */
    public boolean hasInt64Field() {
      return fieldCase_ == 4;
    }
    /**
     * <code>optional int64 int64_field = 4;</code>
     */
    public long getInt64Field() {
      if (fieldCase_ == 4) {
        return (java.lang.Long) field_;
      }
      return 0L;
    }

    public static final int UINT32_FIELD_FIELD_NUMBER = 5;
    /**
     * <code>optional uint32 uint32_field = 5;</code>
     */
    public boolean hasUint32Field() {
      return fieldCase_ == 5;
    }
    /**
     * <code>optional uint32 uint32_field = 5;</code>
     */
    public int getUint32Field() {
      if (fieldCase_ == 5) {
        return (java.lang.Integer) field_;
      }
      return 0;
    }

    public static final int UINT64_FIELD_FIELD_NUMBER = 6;
    /**
     * <code>optional uint64 uint64_field = 6;</code>
     */
    public boolean hasUint64Field() {
      return fieldCase_ == 6;
    }
    /**
     * <code>optional uint64 uint64_field = 6;</code>
     */
    public long getUint64Field() {
      if (fieldCase_ == 6) {
        return (java.lang.Long) field_;
      }
      return 0L;
    }

    public static final int SINT32_FIELD_FIELD_NUMBER = 7;
    /**
     * <code>optional sint32 sint32_field = 7;</code>
     */
    public boolean hasSint32Field() {
      return fieldCase_ == 7;
    }
    /**
     * <code>optional sint32 sint32_field = 7;</code>
     */
    public int getSint32Field() {
      if (fieldCase_ == 7) {
        return (java.lang.Integer) field_;
      }
      return 0;
    }

    public static final int SINT64_FIELD_FIELD_NUMBER = 8;
    /**
     * <code>optional sint64 sint64_field = 8;</code>
     */
    public boolean hasSint64Field() {
      return fieldCase_ == 8;
    }
    /**
     * <code>optional sint64 sint64_field = 8;</code>
     */
    public long getSint64Field() {
      if (fieldCase_ == 8) {
        return (java.lang.Long) field_;
      }
      return 0L;
    }

    public static final int FIXED32_FIELD_FIELD_NUMBER = 9;
    /**
     * <code>optional fixed32 fixed32_field = 9;</code>
     */
    public boolean hasFixed32Field() {
      return fieldCase_ == 9;
    }
    /**
     * <code>optional fixed32 fixed32_field = 9;</code>
     */
    public int getFixed32Field() {
      if (fieldCase_ == 9) {
        return (java.lang.Integer) field_;
      }
      return 0;
    }

    public static final int FIXED64_FIELD_FIELD_NUMBER = 10;
    /**
     * <code>optional fixed64 fixed64_field = 10;</code>
     */
    public boolean hasFixed64Field() {
      return fieldCase_ == 10;
    }
    /**
     * <code>optional fixed64 fixed64_field = 10;</code>
     */
    public long getFixed64Field() {
      if (fieldCase_ == 10) {
        return (java.lang.Long) field_;
      }
      return 0L;
    }

    public static final int SFIXED32_FIELD_FIELD_NUMBER = 11;
    /**
     * <code>optional sfixed32 sfixed32_field = 11;</code>
     */
    public boolean hasSfixed32Field() {
      return fieldCase_ == 11;
    }
    /**
     * <code>optional sfixed32 sfixed32_field = 11;</code>
     */
    public int getSfixed32Field() {
      if (fieldCase_ == 11) {
        return (java.lang.Integer) field_;
      }
      return 0;
    }

    public static final int SFIXED64_FIELD_FIELD_NUMBER = 12;
    /**
     * <code>optional sfixed64 sfixed64_field = 12;</code>
     */
    public boolean hasSfixed64Field() {
      return fieldCase_ == 12;
    }
    /**
     * <code>optional sfixed64 sfixed64_field = 12;</code>
     */
    public long getSfixed64Field() {
      if (fieldCase_ == 12) {
        return (java.lang.Long) field_;
      }
      return 0L;
    }

    public static final int BOOL_FIELD_FIELD_NUMBER = 13;
    /**
     * <code>optional bool bool_field = 13;</code>
     */
    public boolean hasBoolField() {
      return fieldCase_ == 13;
    }
    /**
     * <code>optional bool bool_field = 13;</code>
     */
    public boolean getBoolField() {
      if (fieldCase_ == 13) {
        return (java.lang.Boolean) field_;
      }
      return false;
    }

    public static final int STRING_FIELD_FIELD_NUMBER = 14;
    /**
     * <code>optional string string_field = 14;</code>
     */
    public boolean hasStringField() {
      return fieldCase_ == 14;
    }
    /**
     * <code>optional string string_field = 14;</code>
     */
    public java.lang.String getStringField() {
      java.lang.Object ref = "";
      if (fieldCase_ == 14) {
        ref = field_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8() && (fieldCase_ == 14)) {
          field_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string string_field = 14;</code>
     */
    public com.google.protobuf.ByteString
        getStringFieldBytes() {
      java.lang.Object ref = "";
      if (fieldCase_ == 14) {
        ref = field_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (fieldCase_ == 14) {
          field_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BYTES_FIELD_FIELD_NUMBER = 15;
    /**
     * <code>optional bytes bytes_field = 15;</code>
     */
    public boolean hasBytesField() {
      return fieldCase_ == 15;
    }
    /**
     * <code>optional bytes bytes_field = 15;</code>
     */
    public com.google.protobuf.ByteString getBytesField() {
      if (fieldCase_ == 15) {
        return (com.google.protobuf.ByteString) field_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int COLOR_FIELD_FIELD_NUMBER = 16;
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    public boolean hasColorField() {
      return fieldCase_ == 16;
    }
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField() {
      if (fieldCase_ == 16) {
        return (me.lyh.protobuf.generic.proto2.Schemas.Color) field_;
      }
      return me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (fieldCase_ == 1) {
        output.writeDouble(
            1, (double)((java.lang.Double) field_));
      }
      if (fieldCase_ == 2) {
        output.writeFloat(
            2, (float)((java.lang.Float) field_));
      }
      if (fieldCase_ == 3) {
        output.writeInt32(
            3, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 4) {
        output.writeInt64(
            4, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 5) {
        output.writeUInt32(
            5, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 6) {
        output.writeUInt64(
            6, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 7) {
        output.writeSInt32(
            7, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 8) {
        output.writeSInt64(
            8, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 9) {
        output.writeFixed32(
            9, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 10) {
        output.writeFixed64(
            10, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 11) {
        output.writeSFixed32(
            11, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 12) {
        output.writeSFixed64(
            12, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 13) {
        output.writeBool(
            13, (boolean)((java.lang.Boolean) field_));
      }
      if (fieldCase_ == 14) {
        output.writeBytes(14, getStringFieldBytes());
      }
      if (fieldCase_ == 15) {
        output.writeBytes(
            15, (com.google.protobuf.ByteString)((com.google.protobuf.ByteString) field_));
      }
      if (fieldCase_ == 16) {
        output.writeEnum(16, ((me.lyh.protobuf.generic.proto2.Schemas.Color) field_).getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (fieldCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(
              1, (double)((java.lang.Double) field_));
      }
      if (fieldCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(
              2, (float)((java.lang.Float) field_));
      }
      if (fieldCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              3, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              4, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              5, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(
              6, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(
              7, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(
              8, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(
              9, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(
              10, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(
              11, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(
              12, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              13, (boolean)((java.lang.Boolean) field_));
      }
      if (fieldCase_ == 14) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getStringFieldBytes());
      }
      if (fieldCase_ == 15) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              15, (com.google.protobuf.ByteString)((com.google.protobuf.ByteString) field_));
      }
      if (fieldCase_ == 16) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, ((me.lyh.protobuf.generic.proto2.Schemas.Color) field_).getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.lyh.protobuf.generic.proto2.Schemas.OneOf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.OneOf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.OneOf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.OneOf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.OneOf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.OneOf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.OneOf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.OneOf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.OneOf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.OneOf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.lyh.protobuf.generic.proto2.Schemas.OneOf prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code me.lyh.protobuf.generic.proto2.OneOf}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:me.lyh.protobuf.generic.proto2.OneOf)
        me.lyh.protobuf.generic.proto2.Schemas.OneOfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_OneOf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_OneOf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.lyh.protobuf.generic.proto2.Schemas.OneOf.class, me.lyh.protobuf.generic.proto2.Schemas.OneOf.Builder.class);
      }

      // Construct using me.lyh.protobuf.generic.proto2.Schemas.OneOf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fieldCase_ = 0;
        field_ = null;
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_OneOf_descriptor;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.OneOf getDefaultInstanceForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.OneOf.getDefaultInstance();
      }

      public me.lyh.protobuf.generic.proto2.Schemas.OneOf build() {
        me.lyh.protobuf.generic.proto2.Schemas.OneOf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.OneOf buildPartial() {
        me.lyh.protobuf.generic.proto2.Schemas.OneOf result = new me.lyh.protobuf.generic.proto2.Schemas.OneOf(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (fieldCase_ == 1) {
          result.field_ = field_;
        }
        if (fieldCase_ == 2) {
          result.field_ = field_;
        }
        if (fieldCase_ == 3) {
          result.field_ = field_;
        }
        if (fieldCase_ == 4) {
          result.field_ = field_;
        }
        if (fieldCase_ == 5) {
          result.field_ = field_;
        }
        if (fieldCase_ == 6) {
          result.field_ = field_;
        }
        if (fieldCase_ == 7) {
          result.field_ = field_;
        }
        if (fieldCase_ == 8) {
          result.field_ = field_;
        }
        if (fieldCase_ == 9) {
          result.field_ = field_;
        }
        if (fieldCase_ == 10) {
          result.field_ = field_;
        }
        if (fieldCase_ == 11) {
          result.field_ = field_;
        }
        if (fieldCase_ == 12) {
          result.field_ = field_;
        }
        if (fieldCase_ == 13) {
          result.field_ = field_;
        }
        if (fieldCase_ == 14) {
          result.field_ = field_;
        }
        if (fieldCase_ == 15) {
          result.field_ = field_;
        }
        if (fieldCase_ == 16) {
          result.field_ = field_;
        }
        result.bitField0_ = to_bitField0_;
        result.fieldCase_ = fieldCase_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.lyh.protobuf.generic.proto2.Schemas.OneOf) {
          return mergeFrom((me.lyh.protobuf.generic.proto2.Schemas.OneOf)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.lyh.protobuf.generic.proto2.Schemas.OneOf other) {
        if (other == me.lyh.protobuf.generic.proto2.Schemas.OneOf.getDefaultInstance()) return this;
        switch (other.getFieldCase()) {
          case DOUBLE_FIELD: {
            setDoubleField(other.getDoubleField());
            break;
          }
          case FLOAT_FIELD: {
            setFloatField(other.getFloatField());
            break;
          }
          case INT32_FIELD: {
            setInt32Field(other.getInt32Field());
            break;
          }
          case INT64_FIELD: {
            setInt64Field(other.getInt64Field());
            break;
          }
          case UINT32_FIELD: {
            setUint32Field(other.getUint32Field());
            break;
          }
          case UINT64_FIELD: {
            setUint64Field(other.getUint64Field());
            break;
          }
          case SINT32_FIELD: {
            setSint32Field(other.getSint32Field());
            break;
          }
          case SINT64_FIELD: {
            setSint64Field(other.getSint64Field());
            break;
          }
          case FIXED32_FIELD: {
            setFixed32Field(other.getFixed32Field());
            break;
          }
          case FIXED64_FIELD: {
            setFixed64Field(other.getFixed64Field());
            break;
          }
          case SFIXED32_FIELD: {
            setSfixed32Field(other.getSfixed32Field());
            break;
          }
          case SFIXED64_FIELD: {
            setSfixed64Field(other.getSfixed64Field());
            break;
          }
          case BOOL_FIELD: {
            setBoolField(other.getBoolField());
            break;
          }
          case STRING_FIELD: {
            fieldCase_ = 14;
            field_ = other.field_;
            onChanged();
            break;
          }
          case BYTES_FIELD: {
            setBytesField(other.getBytesField());
            break;
          }
          case COLOR_FIELD: {
            setColorField(other.getColorField());
            break;
          }
          case FIELD_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.lyh.protobuf.generic.proto2.Schemas.OneOf parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.lyh.protobuf.generic.proto2.Schemas.OneOf) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int fieldCase_ = 0;
      private java.lang.Object field_;
      public FieldCase
          getFieldCase() {
        return FieldCase.valueOf(
            fieldCase_);
      }

      public Builder clearField() {
        fieldCase_ = 0;
        field_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       * <code>optional double double_field = 1;</code>
       */
      public boolean hasDoubleField() {
        return fieldCase_ == 1;
      }
      /**
       * <code>optional double double_field = 1;</code>
       */
      public double getDoubleField() {
        if (fieldCase_ == 1) {
          return (java.lang.Double) field_;
        }
        return 0D;
      }
      /**
       * <code>optional double double_field = 1;</code>
       */
      public Builder setDoubleField(double value) {
        fieldCase_ = 1;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double double_field = 1;</code>
       */
      public Builder clearDoubleField() {
        if (fieldCase_ == 1) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional float float_field = 2;</code>
       */
      public boolean hasFloatField() {
        return fieldCase_ == 2;
      }
      /**
       * <code>optional float float_field = 2;</code>
       */
      public float getFloatField() {
        if (fieldCase_ == 2) {
          return (java.lang.Float) field_;
        }
        return 0F;
      }
      /**
       * <code>optional float float_field = 2;</code>
       */
      public Builder setFloatField(float value) {
        fieldCase_ = 2;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float float_field = 2;</code>
       */
      public Builder clearFloatField() {
        if (fieldCase_ == 2) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional int32 int32_field = 3;</code>
       */
      public boolean hasInt32Field() {
        return fieldCase_ == 3;
      }
      /**
       * <code>optional int32 int32_field = 3;</code>
       */
      public int getInt32Field() {
        if (fieldCase_ == 3) {
          return (java.lang.Integer) field_;
        }
        return 0;
      }
      /**
       * <code>optional int32 int32_field = 3;</code>
       */
      public Builder setInt32Field(int value) {
        fieldCase_ = 3;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 int32_field = 3;</code>
       */
      public Builder clearInt32Field() {
        if (fieldCase_ == 3) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional int64 int64_field = 4;</code>
       */
      public boolean hasInt64Field() {
        return fieldCase_ == 4;
      }
      /**
       * <code>optional int64 int64_field = 4;</code>
       */
      public long getInt64Field() {
        if (fieldCase_ == 4) {
          return (java.lang.Long) field_;
        }
        return 0L;
      }
      /**
       * <code>optional int64 int64_field = 4;</code>
       */
      public Builder setInt64Field(long value) {
        fieldCase_ = 4;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 int64_field = 4;</code>
       */
      public Builder clearInt64Field() {
        if (fieldCase_ == 4) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional uint32 uint32_field = 5;</code>
       */
      public boolean hasUint32Field() {
        return fieldCase_ == 5;
      }
      /**
       * <code>optional uint32 uint32_field = 5;</code>
       */
      public int getUint32Field() {
        if (fieldCase_ == 5) {
          return (java.lang.Integer) field_;
        }
        return 0;
      }
      /**
       * <code>optional uint32 uint32_field = 5;</code>
       */
      public Builder setUint32Field(int value) {
        fieldCase_ = 5;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 uint32_field = 5;</code>
       */
      public Builder clearUint32Field() {
        if (fieldCase_ == 5) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional uint64 uint64_field = 6;</code>
       */
      public boolean hasUint64Field() {
        return fieldCase_ == 6;
      }
      /**
       * <code>optional uint64 uint64_field = 6;</code>
       */
      public long getUint64Field() {
        if (fieldCase_ == 6) {
          return (java.lang.Long) field_;
        }
        return 0L;
      }
      /**
       * <code>optional uint64 uint64_field = 6;</code>
       */
      public Builder setUint64Field(long value) {
        fieldCase_ = 6;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 uint64_field = 6;</code>
       */
      public Builder clearUint64Field() {
        if (fieldCase_ == 6) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional sint32 sint32_field = 7;</code>
       */
      public boolean hasSint32Field() {
        return fieldCase_ == 7;
      }
      /**
       * <code>optional sint32 sint32_field = 7;</code>
       */
      public int getSint32Field() {
        if (fieldCase_ == 7) {
          return (java.lang.Integer) field_;
        }
        return 0;
      }
      /**
       * <code>optional sint32 sint32_field = 7;</code>
       */
      public Builder setSint32Field(int value) {
        fieldCase_ = 7;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 sint32_field = 7;</code>
       */
      public Builder clearSint32Field() {
        if (fieldCase_ == 7) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional sint64 sint64_field = 8;</code>
       */
      public boolean hasSint64Field() {
        return fieldCase_ == 8;
      }
      /**
       * <code>optional sint64 sint64_field = 8;</code>
       */
      public long getSint64Field() {
        if (fieldCase_ == 8) {
          return (java.lang.Long) field_;
        }
        return 0L;
      }
      /**
       * <code>optional sint64 sint64_field = 8;</code>
       */
      public Builder setSint64Field(long value) {
        fieldCase_ = 8;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 sint64_field = 8;</code>
       */
      public Builder clearSint64Field() {
        if (fieldCase_ == 8) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional fixed32 fixed32_field = 9;</code>
       */
      public boolean hasFixed32Field() {
        return fieldCase_ == 9;
      }
      /**
       * <code>optional fixed32 fixed32_field = 9;</code>
       */
      public int getFixed32Field() {
        if (fieldCase_ == 9) {
          return (java.lang.Integer) field_;
        }
        return 0;
      }
      /**
       * <code>optional fixed32 fixed32_field = 9;</code>
       */
      public Builder setFixed32Field(int value) {
        fieldCase_ = 9;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 fixed32_field = 9;</code>
       */
      public Builder clearFixed32Field() {
        if (fieldCase_ == 9) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional fixed64 fixed64_field = 10;</code>
       */
      public boolean hasFixed64Field() {
        return fieldCase_ == 10;
      }
      /**
       * <code>optional fixed64 fixed64_field = 10;</code>
       */
      public long getFixed64Field() {
        if (fieldCase_ == 10) {
          return (java.lang.Long) field_;
        }
        return 0L;
      }
      /**
       * <code>optional fixed64 fixed64_field = 10;</code>
       */
      public Builder setFixed64Field(long value) {
        fieldCase_ = 10;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 fixed64_field = 10;</code>
       */
      public Builder clearFixed64Field() {
        if (fieldCase_ == 10) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional sfixed32 sfixed32_field = 11;</code>
       */
      public boolean hasSfixed32Field() {
        return fieldCase_ == 11;
      }
      /**
       * <code>optional sfixed32 sfixed32_field = 11;</code>
       */
      public int getSfixed32Field() {
        if (fieldCase_ == 11) {
          return (java.lang.Integer) field_;
        }
        return 0;
      }
      /**
       * <code>optional sfixed32 sfixed32_field = 11;</code>
       */
      public Builder setSfixed32Field(int value) {
        fieldCase_ = 11;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed32 sfixed32_field = 11;</code>
       */
      public Builder clearSfixed32Field() {
        if (fieldCase_ == 11) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional sfixed64 sfixed64_field = 12;</code>
       */
      public boolean hasSfixed64Field() {
        return fieldCase_ == 12;
      }
      /**
       * <code>optional sfixed64 sfixed64_field = 12;</code>
       */
      public long getSfixed64Field() {
        if (fieldCase_ == 12) {
          return (java.lang.Long) field_;
        }
        return 0L;
      }
      /**
       * <code>optional sfixed64 sfixed64_field = 12;</code>
       */
      public Builder setSfixed64Field(long value) {
        fieldCase_ = 12;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed64 sfixed64_field = 12;</code>
       */
      public Builder clearSfixed64Field() {
        if (fieldCase_ == 12) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional bool bool_field = 13;</code>
       */
      public boolean hasBoolField() {
        return fieldCase_ == 13;
      }
      /**
       * <code>optional bool bool_field = 13;</code>
       */
      public boolean getBoolField() {
        if (fieldCase_ == 13) {
          return (java.lang.Boolean) field_;
        }
        return false;
      }
      /**
       * <code>optional bool bool_field = 13;</code>
       */
      public Builder setBoolField(boolean value) {
        fieldCase_ = 13;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool bool_field = 13;</code>
       */
      public Builder clearBoolField() {
        if (fieldCase_ == 13) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional string string_field = 14;</code>
       */
      public boolean hasStringField() {
        return fieldCase_ == 14;
      }
      /**
       * <code>optional string string_field = 14;</code>
       */
      public java.lang.String getStringField() {
        java.lang.Object ref = "";
        if (fieldCase_ == 14) {
          ref = field_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (fieldCase_ == 14) {
            if (bs.isValidUtf8()) {
              field_ = s;
            }
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string string_field = 14;</code>
       */
      public com.google.protobuf.ByteString
          getStringFieldBytes() {
        java.lang.Object ref = "";
        if (fieldCase_ == 14) {
          ref = field_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (fieldCase_ == 14) {
            field_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string string_field = 14;</code>
       */
      public Builder setStringField(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  fieldCase_ = 14;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_field = 14;</code>
       */
      public Builder clearStringField() {
        if (fieldCase_ == 14) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional string string_field = 14;</code>
       */
      public Builder setStringFieldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  fieldCase_ = 14;
        field_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional bytes bytes_field = 15;</code>
       */
      public boolean hasBytesField() {
        return fieldCase_ == 15;
      }
      /**
       * <code>optional bytes bytes_field = 15;</code>
       */
      public com.google.protobuf.ByteString getBytesField() {
        if (fieldCase_ == 15) {
          return (com.google.protobuf.ByteString) field_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <code>optional bytes bytes_field = 15;</code>
       */
      public Builder setBytesField(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  fieldCase_ = 15;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes bytes_field = 15;</code>
       */
      public Builder clearBytesField() {
        if (fieldCase_ == 15) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public boolean hasColorField() {
        return fieldCase_ == 16;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField() {
        if (fieldCase_ == 16) {
          return (me.lyh.protobuf.generic.proto2.Schemas.Color) field_;
        }
        return me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public Builder setColorField(me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        fieldCase_ = 16;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16;</code>
       */
      public Builder clearColorField() {
        if (fieldCase_ == 16) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:me.lyh.protobuf.generic.proto2.OneOf)
    }

    static {
      defaultInstance = new OneOf(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:me.lyh.protobuf.generic.proto2.OneOf)
  }

  public interface MixedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:me.lyh.protobuf.generic.proto2.Mixed)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required double double_field = 1;</code>
     */
    boolean hasDoubleField();
    /**
     * <code>required double double_field = 1;</code>
     */
    double getDoubleField();

    /**
     * <code>required string string_field = 2;</code>
     */
    boolean hasStringField();
    /**
     * <code>required string string_field = 2;</code>
     */
    java.lang.String getStringField();
    /**
     * <code>required string string_field = 2;</code>
     */
    com.google.protobuf.ByteString
        getStringFieldBytes();

    /**
     * <code>required bytes bytes_field = 3;</code>
     */
    boolean hasBytesField();
    /**
     * <code>required bytes bytes_field = 3;</code>
     */
    com.google.protobuf.ByteString getBytesField();

    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
     */
    boolean hasColorField();
    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Color getColorField();

    /**
     * <code>optional double double_field_o = 5;</code>
     */
    boolean hasDoubleFieldO();
    /**
     * <code>optional double double_field_o = 5;</code>
     */
    double getDoubleFieldO();

    /**
     * <code>optional string string_field_o = 6;</code>
     */
    boolean hasStringFieldO();
    /**
     * <code>optional string string_field_o = 6;</code>
     */
    java.lang.String getStringFieldO();
    /**
     * <code>optional string string_field_o = 6;</code>
     */
    com.google.protobuf.ByteString
        getStringFieldOBytes();

    /**
     * <code>optional bytes bytes_field_o = 7;</code>
     */
    boolean hasBytesFieldO();
    /**
     * <code>optional bytes bytes_field_o = 7;</code>
     */
    com.google.protobuf.ByteString getBytesFieldO();

    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 8;</code>
     */
    boolean hasColorFieldO();
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 8;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Color getColorFieldO();

    /**
     * <code>repeated double double_field_r = 9;</code>
     */
    java.util.List<java.lang.Double> getDoubleFieldRList();
    /**
     * <code>repeated double double_field_r = 9;</code>
     */
    int getDoubleFieldRCount();
    /**
     * <code>repeated double double_field_r = 9;</code>
     */
    double getDoubleFieldR(int index);

    /**
     * <code>repeated string string_field_r = 10;</code>
     */
    com.google.protobuf.ProtocolStringList
        getStringFieldRList();
    /**
     * <code>repeated string string_field_r = 10;</code>
     */
    int getStringFieldRCount();
    /**
     * <code>repeated string string_field_r = 10;</code>
     */
    java.lang.String getStringFieldR(int index);
    /**
     * <code>repeated string string_field_r = 10;</code>
     */
    com.google.protobuf.ByteString
        getStringFieldRBytes(int index);

    /**
     * <code>repeated bytes bytes_field_r = 11;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getBytesFieldRList();
    /**
     * <code>repeated bytes bytes_field_r = 11;</code>
     */
    int getBytesFieldRCount();
    /**
     * <code>repeated bytes bytes_field_r = 11;</code>
     */
    com.google.protobuf.ByteString getBytesFieldR(int index);

    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 12;</code>
     */
    java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldRList();
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 12;</code>
     */
    int getColorFieldRCount();
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 12;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Color getColorFieldR(int index);
  }
  /**
   * Protobuf type {@code me.lyh.protobuf.generic.proto2.Mixed}
   */
  public static final class Mixed extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:me.lyh.protobuf.generic.proto2.Mixed)
      MixedOrBuilder {
    // Use Mixed.newBuilder() to construct.
    private Mixed(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Mixed(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Mixed defaultInstance;
    public static Mixed getDefaultInstance() {
      return defaultInstance;
    }

    public Mixed getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Mixed(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              doubleField_ = input.readDouble();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              stringField_ = bs;
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              bytesField_ = input.readBytes();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                colorField_ = value;
              }
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              doubleFieldO_ = input.readDouble();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              stringFieldO_ = bs;
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              bytesFieldO_ = input.readBytes();
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                colorFieldO_ = value;
              }
              break;
            }
            case 73: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                doubleFieldR_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000100;
              }
              doubleFieldR_.add(input.readDouble());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                doubleFieldR_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                doubleFieldR_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                stringFieldR_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000200;
              }
              stringFieldR_.add(bs);
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                bytesFieldR_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000400;
              }
              bytesFieldR_.add(input.readBytes());
              break;
            }
            case 96: {
              int rawValue = input.readEnum();
              me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(12, rawValue);
                } else {
                if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                  colorFieldR_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>();
                  mutable_bitField0_ |= 0x00000800;
                }
                colorFieldR_.add(value);
              }
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(12, rawValue);
                  } else {
                  if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                    colorFieldR_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>();
                    mutable_bitField0_ |= 0x00000800;
                  }
                  colorFieldR_.add(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          doubleFieldR_ = java.util.Collections.unmodifiableList(doubleFieldR_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          stringFieldR_ = stringFieldR_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          bytesFieldR_ = java.util.Collections.unmodifiableList(bytesFieldR_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          colorFieldR_ = java.util.Collections.unmodifiableList(colorFieldR_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Mixed_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Mixed_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.lyh.protobuf.generic.proto2.Schemas.Mixed.class, me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder.class);
    }

    public static com.google.protobuf.Parser<Mixed> PARSER =
        new com.google.protobuf.AbstractParser<Mixed>() {
      public Mixed parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Mixed(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Mixed> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DOUBLE_FIELD_FIELD_NUMBER = 1;
    private double doubleField_;
    /**
     * <code>required double double_field = 1;</code>
     */
    public boolean hasDoubleField() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double double_field = 1;</code>
     */
    public double getDoubleField() {
      return doubleField_;
    }

    public static final int STRING_FIELD_FIELD_NUMBER = 2;
    private java.lang.Object stringField_;
    /**
     * <code>required string string_field = 2;</code>
     */
    public boolean hasStringField() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string string_field = 2;</code>
     */
    public java.lang.String getStringField() {
      java.lang.Object ref = stringField_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stringField_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string string_field = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStringFieldBytes() {
      java.lang.Object ref = stringField_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringField_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BYTES_FIELD_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString bytesField_;
    /**
     * <code>required bytes bytes_field = 3;</code>
     */
    public boolean hasBytesField() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes bytes_field = 3;</code>
     */
    public com.google.protobuf.ByteString getBytesField() {
      return bytesField_;
    }

    public static final int COLOR_FIELD_FIELD_NUMBER = 4;
    private me.lyh.protobuf.generic.proto2.Schemas.Color colorField_;
    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
     */
    public boolean hasColorField() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField() {
      return colorField_;
    }

    public static final int DOUBLE_FIELD_O_FIELD_NUMBER = 5;
    private double doubleFieldO_;
    /**
     * <code>optional double double_field_o = 5;</code>
     */
    public boolean hasDoubleFieldO() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double double_field_o = 5;</code>
     */
    public double getDoubleFieldO() {
      return doubleFieldO_;
    }

    public static final int STRING_FIELD_O_FIELD_NUMBER = 6;
    private java.lang.Object stringFieldO_;
    /**
     * <code>optional string string_field_o = 6;</code>
     */
    public boolean hasStringFieldO() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string string_field_o = 6;</code>
     */
    public java.lang.String getStringFieldO() {
      java.lang.Object ref = stringFieldO_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stringFieldO_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string string_field_o = 6;</code>
     */
    public com.google.protobuf.ByteString
        getStringFieldOBytes() {
      java.lang.Object ref = stringFieldO_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringFieldO_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BYTES_FIELD_O_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString bytesFieldO_;
    /**
     * <code>optional bytes bytes_field_o = 7;</code>
     */
    public boolean hasBytesFieldO() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes bytes_field_o = 7;</code>
     */
    public com.google.protobuf.ByteString getBytesFieldO() {
      return bytesFieldO_;
    }

    public static final int COLOR_FIELD_O_FIELD_NUMBER = 8;
    private me.lyh.protobuf.generic.proto2.Schemas.Color colorFieldO_;
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 8;</code>
     */
    public boolean hasColorFieldO() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 8;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Color getColorFieldO() {
      return colorFieldO_;
    }

    public static final int DOUBLE_FIELD_R_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Double> doubleFieldR_;
    /**
     * <code>repeated double double_field_r = 9;</code>
     */
    public java.util.List<java.lang.Double>
        getDoubleFieldRList() {
      return doubleFieldR_;
    }
    /**
     * <code>repeated double double_field_r = 9;</code>
     */
    public int getDoubleFieldRCount() {
      return doubleFieldR_.size();
    }
    /**
     * <code>repeated double double_field_r = 9;</code>
     */
    public double getDoubleFieldR(int index) {
      return doubleFieldR_.get(index);
    }

    public static final int STRING_FIELD_R_FIELD_NUMBER = 10;
    private com.google.protobuf.LazyStringList stringFieldR_;
    /**
     * <code>repeated string string_field_r = 10;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getStringFieldRList() {
      return stringFieldR_;
    }
    /**
     * <code>repeated string string_field_r = 10;</code>
     */
    public int getStringFieldRCount() {
      return stringFieldR_.size();
    }
    /**
     * <code>repeated string string_field_r = 10;</code>
     */
    public java.lang.String getStringFieldR(int index) {
      return stringFieldR_.get(index);
    }
    /**
     * <code>repeated string string_field_r = 10;</code>
     */
    public com.google.protobuf.ByteString
        getStringFieldRBytes(int index) {
      return stringFieldR_.getByteString(index);
    }

    public static final int BYTES_FIELD_R_FIELD_NUMBER = 11;
    private java.util.List<com.google.protobuf.ByteString> bytesFieldR_;
    /**
     * <code>repeated bytes bytes_field_r = 11;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getBytesFieldRList() {
      return bytesFieldR_;
    }
    /**
     * <code>repeated bytes bytes_field_r = 11;</code>
     */
    public int getBytesFieldRCount() {
      return bytesFieldR_.size();
    }
    /**
     * <code>repeated bytes bytes_field_r = 11;</code>
     */
    public com.google.protobuf.ByteString getBytesFieldR(int index) {
      return bytesFieldR_.get(index);
    }

    public static final int COLOR_FIELD_R_FIELD_NUMBER = 12;
    private java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> colorFieldR_;
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 12;</code>
     */
    public java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldRList() {
      return colorFieldR_;
    }
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 12;</code>
     */
    public int getColorFieldRCount() {
      return colorFieldR_.size();
    }
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 12;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Color getColorFieldR(int index) {
      return colorFieldR_.get(index);
    }

    private void initFields() {
      doubleField_ = 0D;
      stringField_ = "";
      bytesField_ = com.google.protobuf.ByteString.EMPTY;
      colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
      doubleFieldO_ = 0D;
      stringFieldO_ = "";
      bytesFieldO_ = com.google.protobuf.ByteString.EMPTY;
      colorFieldO_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
      doubleFieldR_ = java.util.Collections.emptyList();
      stringFieldR_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bytesFieldR_ = java.util.Collections.emptyList();
      colorFieldR_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDoubleField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStringField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBytesField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColorField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, doubleField_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getStringFieldBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, bytesField_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, colorField_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, doubleFieldO_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getStringFieldOBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, bytesFieldO_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, colorFieldO_.getNumber());
      }
      for (int i = 0; i < doubleFieldR_.size(); i++) {
        output.writeDouble(9, doubleFieldR_.get(i));
      }
      for (int i = 0; i < stringFieldR_.size(); i++) {
        output.writeBytes(10, stringFieldR_.getByteString(i));
      }
      for (int i = 0; i < bytesFieldR_.size(); i++) {
        output.writeBytes(11, bytesFieldR_.get(i));
      }
      for (int i = 0; i < colorFieldR_.size(); i++) {
        output.writeEnum(12, colorFieldR_.get(i).getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, doubleField_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getStringFieldBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, bytesField_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, colorField_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, doubleFieldO_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getStringFieldOBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, bytesFieldO_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, colorFieldO_.getNumber());
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleFieldRList().size();
        size += dataSize;
        size += 1 * getDoubleFieldRList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stringFieldR_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(stringFieldR_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getStringFieldRList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bytesFieldR_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(bytesFieldR_.get(i));
        }
        size += dataSize;
        size += 1 * getBytesFieldRList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < colorFieldR_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(colorFieldR_.get(i).getNumber());
        }
        size += dataSize;
        size += 1 * colorFieldR_.size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.lyh.protobuf.generic.proto2.Schemas.Mixed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Mixed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Mixed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Mixed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Mixed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Mixed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Mixed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Mixed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Mixed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Mixed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.lyh.protobuf.generic.proto2.Schemas.Mixed prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code me.lyh.protobuf.generic.proto2.Mixed}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:me.lyh.protobuf.generic.proto2.Mixed)
        me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Mixed_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Mixed_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.lyh.protobuf.generic.proto2.Schemas.Mixed.class, me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder.class);
      }

      // Construct using me.lyh.protobuf.generic.proto2.Schemas.Mixed.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        doubleField_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        stringField_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        bytesField_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
        bitField0_ = (bitField0_ & ~0x00000008);
        doubleFieldO_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        stringFieldO_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        bytesFieldO_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        colorFieldO_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
        bitField0_ = (bitField0_ & ~0x00000080);
        doubleFieldR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        stringFieldR_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        bytesFieldR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        colorFieldR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Mixed_descriptor;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Mixed getDefaultInstanceForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.Mixed.getDefaultInstance();
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Mixed build() {
        me.lyh.protobuf.generic.proto2.Schemas.Mixed result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Mixed buildPartial() {
        me.lyh.protobuf.generic.proto2.Schemas.Mixed result = new me.lyh.protobuf.generic.proto2.Schemas.Mixed(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.doubleField_ = doubleField_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.stringField_ = stringField_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bytesField_ = bytesField_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.colorField_ = colorField_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.doubleFieldO_ = doubleFieldO_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.stringFieldO_ = stringFieldO_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bytesFieldO_ = bytesFieldO_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.colorFieldO_ = colorFieldO_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          doubleFieldR_ = java.util.Collections.unmodifiableList(doubleFieldR_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.doubleFieldR_ = doubleFieldR_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          stringFieldR_ = stringFieldR_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.stringFieldR_ = stringFieldR_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          bytesFieldR_ = java.util.Collections.unmodifiableList(bytesFieldR_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.bytesFieldR_ = bytesFieldR_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          colorFieldR_ = java.util.Collections.unmodifiableList(colorFieldR_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.colorFieldR_ = colorFieldR_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.lyh.protobuf.generic.proto2.Schemas.Mixed) {
          return mergeFrom((me.lyh.protobuf.generic.proto2.Schemas.Mixed)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.lyh.protobuf.generic.proto2.Schemas.Mixed other) {
        if (other == me.lyh.protobuf.generic.proto2.Schemas.Mixed.getDefaultInstance()) return this;
        if (other.hasDoubleField()) {
          setDoubleField(other.getDoubleField());
        }
        if (other.hasStringField()) {
          bitField0_ |= 0x00000002;
          stringField_ = other.stringField_;
          onChanged();
        }
        if (other.hasBytesField()) {
          setBytesField(other.getBytesField());
        }
        if (other.hasColorField()) {
          setColorField(other.getColorField());
        }
        if (other.hasDoubleFieldO()) {
          setDoubleFieldO(other.getDoubleFieldO());
        }
        if (other.hasStringFieldO()) {
          bitField0_ |= 0x00000020;
          stringFieldO_ = other.stringFieldO_;
          onChanged();
        }
        if (other.hasBytesFieldO()) {
          setBytesFieldO(other.getBytesFieldO());
        }
        if (other.hasColorFieldO()) {
          setColorFieldO(other.getColorFieldO());
        }
        if (!other.doubleFieldR_.isEmpty()) {
          if (doubleFieldR_.isEmpty()) {
            doubleFieldR_ = other.doubleFieldR_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureDoubleFieldRIsMutable();
            doubleFieldR_.addAll(other.doubleFieldR_);
          }
          onChanged();
        }
        if (!other.stringFieldR_.isEmpty()) {
          if (stringFieldR_.isEmpty()) {
            stringFieldR_ = other.stringFieldR_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureStringFieldRIsMutable();
            stringFieldR_.addAll(other.stringFieldR_);
          }
          onChanged();
        }
        if (!other.bytesFieldR_.isEmpty()) {
          if (bytesFieldR_.isEmpty()) {
            bytesFieldR_ = other.bytesFieldR_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureBytesFieldRIsMutable();
            bytesFieldR_.addAll(other.bytesFieldR_);
          }
          onChanged();
        }
        if (!other.colorFieldR_.isEmpty()) {
          if (colorFieldR_.isEmpty()) {
            colorFieldR_ = other.colorFieldR_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureColorFieldRIsMutable();
            colorFieldR_.addAll(other.colorFieldR_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDoubleField()) {
          
          return false;
        }
        if (!hasStringField()) {
          
          return false;
        }
        if (!hasBytesField()) {
          
          return false;
        }
        if (!hasColorField()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.lyh.protobuf.generic.proto2.Schemas.Mixed parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.lyh.protobuf.generic.proto2.Schemas.Mixed) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double doubleField_ ;
      /**
       * <code>required double double_field = 1;</code>
       */
      public boolean hasDoubleField() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double double_field = 1;</code>
       */
      public double getDoubleField() {
        return doubleField_;
      }
      /**
       * <code>required double double_field = 1;</code>
       */
      public Builder setDoubleField(double value) {
        bitField0_ |= 0x00000001;
        doubleField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double double_field = 1;</code>
       */
      public Builder clearDoubleField() {
        bitField0_ = (bitField0_ & ~0x00000001);
        doubleField_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object stringField_ = "";
      /**
       * <code>required string string_field = 2;</code>
       */
      public boolean hasStringField() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string string_field = 2;</code>
       */
      public java.lang.String getStringField() {
        java.lang.Object ref = stringField_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringField_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string string_field = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStringFieldBytes() {
        java.lang.Object ref = stringField_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringField_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string string_field = 2;</code>
       */
      public Builder setStringField(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        stringField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string string_field = 2;</code>
       */
      public Builder clearStringField() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stringField_ = getDefaultInstance().getStringField();
        onChanged();
        return this;
      }
      /**
       * <code>required string string_field = 2;</code>
       */
      public Builder setStringFieldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        stringField_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesField_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes bytes_field = 3;</code>
       */
      public boolean hasBytesField() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes bytes_field = 3;</code>
       */
      public com.google.protobuf.ByteString getBytesField() {
        return bytesField_;
      }
      /**
       * <code>required bytes bytes_field = 3;</code>
       */
      public Builder setBytesField(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        bytesField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes bytes_field = 3;</code>
       */
      public Builder clearBytesField() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bytesField_ = getDefaultInstance().getBytesField();
        onChanged();
        return this;
      }

      private me.lyh.protobuf.generic.proto2.Schemas.Color colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
       */
      public boolean hasColorField() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField() {
        return colorField_;
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
       */
      public Builder setColorField(me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        colorField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
       */
      public Builder clearColorField() {
        bitField0_ = (bitField0_ & ~0x00000008);
        colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
        onChanged();
        return this;
      }

      private double doubleFieldO_ ;
      /**
       * <code>optional double double_field_o = 5;</code>
       */
      public boolean hasDoubleFieldO() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double double_field_o = 5;</code>
       */
      public double getDoubleFieldO() {
        return doubleFieldO_;
      }
      /**
       * <code>optional double double_field_o = 5;</code>
       */
      public Builder setDoubleFieldO(double value) {
        bitField0_ |= 0x00000010;
        doubleFieldO_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double double_field_o = 5;</code>
       */
      public Builder clearDoubleFieldO() {
        bitField0_ = (bitField0_ & ~0x00000010);
        doubleFieldO_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object stringFieldO_ = "";
      /**
       * <code>optional string string_field_o = 6;</code>
       */
      public boolean hasStringFieldO() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string string_field_o = 6;</code>
       */
      public java.lang.String getStringFieldO() {
        java.lang.Object ref = stringFieldO_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringFieldO_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string string_field_o = 6;</code>
       */
      public com.google.protobuf.ByteString
          getStringFieldOBytes() {
        java.lang.Object ref = stringFieldO_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringFieldO_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string string_field_o = 6;</code>
       */
      public Builder setStringFieldO(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        stringFieldO_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_field_o = 6;</code>
       */
      public Builder clearStringFieldO() {
        bitField0_ = (bitField0_ & ~0x00000020);
        stringFieldO_ = getDefaultInstance().getStringFieldO();
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_field_o = 6;</code>
       */
      public Builder setStringFieldOBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        stringFieldO_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesFieldO_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes bytes_field_o = 7;</code>
       */
      public boolean hasBytesFieldO() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes bytes_field_o = 7;</code>
       */
      public com.google.protobuf.ByteString getBytesFieldO() {
        return bytesFieldO_;
      }
      /**
       * <code>optional bytes bytes_field_o = 7;</code>
       */
      public Builder setBytesFieldO(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        bytesFieldO_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes bytes_field_o = 7;</code>
       */
      public Builder clearBytesFieldO() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bytesFieldO_ = getDefaultInstance().getBytesFieldO();
        onChanged();
        return this;
      }

      private me.lyh.protobuf.generic.proto2.Schemas.Color colorFieldO_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 8;</code>
       */
      public boolean hasColorFieldO() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 8;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Color getColorFieldO() {
        return colorFieldO_;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 8;</code>
       */
      public Builder setColorFieldO(me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        colorFieldO_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 8;</code>
       */
      public Builder clearColorFieldO() {
        bitField0_ = (bitField0_ & ~0x00000080);
        colorFieldO_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> doubleFieldR_ = java.util.Collections.emptyList();
      private void ensureDoubleFieldRIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          doubleFieldR_ = new java.util.ArrayList<java.lang.Double>(doubleFieldR_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated double double_field_r = 9;</code>
       */
      public java.util.List<java.lang.Double>
          getDoubleFieldRList() {
        return java.util.Collections.unmodifiableList(doubleFieldR_);
      }
      /**
       * <code>repeated double double_field_r = 9;</code>
       */
      public int getDoubleFieldRCount() {
        return doubleFieldR_.size();
      }
      /**
       * <code>repeated double double_field_r = 9;</code>
       */
      public double getDoubleFieldR(int index) {
        return doubleFieldR_.get(index);
      }
      /**
       * <code>repeated double double_field_r = 9;</code>
       */
      public Builder setDoubleFieldR(
          int index, double value) {
        ensureDoubleFieldRIsMutable();
        doubleFieldR_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field_r = 9;</code>
       */
      public Builder addDoubleFieldR(double value) {
        ensureDoubleFieldRIsMutable();
        doubleFieldR_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field_r = 9;</code>
       */
      public Builder addAllDoubleFieldR(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDoubleFieldRIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, doubleFieldR_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field_r = 9;</code>
       */
      public Builder clearDoubleFieldR() {
        doubleFieldR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList stringFieldR_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStringFieldRIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          stringFieldR_ = new com.google.protobuf.LazyStringArrayList(stringFieldR_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated string string_field_r = 10;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getStringFieldRList() {
        return stringFieldR_.getUnmodifiableView();
      }
      /**
       * <code>repeated string string_field_r = 10;</code>
       */
      public int getStringFieldRCount() {
        return stringFieldR_.size();
      }
      /**
       * <code>repeated string string_field_r = 10;</code>
       */
      public java.lang.String getStringFieldR(int index) {
        return stringFieldR_.get(index);
      }
      /**
       * <code>repeated string string_field_r = 10;</code>
       */
      public com.google.protobuf.ByteString
          getStringFieldRBytes(int index) {
        return stringFieldR_.getByteString(index);
      }
      /**
       * <code>repeated string string_field_r = 10;</code>
       */
      public Builder setStringFieldR(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringFieldRIsMutable();
        stringFieldR_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string_field_r = 10;</code>
       */
      public Builder addStringFieldR(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringFieldRIsMutable();
        stringFieldR_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string_field_r = 10;</code>
       */
      public Builder addAllStringFieldR(
          java.lang.Iterable<java.lang.String> values) {
        ensureStringFieldRIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stringFieldR_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string_field_r = 10;</code>
       */
      public Builder clearStringFieldR() {
        stringFieldR_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string_field_r = 10;</code>
       */
      public Builder addStringFieldRBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringFieldRIsMutable();
        stringFieldR_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> bytesFieldR_ = java.util.Collections.emptyList();
      private void ensureBytesFieldRIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          bytesFieldR_ = new java.util.ArrayList<com.google.protobuf.ByteString>(bytesFieldR_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated bytes bytes_field_r = 11;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getBytesFieldRList() {
        return java.util.Collections.unmodifiableList(bytesFieldR_);
      }
      /**
       * <code>repeated bytes bytes_field_r = 11;</code>
       */
      public int getBytesFieldRCount() {
        return bytesFieldR_.size();
      }
      /**
       * <code>repeated bytes bytes_field_r = 11;</code>
       */
      public com.google.protobuf.ByteString getBytesFieldR(int index) {
        return bytesFieldR_.get(index);
      }
      /**
       * <code>repeated bytes bytes_field_r = 11;</code>
       */
      public Builder setBytesFieldR(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesFieldRIsMutable();
        bytesFieldR_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes_field_r = 11;</code>
       */
      public Builder addBytesFieldR(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesFieldRIsMutable();
        bytesFieldR_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes_field_r = 11;</code>
       */
      public Builder addAllBytesFieldR(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureBytesFieldRIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bytesFieldR_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes_field_r = 11;</code>
       */
      public Builder clearBytesFieldR() {
        bytesFieldR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> colorFieldR_ =
        java.util.Collections.emptyList();
      private void ensureColorFieldRIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          colorFieldR_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>(colorFieldR_);
          bitField0_ |= 0x00000800;
        }
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 12;</code>
       */
      public java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldRList() {
        return java.util.Collections.unmodifiableList(colorFieldR_);
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 12;</code>
       */
      public int getColorFieldRCount() {
        return colorFieldR_.size();
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 12;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Color getColorFieldR(int index) {
        return colorFieldR_.get(index);
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 12;</code>
       */
      public Builder setColorFieldR(
          int index, me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorFieldRIsMutable();
        colorFieldR_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 12;</code>
       */
      public Builder addColorFieldR(me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorFieldRIsMutable();
        colorFieldR_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 12;</code>
       */
      public Builder addAllColorFieldR(
          java.lang.Iterable<? extends me.lyh.protobuf.generic.proto2.Schemas.Color> values) {
        ensureColorFieldRIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, colorFieldR_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 12;</code>
       */
      public Builder clearColorFieldR() {
        colorFieldR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:me.lyh.protobuf.generic.proto2.Mixed)
    }

    static {
      defaultInstance = new Mixed(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:me.lyh.protobuf.generic.proto2.Mixed)
  }

  public interface NestedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:me.lyh.protobuf.generic.proto2.Nested)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required double double_field = 1;</code>
     */
    boolean hasDoubleField();
    /**
     * <code>required double double_field = 1;</code>
     */
    double getDoubleField();

    /**
     * <code>optional double double_field_o = 2;</code>
     */
    boolean hasDoubleFieldO();
    /**
     * <code>optional double double_field_o = 2;</code>
     */
    double getDoubleFieldO();

    /**
     * <code>repeated double double_field_r = 3;</code>
     */
    java.util.List<java.lang.Double> getDoubleFieldRList();
    /**
     * <code>repeated double double_field_r = 3;</code>
     */
    int getDoubleFieldRCount();
    /**
     * <code>repeated double double_field_r = 3;</code>
     */
    double getDoubleFieldR(int index);

    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
     */
    boolean hasColorField();
    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Color getColorField();

    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 5;</code>
     */
    boolean hasColorFieldO();
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 5;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Color getColorFieldO();

    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 6;</code>
     */
    java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldRList();
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 6;</code>
     */
    int getColorFieldRCount();
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 6;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Color getColorFieldR(int index);

    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
     */
    boolean hasMixedField();
    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Mixed getMixedField();
    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder getMixedFieldOrBuilder();

    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
     */
    boolean hasMixedFieldO();
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Mixed getMixedFieldO();
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder getMixedFieldOOrBuilder();

    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
     */
    java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Mixed> 
        getMixedFieldRList();
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Mixed getMixedFieldR(int index);
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
     */
    int getMixedFieldRCount();
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
     */
    java.util.List<? extends me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder> 
        getMixedFieldROrBuilderList();
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder getMixedFieldROrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code me.lyh.protobuf.generic.proto2.Nested}
   */
  public static final class Nested extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:me.lyh.protobuf.generic.proto2.Nested)
      NestedOrBuilder {
    // Use Nested.newBuilder() to construct.
    private Nested(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Nested(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Nested defaultInstance;
    public static Nested getDefaultInstance() {
      return defaultInstance;
    }

    public Nested getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Nested(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              doubleField_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              doubleFieldO_ = input.readDouble();
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                doubleFieldR_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              doubleFieldR_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                doubleFieldR_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                doubleFieldR_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                colorField_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                colorFieldO_ = value;
              }
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
                } else {
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  colorFieldR_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>();
                  mutable_bitField0_ |= 0x00000020;
                }
                colorFieldR_.add(value);
              }
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(6, rawValue);
                  } else {
                  if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    colorFieldR_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>();
                    mutable_bitField0_ |= 0x00000020;
                  }
                  colorFieldR_.add(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 58: {
              me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = mixedField_.toBuilder();
              }
              mixedField_ = input.readMessage(me.lyh.protobuf.generic.proto2.Schemas.Mixed.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mixedField_);
                mixedField_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 66: {
              me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = mixedFieldO_.toBuilder();
              }
              mixedFieldO_ = input.readMessage(me.lyh.protobuf.generic.proto2.Schemas.Mixed.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mixedFieldO_);
                mixedFieldO_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                mixedFieldR_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Mixed>();
                mutable_bitField0_ |= 0x00000100;
              }
              mixedFieldR_.add(input.readMessage(me.lyh.protobuf.generic.proto2.Schemas.Mixed.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          doubleFieldR_ = java.util.Collections.unmodifiableList(doubleFieldR_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          colorFieldR_ = java.util.Collections.unmodifiableList(colorFieldR_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          mixedFieldR_ = java.util.Collections.unmodifiableList(mixedFieldR_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Nested_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Nested_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.lyh.protobuf.generic.proto2.Schemas.Nested.class, me.lyh.protobuf.generic.proto2.Schemas.Nested.Builder.class);
    }

    public static com.google.protobuf.Parser<Nested> PARSER =
        new com.google.protobuf.AbstractParser<Nested>() {
      public Nested parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Nested(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Nested> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DOUBLE_FIELD_FIELD_NUMBER = 1;
    private double doubleField_;
    /**
     * <code>required double double_field = 1;</code>
     */
    public boolean hasDoubleField() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double double_field = 1;</code>
     */
    public double getDoubleField() {
      return doubleField_;
    }

    public static final int DOUBLE_FIELD_O_FIELD_NUMBER = 2;
    private double doubleFieldO_;
    /**
     * <code>optional double double_field_o = 2;</code>
     */
    public boolean hasDoubleFieldO() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional double double_field_o = 2;</code>
     */
    public double getDoubleFieldO() {
      return doubleFieldO_;
    }

    public static final int DOUBLE_FIELD_R_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> doubleFieldR_;
    /**
     * <code>repeated double double_field_r = 3;</code>
     */
    public java.util.List<java.lang.Double>
        getDoubleFieldRList() {
      return doubleFieldR_;
    }
    /**
     * <code>repeated double double_field_r = 3;</code>
     */
    public int getDoubleFieldRCount() {
      return doubleFieldR_.size();
    }
    /**
     * <code>repeated double double_field_r = 3;</code>
     */
    public double getDoubleFieldR(int index) {
      return doubleFieldR_.get(index);
    }

    public static final int COLOR_FIELD_FIELD_NUMBER = 4;
    private me.lyh.protobuf.generic.proto2.Schemas.Color colorField_;
    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
     */
    public boolean hasColorField() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField() {
      return colorField_;
    }

    public static final int COLOR_FIELD_O_FIELD_NUMBER = 5;
    private me.lyh.protobuf.generic.proto2.Schemas.Color colorFieldO_;
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 5;</code>
     */
    public boolean hasColorFieldO() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 5;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Color getColorFieldO() {
      return colorFieldO_;
    }

    public static final int COLOR_FIELD_R_FIELD_NUMBER = 6;
    private java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> colorFieldR_;
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 6;</code>
     */
    public java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldRList() {
      return colorFieldR_;
    }
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 6;</code>
     */
    public int getColorFieldRCount() {
      return colorFieldR_.size();
    }
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 6;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Color getColorFieldR(int index) {
      return colorFieldR_.get(index);
    }

    public static final int MIXED_FIELD_FIELD_NUMBER = 7;
    private me.lyh.protobuf.generic.proto2.Schemas.Mixed mixedField_;
    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
     */
    public boolean hasMixedField() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Mixed getMixedField() {
      return mixedField_;
    }
    /**
     * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder getMixedFieldOrBuilder() {
      return mixedField_;
    }

    public static final int MIXED_FIELD_O_FIELD_NUMBER = 8;
    private me.lyh.protobuf.generic.proto2.Schemas.Mixed mixedFieldO_;
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
     */
    public boolean hasMixedFieldO() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Mixed getMixedFieldO() {
      return mixedFieldO_;
    }
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder getMixedFieldOOrBuilder() {
      return mixedFieldO_;
    }

    public static final int MIXED_FIELD_R_FIELD_NUMBER = 9;
    private java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Mixed> mixedFieldR_;
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
     */
    public java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Mixed> getMixedFieldRList() {
      return mixedFieldR_;
    }
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
     */
    public java.util.List<? extends me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder> 
        getMixedFieldROrBuilderList() {
      return mixedFieldR_;
    }
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
     */
    public int getMixedFieldRCount() {
      return mixedFieldR_.size();
    }
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Mixed getMixedFieldR(int index) {
      return mixedFieldR_.get(index);
    }
    /**
     * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder getMixedFieldROrBuilder(
        int index) {
      return mixedFieldR_.get(index);
    }

    private void initFields() {
      doubleField_ = 0D;
      doubleFieldO_ = 0D;
      doubleFieldR_ = java.util.Collections.emptyList();
      colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
      colorFieldO_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
      colorFieldR_ = java.util.Collections.emptyList();
      mixedField_ = me.lyh.protobuf.generic.proto2.Schemas.Mixed.getDefaultInstance();
      mixedFieldO_ = me.lyh.protobuf.generic.proto2.Schemas.Mixed.getDefaultInstance();
      mixedFieldR_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDoubleField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColorField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMixedField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getMixedField().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasMixedFieldO()) {
        if (!getMixedFieldO().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMixedFieldRCount(); i++) {
        if (!getMixedFieldR(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, doubleField_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, doubleFieldO_);
      }
      for (int i = 0; i < doubleFieldR_.size(); i++) {
        output.writeDouble(3, doubleFieldR_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(4, colorField_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(5, colorFieldO_.getNumber());
      }
      for (int i = 0; i < colorFieldR_.size(); i++) {
        output.writeEnum(6, colorFieldR_.get(i).getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(7, mixedField_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(8, mixedFieldO_);
      }
      for (int i = 0; i < mixedFieldR_.size(); i++) {
        output.writeMessage(9, mixedFieldR_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, doubleField_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, doubleFieldO_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleFieldRList().size();
        size += dataSize;
        size += 1 * getDoubleFieldRList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, colorField_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, colorFieldO_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < colorFieldR_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(colorFieldR_.get(i).getNumber());
        }
        size += dataSize;
        size += 1 * colorFieldR_.size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, mixedField_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, mixedFieldO_);
      }
      for (int i = 0; i < mixedFieldR_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, mixedFieldR_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.lyh.protobuf.generic.proto2.Schemas.Nested parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Nested parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Nested parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Nested parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Nested parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Nested parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Nested parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Nested parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Nested parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Nested parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.lyh.protobuf.generic.proto2.Schemas.Nested prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code me.lyh.protobuf.generic.proto2.Nested}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:me.lyh.protobuf.generic.proto2.Nested)
        me.lyh.protobuf.generic.proto2.Schemas.NestedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Nested_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Nested_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.lyh.protobuf.generic.proto2.Schemas.Nested.class, me.lyh.protobuf.generic.proto2.Schemas.Nested.Builder.class);
      }

      // Construct using me.lyh.protobuf.generic.proto2.Schemas.Nested.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMixedFieldFieldBuilder();
          getMixedFieldOFieldBuilder();
          getMixedFieldRFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        doubleField_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        doubleFieldO_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        doubleFieldR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
        bitField0_ = (bitField0_ & ~0x00000008);
        colorFieldO_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
        bitField0_ = (bitField0_ & ~0x00000010);
        colorFieldR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        if (mixedFieldBuilder_ == null) {
          mixedField_ = me.lyh.protobuf.generic.proto2.Schemas.Mixed.getDefaultInstance();
        } else {
          mixedFieldBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (mixedFieldOBuilder_ == null) {
          mixedFieldO_ = me.lyh.protobuf.generic.proto2.Schemas.Mixed.getDefaultInstance();
        } else {
          mixedFieldOBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (mixedFieldRBuilder_ == null) {
          mixedFieldR_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          mixedFieldRBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Nested_descriptor;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Nested getDefaultInstanceForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.Nested.getDefaultInstance();
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Nested build() {
        me.lyh.protobuf.generic.proto2.Schemas.Nested result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Nested buildPartial() {
        me.lyh.protobuf.generic.proto2.Schemas.Nested result = new me.lyh.protobuf.generic.proto2.Schemas.Nested(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.doubleField_ = doubleField_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.doubleFieldO_ = doubleFieldO_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          doubleFieldR_ = java.util.Collections.unmodifiableList(doubleFieldR_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.doubleFieldR_ = doubleFieldR_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.colorField_ = colorField_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.colorFieldO_ = colorFieldO_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          colorFieldR_ = java.util.Collections.unmodifiableList(colorFieldR_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.colorFieldR_ = colorFieldR_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        if (mixedFieldBuilder_ == null) {
          result.mixedField_ = mixedField_;
        } else {
          result.mixedField_ = mixedFieldBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        if (mixedFieldOBuilder_ == null) {
          result.mixedFieldO_ = mixedFieldO_;
        } else {
          result.mixedFieldO_ = mixedFieldOBuilder_.build();
        }
        if (mixedFieldRBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            mixedFieldR_ = java.util.Collections.unmodifiableList(mixedFieldR_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.mixedFieldR_ = mixedFieldR_;
        } else {
          result.mixedFieldR_ = mixedFieldRBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.lyh.protobuf.generic.proto2.Schemas.Nested) {
          return mergeFrom((me.lyh.protobuf.generic.proto2.Schemas.Nested)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.lyh.protobuf.generic.proto2.Schemas.Nested other) {
        if (other == me.lyh.protobuf.generic.proto2.Schemas.Nested.getDefaultInstance()) return this;
        if (other.hasDoubleField()) {
          setDoubleField(other.getDoubleField());
        }
        if (other.hasDoubleFieldO()) {
          setDoubleFieldO(other.getDoubleFieldO());
        }
        if (!other.doubleFieldR_.isEmpty()) {
          if (doubleFieldR_.isEmpty()) {
            doubleFieldR_ = other.doubleFieldR_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDoubleFieldRIsMutable();
            doubleFieldR_.addAll(other.doubleFieldR_);
          }
          onChanged();
        }
        if (other.hasColorField()) {
          setColorField(other.getColorField());
        }
        if (other.hasColorFieldO()) {
          setColorFieldO(other.getColorFieldO());
        }
        if (!other.colorFieldR_.isEmpty()) {
          if (colorFieldR_.isEmpty()) {
            colorFieldR_ = other.colorFieldR_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureColorFieldRIsMutable();
            colorFieldR_.addAll(other.colorFieldR_);
          }
          onChanged();
        }
        if (other.hasMixedField()) {
          mergeMixedField(other.getMixedField());
        }
        if (other.hasMixedFieldO()) {
          mergeMixedFieldO(other.getMixedFieldO());
        }
        if (mixedFieldRBuilder_ == null) {
          if (!other.mixedFieldR_.isEmpty()) {
            if (mixedFieldR_.isEmpty()) {
              mixedFieldR_ = other.mixedFieldR_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureMixedFieldRIsMutable();
              mixedFieldR_.addAll(other.mixedFieldR_);
            }
            onChanged();
          }
        } else {
          if (!other.mixedFieldR_.isEmpty()) {
            if (mixedFieldRBuilder_.isEmpty()) {
              mixedFieldRBuilder_.dispose();
              mixedFieldRBuilder_ = null;
              mixedFieldR_ = other.mixedFieldR_;
              bitField0_ = (bitField0_ & ~0x00000100);
              mixedFieldRBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMixedFieldRFieldBuilder() : null;
            } else {
              mixedFieldRBuilder_.addAllMessages(other.mixedFieldR_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDoubleField()) {
          
          return false;
        }
        if (!hasColorField()) {
          
          return false;
        }
        if (!hasMixedField()) {
          
          return false;
        }
        if (!getMixedField().isInitialized()) {
          
          return false;
        }
        if (hasMixedFieldO()) {
          if (!getMixedFieldO().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMixedFieldRCount(); i++) {
          if (!getMixedFieldR(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.lyh.protobuf.generic.proto2.Schemas.Nested parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.lyh.protobuf.generic.proto2.Schemas.Nested) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double doubleField_ ;
      /**
       * <code>required double double_field = 1;</code>
       */
      public boolean hasDoubleField() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double double_field = 1;</code>
       */
      public double getDoubleField() {
        return doubleField_;
      }
      /**
       * <code>required double double_field = 1;</code>
       */
      public Builder setDoubleField(double value) {
        bitField0_ |= 0x00000001;
        doubleField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double double_field = 1;</code>
       */
      public Builder clearDoubleField() {
        bitField0_ = (bitField0_ & ~0x00000001);
        doubleField_ = 0D;
        onChanged();
        return this;
      }

      private double doubleFieldO_ ;
      /**
       * <code>optional double double_field_o = 2;</code>
       */
      public boolean hasDoubleFieldO() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double double_field_o = 2;</code>
       */
      public double getDoubleFieldO() {
        return doubleFieldO_;
      }
      /**
       * <code>optional double double_field_o = 2;</code>
       */
      public Builder setDoubleFieldO(double value) {
        bitField0_ |= 0x00000002;
        doubleFieldO_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double double_field_o = 2;</code>
       */
      public Builder clearDoubleFieldO() {
        bitField0_ = (bitField0_ & ~0x00000002);
        doubleFieldO_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> doubleFieldR_ = java.util.Collections.emptyList();
      private void ensureDoubleFieldRIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          doubleFieldR_ = new java.util.ArrayList<java.lang.Double>(doubleFieldR_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated double double_field_r = 3;</code>
       */
      public java.util.List<java.lang.Double>
          getDoubleFieldRList() {
        return java.util.Collections.unmodifiableList(doubleFieldR_);
      }
      /**
       * <code>repeated double double_field_r = 3;</code>
       */
      public int getDoubleFieldRCount() {
        return doubleFieldR_.size();
      }
      /**
       * <code>repeated double double_field_r = 3;</code>
       */
      public double getDoubleFieldR(int index) {
        return doubleFieldR_.get(index);
      }
      /**
       * <code>repeated double double_field_r = 3;</code>
       */
      public Builder setDoubleFieldR(
          int index, double value) {
        ensureDoubleFieldRIsMutable();
        doubleFieldR_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field_r = 3;</code>
       */
      public Builder addDoubleFieldR(double value) {
        ensureDoubleFieldRIsMutable();
        doubleFieldR_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field_r = 3;</code>
       */
      public Builder addAllDoubleFieldR(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDoubleFieldRIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, doubleFieldR_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field_r = 3;</code>
       */
      public Builder clearDoubleFieldR() {
        doubleFieldR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private me.lyh.protobuf.generic.proto2.Schemas.Color colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
       */
      public boolean hasColorField() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField() {
        return colorField_;
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
       */
      public Builder setColorField(me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        colorField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Color color_field = 4;</code>
       */
      public Builder clearColorField() {
        bitField0_ = (bitField0_ & ~0x00000008);
        colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
        onChanged();
        return this;
      }

      private me.lyh.protobuf.generic.proto2.Schemas.Color colorFieldO_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 5;</code>
       */
      public boolean hasColorFieldO() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 5;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Color getColorFieldO() {
        return colorFieldO_;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 5;</code>
       */
      public Builder setColorFieldO(me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        colorFieldO_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field_o = 5;</code>
       */
      public Builder clearColorFieldO() {
        bitField0_ = (bitField0_ & ~0x00000010);
        colorFieldO_ = me.lyh.protobuf.generic.proto2.Schemas.Color.BLACK;
        onChanged();
        return this;
      }

      private java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> colorFieldR_ =
        java.util.Collections.emptyList();
      private void ensureColorFieldRIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          colorFieldR_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Color>(colorFieldR_);
          bitField0_ |= 0x00000020;
        }
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 6;</code>
       */
      public java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Color> getColorFieldRList() {
        return java.util.Collections.unmodifiableList(colorFieldR_);
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 6;</code>
       */
      public int getColorFieldRCount() {
        return colorFieldR_.size();
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 6;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Color getColorFieldR(int index) {
        return colorFieldR_.get(index);
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 6;</code>
       */
      public Builder setColorFieldR(
          int index, me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorFieldRIsMutable();
        colorFieldR_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 6;</code>
       */
      public Builder addColorFieldR(me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorFieldRIsMutable();
        colorFieldR_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 6;</code>
       */
      public Builder addAllColorFieldR(
          java.lang.Iterable<? extends me.lyh.protobuf.generic.proto2.Schemas.Color> values) {
        ensureColorFieldRIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, colorFieldR_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Color color_field_r = 6;</code>
       */
      public Builder clearColorFieldR() {
        colorFieldR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private me.lyh.protobuf.generic.proto2.Schemas.Mixed mixedField_ = me.lyh.protobuf.generic.proto2.Schemas.Mixed.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          me.lyh.protobuf.generic.proto2.Schemas.Mixed, me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder, me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder> mixedFieldBuilder_;
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
       */
      public boolean hasMixedField() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Mixed getMixedField() {
        if (mixedFieldBuilder_ == null) {
          return mixedField_;
        } else {
          return mixedFieldBuilder_.getMessage();
        }
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
       */
      public Builder setMixedField(me.lyh.protobuf.generic.proto2.Schemas.Mixed value) {
        if (mixedFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mixedField_ = value;
          onChanged();
        } else {
          mixedFieldBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
       */
      public Builder setMixedField(
          me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder builderForValue) {
        if (mixedFieldBuilder_ == null) {
          mixedField_ = builderForValue.build();
          onChanged();
        } else {
          mixedFieldBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
       */
      public Builder mergeMixedField(me.lyh.protobuf.generic.proto2.Schemas.Mixed value) {
        if (mixedFieldBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              mixedField_ != me.lyh.protobuf.generic.proto2.Schemas.Mixed.getDefaultInstance()) {
            mixedField_ =
              me.lyh.protobuf.generic.proto2.Schemas.Mixed.newBuilder(mixedField_).mergeFrom(value).buildPartial();
          } else {
            mixedField_ = value;
          }
          onChanged();
        } else {
          mixedFieldBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
       */
      public Builder clearMixedField() {
        if (mixedFieldBuilder_ == null) {
          mixedField_ = me.lyh.protobuf.generic.proto2.Schemas.Mixed.getDefaultInstance();
          onChanged();
        } else {
          mixedFieldBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder getMixedFieldBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getMixedFieldFieldBuilder().getBuilder();
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder getMixedFieldOrBuilder() {
        if (mixedFieldBuilder_ != null) {
          return mixedFieldBuilder_.getMessageOrBuilder();
        } else {
          return mixedField_;
        }
      }
      /**
       * <code>required .me.lyh.protobuf.generic.proto2.Mixed mixed_field = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          me.lyh.protobuf.generic.proto2.Schemas.Mixed, me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder, me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder> 
          getMixedFieldFieldBuilder() {
        if (mixedFieldBuilder_ == null) {
          mixedFieldBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              me.lyh.protobuf.generic.proto2.Schemas.Mixed, me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder, me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder>(
                  getMixedField(),
                  getParentForChildren(),
                  isClean());
          mixedField_ = null;
        }
        return mixedFieldBuilder_;
      }

      private me.lyh.protobuf.generic.proto2.Schemas.Mixed mixedFieldO_ = me.lyh.protobuf.generic.proto2.Schemas.Mixed.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          me.lyh.protobuf.generic.proto2.Schemas.Mixed, me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder, me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder> mixedFieldOBuilder_;
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
       */
      public boolean hasMixedFieldO() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Mixed getMixedFieldO() {
        if (mixedFieldOBuilder_ == null) {
          return mixedFieldO_;
        } else {
          return mixedFieldOBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
       */
      public Builder setMixedFieldO(me.lyh.protobuf.generic.proto2.Schemas.Mixed value) {
        if (mixedFieldOBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mixedFieldO_ = value;
          onChanged();
        } else {
          mixedFieldOBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
       */
      public Builder setMixedFieldO(
          me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder builderForValue) {
        if (mixedFieldOBuilder_ == null) {
          mixedFieldO_ = builderForValue.build();
          onChanged();
        } else {
          mixedFieldOBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
       */
      public Builder mergeMixedFieldO(me.lyh.protobuf.generic.proto2.Schemas.Mixed value) {
        if (mixedFieldOBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              mixedFieldO_ != me.lyh.protobuf.generic.proto2.Schemas.Mixed.getDefaultInstance()) {
            mixedFieldO_ =
              me.lyh.protobuf.generic.proto2.Schemas.Mixed.newBuilder(mixedFieldO_).mergeFrom(value).buildPartial();
          } else {
            mixedFieldO_ = value;
          }
          onChanged();
        } else {
          mixedFieldOBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
       */
      public Builder clearMixedFieldO() {
        if (mixedFieldOBuilder_ == null) {
          mixedFieldO_ = me.lyh.protobuf.generic.proto2.Schemas.Mixed.getDefaultInstance();
          onChanged();
        } else {
          mixedFieldOBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder getMixedFieldOBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getMixedFieldOFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder getMixedFieldOOrBuilder() {
        if (mixedFieldOBuilder_ != null) {
          return mixedFieldOBuilder_.getMessageOrBuilder();
        } else {
          return mixedFieldO_;
        }
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Mixed mixed_field_o = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          me.lyh.protobuf.generic.proto2.Schemas.Mixed, me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder, me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder> 
          getMixedFieldOFieldBuilder() {
        if (mixedFieldOBuilder_ == null) {
          mixedFieldOBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              me.lyh.protobuf.generic.proto2.Schemas.Mixed, me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder, me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder>(
                  getMixedFieldO(),
                  getParentForChildren(),
                  isClean());
          mixedFieldO_ = null;
        }
        return mixedFieldOBuilder_;
      }

      private java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Mixed> mixedFieldR_ =
        java.util.Collections.emptyList();
      private void ensureMixedFieldRIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          mixedFieldR_ = new java.util.ArrayList<me.lyh.protobuf.generic.proto2.Schemas.Mixed>(mixedFieldR_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          me.lyh.protobuf.generic.proto2.Schemas.Mixed, me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder, me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder> mixedFieldRBuilder_;

      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Mixed> getMixedFieldRList() {
        if (mixedFieldRBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mixedFieldR_);
        } else {
          return mixedFieldRBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public int getMixedFieldRCount() {
        if (mixedFieldRBuilder_ == null) {
          return mixedFieldR_.size();
        } else {
          return mixedFieldRBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Mixed getMixedFieldR(int index) {
        if (mixedFieldRBuilder_ == null) {
          return mixedFieldR_.get(index);
        } else {
          return mixedFieldRBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public Builder setMixedFieldR(
          int index, me.lyh.protobuf.generic.proto2.Schemas.Mixed value) {
        if (mixedFieldRBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMixedFieldRIsMutable();
          mixedFieldR_.set(index, value);
          onChanged();
        } else {
          mixedFieldRBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public Builder setMixedFieldR(
          int index, me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder builderForValue) {
        if (mixedFieldRBuilder_ == null) {
          ensureMixedFieldRIsMutable();
          mixedFieldR_.set(index, builderForValue.build());
          onChanged();
        } else {
          mixedFieldRBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public Builder addMixedFieldR(me.lyh.protobuf.generic.proto2.Schemas.Mixed value) {
        if (mixedFieldRBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMixedFieldRIsMutable();
          mixedFieldR_.add(value);
          onChanged();
        } else {
          mixedFieldRBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public Builder addMixedFieldR(
          int index, me.lyh.protobuf.generic.proto2.Schemas.Mixed value) {
        if (mixedFieldRBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMixedFieldRIsMutable();
          mixedFieldR_.add(index, value);
          onChanged();
        } else {
          mixedFieldRBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public Builder addMixedFieldR(
          me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder builderForValue) {
        if (mixedFieldRBuilder_ == null) {
          ensureMixedFieldRIsMutable();
          mixedFieldR_.add(builderForValue.build());
          onChanged();
        } else {
          mixedFieldRBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public Builder addMixedFieldR(
          int index, me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder builderForValue) {
        if (mixedFieldRBuilder_ == null) {
          ensureMixedFieldRIsMutable();
          mixedFieldR_.add(index, builderForValue.build());
          onChanged();
        } else {
          mixedFieldRBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public Builder addAllMixedFieldR(
          java.lang.Iterable<? extends me.lyh.protobuf.generic.proto2.Schemas.Mixed> values) {
        if (mixedFieldRBuilder_ == null) {
          ensureMixedFieldRIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mixedFieldR_);
          onChanged();
        } else {
          mixedFieldRBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public Builder clearMixedFieldR() {
        if (mixedFieldRBuilder_ == null) {
          mixedFieldR_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          mixedFieldRBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public Builder removeMixedFieldR(int index) {
        if (mixedFieldRBuilder_ == null) {
          ensureMixedFieldRIsMutable();
          mixedFieldR_.remove(index);
          onChanged();
        } else {
          mixedFieldRBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder getMixedFieldRBuilder(
          int index) {
        return getMixedFieldRFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder getMixedFieldROrBuilder(
          int index) {
        if (mixedFieldRBuilder_ == null) {
          return mixedFieldR_.get(index);  } else {
          return mixedFieldRBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public java.util.List<? extends me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder> 
           getMixedFieldROrBuilderList() {
        if (mixedFieldRBuilder_ != null) {
          return mixedFieldRBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mixedFieldR_);
        }
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder addMixedFieldRBuilder() {
        return getMixedFieldRFieldBuilder().addBuilder(
            me.lyh.protobuf.generic.proto2.Schemas.Mixed.getDefaultInstance());
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder addMixedFieldRBuilder(
          int index) {
        return getMixedFieldRFieldBuilder().addBuilder(
            index, me.lyh.protobuf.generic.proto2.Schemas.Mixed.getDefaultInstance());
      }
      /**
       * <code>repeated .me.lyh.protobuf.generic.proto2.Mixed mixed_field_r = 9;</code>
       */
      public java.util.List<me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder> 
           getMixedFieldRBuilderList() {
        return getMixedFieldRFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          me.lyh.protobuf.generic.proto2.Schemas.Mixed, me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder, me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder> 
          getMixedFieldRFieldBuilder() {
        if (mixedFieldRBuilder_ == null) {
          mixedFieldRBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              me.lyh.protobuf.generic.proto2.Schemas.Mixed, me.lyh.protobuf.generic.proto2.Schemas.Mixed.Builder, me.lyh.protobuf.generic.proto2.Schemas.MixedOrBuilder>(
                  mixedFieldR_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          mixedFieldR_ = null;
        }
        return mixedFieldRBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:me.lyh.protobuf.generic.proto2.Nested)
    }

    static {
      defaultInstance = new Nested(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:me.lyh.protobuf.generic.proto2.Nested)
  }

  public interface CustomOptionMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:me.lyh.protobuf.generic.proto2.CustomOptionMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 foo = 1;</code>
     */
    boolean hasFoo();
    /**
     * <code>optional int32 foo = 1;</code>
     */
    int getFoo();

    /**
     * <code>optional string bar = 2;</code>
     */
    boolean hasBar();
    /**
     * <code>optional string bar = 2;</code>
     */
    java.lang.String getBar();
    /**
     * <code>optional string bar = 2;</code>
     */
    com.google.protobuf.ByteString
        getBarBytes();

    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.STATE state = 3;</code>
     */
    boolean hasState();
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.STATE state = 3;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.STATE getState();

    /**
     * <code>optional string fooBar = 4;</code>
     */
    boolean hasFooBar();
    /**
     * <code>optional string fooBar = 4;</code>
     */
    java.lang.String getFooBar();
    /**
     * <code>optional string fooBar = 4;</code>
     */
    com.google.protobuf.ByteString
        getFooBarBytes();
  }
  /**
   * Protobuf type {@code me.lyh.protobuf.generic.proto2.CustomOptionMessage}
   */
  public static final class CustomOptionMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:me.lyh.protobuf.generic.proto2.CustomOptionMessage)
      CustomOptionMessageOrBuilder {
    // Use CustomOptionMessage.newBuilder() to construct.
    private CustomOptionMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CustomOptionMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CustomOptionMessage defaultInstance;
    public static CustomOptionMessage getDefaultInstance() {
      return defaultInstance;
    }

    public CustomOptionMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CustomOptionMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              foo_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              bar_ = bs;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              me.lyh.protobuf.generic.proto2.Schemas.STATE value = me.lyh.protobuf.generic.proto2.Schemas.STATE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                state_ = value;
              }
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              fooBar_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_CustomOptionMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_CustomOptionMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage.class, me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<CustomOptionMessage> PARSER =
        new com.google.protobuf.AbstractParser<CustomOptionMessage>() {
      public CustomOptionMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CustomOptionMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CustomOptionMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FOO_FIELD_NUMBER = 1;
    private int foo_;
    /**
     * <code>optional int32 foo = 1;</code>
     */
    public boolean hasFoo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 foo = 1;</code>
     */
    public int getFoo() {
      return foo_;
    }

    public static final int BAR_FIELD_NUMBER = 2;
    private java.lang.Object bar_;
    /**
     * <code>optional string bar = 2;</code>
     */
    public boolean hasBar() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string bar = 2;</code>
     */
    public java.lang.String getBar() {
      java.lang.Object ref = bar_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          bar_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string bar = 2;</code>
     */
    public com.google.protobuf.ByteString
        getBarBytes() {
      java.lang.Object ref = bar_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bar_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATE_FIELD_NUMBER = 3;
    private me.lyh.protobuf.generic.proto2.Schemas.STATE state_;
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.STATE state = 3;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.STATE state = 3;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.STATE getState() {
      return state_;
    }

    public static final int FOOBAR_FIELD_NUMBER = 4;
    private java.lang.Object fooBar_;
    /**
     * <code>optional string fooBar = 4;</code>
     */
    public boolean hasFooBar() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string fooBar = 4;</code>
     */
    public java.lang.String getFooBar() {
      java.lang.Object ref = fooBar_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fooBar_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fooBar = 4;</code>
     */
    public com.google.protobuf.ByteString
        getFooBarBytes() {
      java.lang.Object ref = fooBar_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fooBar_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      foo_ = 0;
      bar_ = "";
      state_ = me.lyh.protobuf.generic.proto2.Schemas.STATE.START;
      fooBar_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, foo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getBarBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, state_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getFooBarBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, foo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getBarBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, state_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getFooBarBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code me.lyh.protobuf.generic.proto2.CustomOptionMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:me.lyh.protobuf.generic.proto2.CustomOptionMessage)
        me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_CustomOptionMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_CustomOptionMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage.class, me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage.Builder.class);
      }

      // Construct using me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        foo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bar_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        state_ = me.lyh.protobuf.generic.proto2.Schemas.STATE.START;
        bitField0_ = (bitField0_ & ~0x00000004);
        fooBar_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_CustomOptionMessage_descriptor;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage getDefaultInstanceForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage.getDefaultInstance();
      }

      public me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage build() {
        me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage buildPartial() {
        me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage result = new me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.foo_ = foo_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bar_ = bar_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fooBar_ = fooBar_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage) {
          return mergeFrom((me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage other) {
        if (other == me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage.getDefaultInstance()) return this;
        if (other.hasFoo()) {
          setFoo(other.getFoo());
        }
        if (other.hasBar()) {
          bitField0_ |= 0x00000002;
          bar_ = other.bar_;
          onChanged();
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasFooBar()) {
          bitField0_ |= 0x00000008;
          fooBar_ = other.fooBar_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.lyh.protobuf.generic.proto2.Schemas.CustomOptionMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int foo_ ;
      /**
       * <code>optional int32 foo = 1;</code>
       */
      public boolean hasFoo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 foo = 1;</code>
       */
      public int getFoo() {
        return foo_;
      }
      /**
       * <code>optional int32 foo = 1;</code>
       */
      public Builder setFoo(int value) {
        bitField0_ |= 0x00000001;
        foo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 foo = 1;</code>
       */
      public Builder clearFoo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        foo_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object bar_ = "";
      /**
       * <code>optional string bar = 2;</code>
       */
      public boolean hasBar() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string bar = 2;</code>
       */
      public java.lang.String getBar() {
        java.lang.Object ref = bar_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            bar_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string bar = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBarBytes() {
        java.lang.Object ref = bar_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bar_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string bar = 2;</code>
       */
      public Builder setBar(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        bar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string bar = 2;</code>
       */
      public Builder clearBar() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bar_ = getDefaultInstance().getBar();
        onChanged();
        return this;
      }
      /**
       * <code>optional string bar = 2;</code>
       */
      public Builder setBarBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        bar_ = value;
        onChanged();
        return this;
      }

      private me.lyh.protobuf.generic.proto2.Schemas.STATE state_ = me.lyh.protobuf.generic.proto2.Schemas.STATE.START;
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.STATE state = 3;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.STATE state = 3;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.STATE getState() {
        return state_;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.STATE state = 3;</code>
       */
      public Builder setState(me.lyh.protobuf.generic.proto2.Schemas.STATE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.STATE state = 3;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000004);
        state_ = me.lyh.protobuf.generic.proto2.Schemas.STATE.START;
        onChanged();
        return this;
      }

      private java.lang.Object fooBar_ = "";
      /**
       * <code>optional string fooBar = 4;</code>
       */
      public boolean hasFooBar() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string fooBar = 4;</code>
       */
      public java.lang.String getFooBar() {
        java.lang.Object ref = fooBar_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fooBar_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fooBar = 4;</code>
       */
      public com.google.protobuf.ByteString
          getFooBarBytes() {
        java.lang.Object ref = fooBar_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fooBar_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fooBar = 4;</code>
       */
      public Builder setFooBar(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        fooBar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fooBar = 4;</code>
       */
      public Builder clearFooBar() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fooBar_ = getDefaultInstance().getFooBar();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fooBar = 4;</code>
       */
      public Builder setFooBarBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        fooBar_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:me.lyh.protobuf.generic.proto2.CustomOptionMessage)
    }

    static {
      defaultInstance = new CustomOptionMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:me.lyh.protobuf.generic.proto2.CustomOptionMessage)
  }

  public interface CustomDefaultsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:me.lyh.protobuf.generic.proto2.CustomDefaults)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional double double_field = 1 [default = 101];</code>
     */
    boolean hasDoubleField();
    /**
     * <code>optional double double_field = 1 [default = 101];</code>
     */
    double getDoubleField();

    /**
     * <code>optional float float_field = 2 [default = 102];</code>
     */
    boolean hasFloatField();
    /**
     * <code>optional float float_field = 2 [default = 102];</code>
     */
    float getFloatField();

    /**
     * <code>optional int32 int32_field = 3 [default = 103];</code>
     */
    boolean hasInt32Field();
    /**
     * <code>optional int32 int32_field = 3 [default = 103];</code>
     */
    int getInt32Field();

    /**
     * <code>optional int64 int64_field = 4 [default = 104];</code>
     */
    boolean hasInt64Field();
    /**
     * <code>optional int64 int64_field = 4 [default = 104];</code>
     */
    long getInt64Field();

    /**
     * <code>optional uint32 uint32_field = 5 [default = 105];</code>
     */
    boolean hasUint32Field();
    /**
     * <code>optional uint32 uint32_field = 5 [default = 105];</code>
     */
    int getUint32Field();

    /**
     * <code>optional uint64 uint64_field = 6 [default = 106];</code>
     */
    boolean hasUint64Field();
    /**
     * <code>optional uint64 uint64_field = 6 [default = 106];</code>
     */
    long getUint64Field();

    /**
     * <code>optional sint32 sint32_field = 7 [default = 107];</code>
     */
    boolean hasSint32Field();
    /**
     * <code>optional sint32 sint32_field = 7 [default = 107];</code>
     */
    int getSint32Field();

    /**
     * <code>optional sint64 sint64_field = 8 [default = 108];</code>
     */
    boolean hasSint64Field();
    /**
     * <code>optional sint64 sint64_field = 8 [default = 108];</code>
     */
    long getSint64Field();

    /**
     * <code>optional fixed32 fixed32_field = 9 [default = 109];</code>
     */
    boolean hasFixed32Field();
    /**
     * <code>optional fixed32 fixed32_field = 9 [default = 109];</code>
     */
    int getFixed32Field();

    /**
     * <code>optional fixed64 fixed64_field = 10 [default = 110];</code>
     */
    boolean hasFixed64Field();
    /**
     * <code>optional fixed64 fixed64_field = 10 [default = 110];</code>
     */
    long getFixed64Field();

    /**
     * <code>optional sfixed32 sfixed32_field = 11 [default = 111];</code>
     */
    boolean hasSfixed32Field();
    /**
     * <code>optional sfixed32 sfixed32_field = 11 [default = 111];</code>
     */
    int getSfixed32Field();

    /**
     * <code>optional sfixed64 sfixed64_field = 12 [default = 112];</code>
     */
    boolean hasSfixed64Field();
    /**
     * <code>optional sfixed64 sfixed64_field = 12 [default = 112];</code>
     */
    long getSfixed64Field();

    /**
     * <code>optional bool bool_field = 13 [default = true];</code>
     */
    boolean hasBoolField();
    /**
     * <code>optional bool bool_field = 13 [default = true];</code>
     */
    boolean getBoolField();

    /**
     * <code>optional string string_field = 14 [default = "hello"];</code>
     */
    boolean hasStringField();
    /**
     * <code>optional string string_field = 14 [default = "hello"];</code>
     */
    java.lang.String getStringField();
    /**
     * <code>optional string string_field = 14 [default = "hello"];</code>
     */
    com.google.protobuf.ByteString
        getStringFieldBytes();

    /**
     * <code>optional bytes bytes_field = 15 [default = "world"];</code>
     */
    boolean hasBytesField();
    /**
     * <code>optional bytes bytes_field = 15 [default = "world"];</code>
     */
    com.google.protobuf.ByteString getBytesField();

    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16 [default = GREEN];</code>
     */
    boolean hasColorField();
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16 [default = GREEN];</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Color getColorField();
  }
  /**
   * Protobuf type {@code me.lyh.protobuf.generic.proto2.CustomDefaults}
   */
  public static final class CustomDefaults extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:me.lyh.protobuf.generic.proto2.CustomDefaults)
      CustomDefaultsOrBuilder {
    // Use CustomDefaults.newBuilder() to construct.
    private CustomDefaults(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CustomDefaults(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CustomDefaults defaultInstance;
    public static CustomDefaults getDefaultInstance() {
      return defaultInstance;
    }

    public CustomDefaults getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CustomDefaults(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              doubleField_ = input.readDouble();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              floatField_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              int32Field_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              int64Field_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              uint32Field_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              uint64Field_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sint32Field_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              sint64Field_ = input.readSInt64();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              fixed32Field_ = input.readFixed32();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              fixed64Field_ = input.readFixed64();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              sfixed32Field_ = input.readSFixed32();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              sfixed64Field_ = input.readSFixed64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              boolField_ = input.readBool();
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00002000;
              stringField_ = bs;
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              bytesField_ = input.readBytes();
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              me.lyh.protobuf.generic.proto2.Schemas.Color value = me.lyh.protobuf.generic.proto2.Schemas.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                bitField0_ |= 0x00008000;
                colorField_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_CustomDefaults_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_CustomDefaults_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults.class, me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults.Builder.class);
    }

    public static com.google.protobuf.Parser<CustomDefaults> PARSER =
        new com.google.protobuf.AbstractParser<CustomDefaults>() {
      public CustomDefaults parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CustomDefaults(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CustomDefaults> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DOUBLE_FIELD_FIELD_NUMBER = 1;
    private double doubleField_;
    /**
     * <code>optional double double_field = 1 [default = 101];</code>
     */
    public boolean hasDoubleField() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional double double_field = 1 [default = 101];</code>
     */
    public double getDoubleField() {
      return doubleField_;
    }

    public static final int FLOAT_FIELD_FIELD_NUMBER = 2;
    private float floatField_;
    /**
     * <code>optional float float_field = 2 [default = 102];</code>
     */
    public boolean hasFloatField() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float float_field = 2 [default = 102];</code>
     */
    public float getFloatField() {
      return floatField_;
    }

    public static final int INT32_FIELD_FIELD_NUMBER = 3;
    private int int32Field_;
    /**
     * <code>optional int32 int32_field = 3 [default = 103];</code>
     */
    public boolean hasInt32Field() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 int32_field = 3 [default = 103];</code>
     */
    public int getInt32Field() {
      return int32Field_;
    }

    public static final int INT64_FIELD_FIELD_NUMBER = 4;
    private long int64Field_;
    /**
     * <code>optional int64 int64_field = 4 [default = 104];</code>
     */
    public boolean hasInt64Field() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 int64_field = 4 [default = 104];</code>
     */
    public long getInt64Field() {
      return int64Field_;
    }

    public static final int UINT32_FIELD_FIELD_NUMBER = 5;
    private int uint32Field_;
    /**
     * <code>optional uint32 uint32_field = 5 [default = 105];</code>
     */
    public boolean hasUint32Field() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 uint32_field = 5 [default = 105];</code>
     */
    public int getUint32Field() {
      return uint32Field_;
    }

    public static final int UINT64_FIELD_FIELD_NUMBER = 6;
    private long uint64Field_;
    /**
     * <code>optional uint64 uint64_field = 6 [default = 106];</code>
     */
    public boolean hasUint64Field() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 uint64_field = 6 [default = 106];</code>
     */
    public long getUint64Field() {
      return uint64Field_;
    }

    public static final int SINT32_FIELD_FIELD_NUMBER = 7;
    private int sint32Field_;
    /**
     * <code>optional sint32 sint32_field = 7 [default = 107];</code>
     */
    public boolean hasSint32Field() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 sint32_field = 7 [default = 107];</code>
     */
    public int getSint32Field() {
      return sint32Field_;
    }

    public static final int SINT64_FIELD_FIELD_NUMBER = 8;
    private long sint64Field_;
    /**
     * <code>optional sint64 sint64_field = 8 [default = 108];</code>
     */
    public boolean hasSint64Field() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint64 sint64_field = 8 [default = 108];</code>
     */
    public long getSint64Field() {
      return sint64Field_;
    }

    public static final int FIXED32_FIELD_FIELD_NUMBER = 9;
    private int fixed32Field_;
    /**
     * <code>optional fixed32 fixed32_field = 9 [default = 109];</code>
     */
    public boolean hasFixed32Field() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional fixed32 fixed32_field = 9 [default = 109];</code>
     */
    public int getFixed32Field() {
      return fixed32Field_;
    }

    public static final int FIXED64_FIELD_FIELD_NUMBER = 10;
    private long fixed64Field_;
    /**
     * <code>optional fixed64 fixed64_field = 10 [default = 110];</code>
     */
    public boolean hasFixed64Field() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional fixed64 fixed64_field = 10 [default = 110];</code>
     */
    public long getFixed64Field() {
      return fixed64Field_;
    }

    public static final int SFIXED32_FIELD_FIELD_NUMBER = 11;
    private int sfixed32Field_;
    /**
     * <code>optional sfixed32 sfixed32_field = 11 [default = 111];</code>
     */
    public boolean hasSfixed32Field() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional sfixed32 sfixed32_field = 11 [default = 111];</code>
     */
    public int getSfixed32Field() {
      return sfixed32Field_;
    }

    public static final int SFIXED64_FIELD_FIELD_NUMBER = 12;
    private long sfixed64Field_;
    /**
     * <code>optional sfixed64 sfixed64_field = 12 [default = 112];</code>
     */
    public boolean hasSfixed64Field() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional sfixed64 sfixed64_field = 12 [default = 112];</code>
     */
    public long getSfixed64Field() {
      return sfixed64Field_;
    }

    public static final int BOOL_FIELD_FIELD_NUMBER = 13;
    private boolean boolField_;
    /**
     * <code>optional bool bool_field = 13 [default = true];</code>
     */
    public boolean hasBoolField() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool bool_field = 13 [default = true];</code>
     */
    public boolean getBoolField() {
      return boolField_;
    }

    public static final int STRING_FIELD_FIELD_NUMBER = 14;
    private java.lang.Object stringField_;
    /**
     * <code>optional string string_field = 14 [default = "hello"];</code>
     */
    public boolean hasStringField() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string string_field = 14 [default = "hello"];</code>
     */
    public java.lang.String getStringField() {
      java.lang.Object ref = stringField_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stringField_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string string_field = 14 [default = "hello"];</code>
     */
    public com.google.protobuf.ByteString
        getStringFieldBytes() {
      java.lang.Object ref = stringField_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringField_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BYTES_FIELD_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString bytesField_;
    /**
     * <code>optional bytes bytes_field = 15 [default = "world"];</code>
     */
    public boolean hasBytesField() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional bytes bytes_field = 15 [default = "world"];</code>
     */
    public com.google.protobuf.ByteString getBytesField() {
      return bytesField_;
    }

    public static final int COLOR_FIELD_FIELD_NUMBER = 16;
    private me.lyh.protobuf.generic.proto2.Schemas.Color colorField_;
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16 [default = GREEN];</code>
     */
    public boolean hasColorField() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16 [default = GREEN];</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField() {
      return colorField_;
    }

    private void initFields() {
      doubleField_ = 101D;
      floatField_ = 102F;
      int32Field_ = 103;
      int64Field_ = 104L;
      uint32Field_ = 105;
      uint64Field_ = 106L;
      sint32Field_ = 107;
      sint64Field_ = 108L;
      fixed32Field_ = 109;
      fixed64Field_ = 110L;
      sfixed32Field_ = 111;
      sfixed64Field_ = 112L;
      boolField_ = true;
      stringField_ = "hello";
      bytesField_ = com.google.protobuf.Internal.bytesDefaultValue("world");
      colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.GREEN;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, doubleField_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, floatField_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, int32Field_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, int64Field_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, uint32Field_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, uint64Field_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(7, sint32Field_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt64(8, sint64Field_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFixed32(9, fixed32Field_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFixed64(10, fixed64Field_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeSFixed32(11, sfixed32Field_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeSFixed64(12, sfixed64Field_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(13, boolField_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getStringFieldBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, bytesField_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeEnum(16, colorField_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, doubleField_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, floatField_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int32Field_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, int64Field_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, uint32Field_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, uint64Field_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, sint32Field_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(8, sint64Field_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, fixed32Field_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, fixed64Field_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(11, sfixed32Field_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(12, sfixed64Field_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, boolField_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getStringFieldBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, bytesField_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, colorField_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code me.lyh.protobuf.generic.proto2.CustomDefaults}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:me.lyh.protobuf.generic.proto2.CustomDefaults)
        me.lyh.protobuf.generic.proto2.Schemas.CustomDefaultsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_CustomDefaults_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_CustomDefaults_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults.class, me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults.Builder.class);
      }

      // Construct using me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        doubleField_ = 101D;
        bitField0_ = (bitField0_ & ~0x00000001);
        floatField_ = 102F;
        bitField0_ = (bitField0_ & ~0x00000002);
        int32Field_ = 103;
        bitField0_ = (bitField0_ & ~0x00000004);
        int64Field_ = 104L;
        bitField0_ = (bitField0_ & ~0x00000008);
        uint32Field_ = 105;
        bitField0_ = (bitField0_ & ~0x00000010);
        uint64Field_ = 106L;
        bitField0_ = (bitField0_ & ~0x00000020);
        sint32Field_ = 107;
        bitField0_ = (bitField0_ & ~0x00000040);
        sint64Field_ = 108L;
        bitField0_ = (bitField0_ & ~0x00000080);
        fixed32Field_ = 109;
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed64Field_ = 110L;
        bitField0_ = (bitField0_ & ~0x00000200);
        sfixed32Field_ = 111;
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed64Field_ = 112L;
        bitField0_ = (bitField0_ & ~0x00000800);
        boolField_ = true;
        bitField0_ = (bitField0_ & ~0x00001000);
        stringField_ = "hello";
        bitField0_ = (bitField0_ & ~0x00002000);
        bytesField_ = com.google.protobuf.Internal.bytesDefaultValue("world");
        bitField0_ = (bitField0_ & ~0x00004000);
        colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.GREEN;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_CustomDefaults_descriptor;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults getDefaultInstanceForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults.getDefaultInstance();
      }

      public me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults build() {
        me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults buildPartial() {
        me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults result = new me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.doubleField_ = doubleField_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.floatField_ = floatField_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.int32Field_ = int32Field_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.int64Field_ = int64Field_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.uint32Field_ = uint32Field_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.uint64Field_ = uint64Field_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sint32Field_ = sint32Field_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.sint64Field_ = sint64Field_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fixed32Field_ = fixed32Field_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.fixed64Field_ = fixed64Field_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.sfixed32Field_ = sfixed32Field_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.sfixed64Field_ = sfixed64Field_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.boolField_ = boolField_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.stringField_ = stringField_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.bytesField_ = bytesField_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.colorField_ = colorField_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults) {
          return mergeFrom((me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults other) {
        if (other == me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults.getDefaultInstance()) return this;
        if (other.hasDoubleField()) {
          setDoubleField(other.getDoubleField());
        }
        if (other.hasFloatField()) {
          setFloatField(other.getFloatField());
        }
        if (other.hasInt32Field()) {
          setInt32Field(other.getInt32Field());
        }
        if (other.hasInt64Field()) {
          setInt64Field(other.getInt64Field());
        }
        if (other.hasUint32Field()) {
          setUint32Field(other.getUint32Field());
        }
        if (other.hasUint64Field()) {
          setUint64Field(other.getUint64Field());
        }
        if (other.hasSint32Field()) {
          setSint32Field(other.getSint32Field());
        }
        if (other.hasSint64Field()) {
          setSint64Field(other.getSint64Field());
        }
        if (other.hasFixed32Field()) {
          setFixed32Field(other.getFixed32Field());
        }
        if (other.hasFixed64Field()) {
          setFixed64Field(other.getFixed64Field());
        }
        if (other.hasSfixed32Field()) {
          setSfixed32Field(other.getSfixed32Field());
        }
        if (other.hasSfixed64Field()) {
          setSfixed64Field(other.getSfixed64Field());
        }
        if (other.hasBoolField()) {
          setBoolField(other.getBoolField());
        }
        if (other.hasStringField()) {
          bitField0_ |= 0x00002000;
          stringField_ = other.stringField_;
          onChanged();
        }
        if (other.hasBytesField()) {
          setBytesField(other.getBytesField());
        }
        if (other.hasColorField()) {
          setColorField(other.getColorField());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.lyh.protobuf.generic.proto2.Schemas.CustomDefaults) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double doubleField_ = 101D;
      /**
       * <code>optional double double_field = 1 [default = 101];</code>
       */
      public boolean hasDoubleField() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional double double_field = 1 [default = 101];</code>
       */
      public double getDoubleField() {
        return doubleField_;
      }
      /**
       * <code>optional double double_field = 1 [default = 101];</code>
       */
      public Builder setDoubleField(double value) {
        bitField0_ |= 0x00000001;
        doubleField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double double_field = 1 [default = 101];</code>
       */
      public Builder clearDoubleField() {
        bitField0_ = (bitField0_ & ~0x00000001);
        doubleField_ = 101D;
        onChanged();
        return this;
      }

      private float floatField_ = 102F;
      /**
       * <code>optional float float_field = 2 [default = 102];</code>
       */
      public boolean hasFloatField() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float float_field = 2 [default = 102];</code>
       */
      public float getFloatField() {
        return floatField_;
      }
      /**
       * <code>optional float float_field = 2 [default = 102];</code>
       */
      public Builder setFloatField(float value) {
        bitField0_ |= 0x00000002;
        floatField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float float_field = 2 [default = 102];</code>
       */
      public Builder clearFloatField() {
        bitField0_ = (bitField0_ & ~0x00000002);
        floatField_ = 102F;
        onChanged();
        return this;
      }

      private int int32Field_ = 103;
      /**
       * <code>optional int32 int32_field = 3 [default = 103];</code>
       */
      public boolean hasInt32Field() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 int32_field = 3 [default = 103];</code>
       */
      public int getInt32Field() {
        return int32Field_;
      }
      /**
       * <code>optional int32 int32_field = 3 [default = 103];</code>
       */
      public Builder setInt32Field(int value) {
        bitField0_ |= 0x00000004;
        int32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 int32_field = 3 [default = 103];</code>
       */
      public Builder clearInt32Field() {
        bitField0_ = (bitField0_ & ~0x00000004);
        int32Field_ = 103;
        onChanged();
        return this;
      }

      private long int64Field_ = 104L;
      /**
       * <code>optional int64 int64_field = 4 [default = 104];</code>
       */
      public boolean hasInt64Field() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 int64_field = 4 [default = 104];</code>
       */
      public long getInt64Field() {
        return int64Field_;
      }
      /**
       * <code>optional int64 int64_field = 4 [default = 104];</code>
       */
      public Builder setInt64Field(long value) {
        bitField0_ |= 0x00000008;
        int64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 int64_field = 4 [default = 104];</code>
       */
      public Builder clearInt64Field() {
        bitField0_ = (bitField0_ & ~0x00000008);
        int64Field_ = 104L;
        onChanged();
        return this;
      }

      private int uint32Field_ = 105;
      /**
       * <code>optional uint32 uint32_field = 5 [default = 105];</code>
       */
      public boolean hasUint32Field() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 uint32_field = 5 [default = 105];</code>
       */
      public int getUint32Field() {
        return uint32Field_;
      }
      /**
       * <code>optional uint32 uint32_field = 5 [default = 105];</code>
       */
      public Builder setUint32Field(int value) {
        bitField0_ |= 0x00000010;
        uint32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 uint32_field = 5 [default = 105];</code>
       */
      public Builder clearUint32Field() {
        bitField0_ = (bitField0_ & ~0x00000010);
        uint32Field_ = 105;
        onChanged();
        return this;
      }

      private long uint64Field_ = 106L;
      /**
       * <code>optional uint64 uint64_field = 6 [default = 106];</code>
       */
      public boolean hasUint64Field() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 uint64_field = 6 [default = 106];</code>
       */
      public long getUint64Field() {
        return uint64Field_;
      }
      /**
       * <code>optional uint64 uint64_field = 6 [default = 106];</code>
       */
      public Builder setUint64Field(long value) {
        bitField0_ |= 0x00000020;
        uint64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 uint64_field = 6 [default = 106];</code>
       */
      public Builder clearUint64Field() {
        bitField0_ = (bitField0_ & ~0x00000020);
        uint64Field_ = 106L;
        onChanged();
        return this;
      }

      private int sint32Field_ = 107;
      /**
       * <code>optional sint32 sint32_field = 7 [default = 107];</code>
       */
      public boolean hasSint32Field() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint32 sint32_field = 7 [default = 107];</code>
       */
      public int getSint32Field() {
        return sint32Field_;
      }
      /**
       * <code>optional sint32 sint32_field = 7 [default = 107];</code>
       */
      public Builder setSint32Field(int value) {
        bitField0_ |= 0x00000040;
        sint32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 sint32_field = 7 [default = 107];</code>
       */
      public Builder clearSint32Field() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sint32Field_ = 107;
        onChanged();
        return this;
      }

      private long sint64Field_ = 108L;
      /**
       * <code>optional sint64 sint64_field = 8 [default = 108];</code>
       */
      public boolean hasSint64Field() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint64 sint64_field = 8 [default = 108];</code>
       */
      public long getSint64Field() {
        return sint64Field_;
      }
      /**
       * <code>optional sint64 sint64_field = 8 [default = 108];</code>
       */
      public Builder setSint64Field(long value) {
        bitField0_ |= 0x00000080;
        sint64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 sint64_field = 8 [default = 108];</code>
       */
      public Builder clearSint64Field() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sint64Field_ = 108L;
        onChanged();
        return this;
      }

      private int fixed32Field_ = 109;
      /**
       * <code>optional fixed32 fixed32_field = 9 [default = 109];</code>
       */
      public boolean hasFixed32Field() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional fixed32 fixed32_field = 9 [default = 109];</code>
       */
      public int getFixed32Field() {
        return fixed32Field_;
      }
      /**
       * <code>optional fixed32 fixed32_field = 9 [default = 109];</code>
       */
      public Builder setFixed32Field(int value) {
        bitField0_ |= 0x00000100;
        fixed32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 fixed32_field = 9 [default = 109];</code>
       */
      public Builder clearFixed32Field() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed32Field_ = 109;
        onChanged();
        return this;
      }

      private long fixed64Field_ = 110L;
      /**
       * <code>optional fixed64 fixed64_field = 10 [default = 110];</code>
       */
      public boolean hasFixed64Field() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional fixed64 fixed64_field = 10 [default = 110];</code>
       */
      public long getFixed64Field() {
        return fixed64Field_;
      }
      /**
       * <code>optional fixed64 fixed64_field = 10 [default = 110];</code>
       */
      public Builder setFixed64Field(long value) {
        bitField0_ |= 0x00000200;
        fixed64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 fixed64_field = 10 [default = 110];</code>
       */
      public Builder clearFixed64Field() {
        bitField0_ = (bitField0_ & ~0x00000200);
        fixed64Field_ = 110L;
        onChanged();
        return this;
      }

      private int sfixed32Field_ = 111;
      /**
       * <code>optional sfixed32 sfixed32_field = 11 [default = 111];</code>
       */
      public boolean hasSfixed32Field() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional sfixed32 sfixed32_field = 11 [default = 111];</code>
       */
      public int getSfixed32Field() {
        return sfixed32Field_;
      }
      /**
       * <code>optional sfixed32 sfixed32_field = 11 [default = 111];</code>
       */
      public Builder setSfixed32Field(int value) {
        bitField0_ |= 0x00000400;
        sfixed32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed32 sfixed32_field = 11 [default = 111];</code>
       */
      public Builder clearSfixed32Field() {
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed32Field_ = 111;
        onChanged();
        return this;
      }

      private long sfixed64Field_ = 112L;
      /**
       * <code>optional sfixed64 sfixed64_field = 12 [default = 112];</code>
       */
      public boolean hasSfixed64Field() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional sfixed64 sfixed64_field = 12 [default = 112];</code>
       */
      public long getSfixed64Field() {
        return sfixed64Field_;
      }
      /**
       * <code>optional sfixed64 sfixed64_field = 12 [default = 112];</code>
       */
      public Builder setSfixed64Field(long value) {
        bitField0_ |= 0x00000800;
        sfixed64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed64 sfixed64_field = 12 [default = 112];</code>
       */
      public Builder clearSfixed64Field() {
        bitField0_ = (bitField0_ & ~0x00000800);
        sfixed64Field_ = 112L;
        onChanged();
        return this;
      }

      private boolean boolField_ = true;
      /**
       * <code>optional bool bool_field = 13 [default = true];</code>
       */
      public boolean hasBoolField() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool bool_field = 13 [default = true];</code>
       */
      public boolean getBoolField() {
        return boolField_;
      }
      /**
       * <code>optional bool bool_field = 13 [default = true];</code>
       */
      public Builder setBoolField(boolean value) {
        bitField0_ |= 0x00001000;
        boolField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool bool_field = 13 [default = true];</code>
       */
      public Builder clearBoolField() {
        bitField0_ = (bitField0_ & ~0x00001000);
        boolField_ = true;
        onChanged();
        return this;
      }

      private java.lang.Object stringField_ = "hello";
      /**
       * <code>optional string string_field = 14 [default = "hello"];</code>
       */
      public boolean hasStringField() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string string_field = 14 [default = "hello"];</code>
       */
      public java.lang.String getStringField() {
        java.lang.Object ref = stringField_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringField_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string string_field = 14 [default = "hello"];</code>
       */
      public com.google.protobuf.ByteString
          getStringFieldBytes() {
        java.lang.Object ref = stringField_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringField_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string string_field = 14 [default = "hello"];</code>
       */
      public Builder setStringField(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        stringField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_field = 14 [default = "hello"];</code>
       */
      public Builder clearStringField() {
        bitField0_ = (bitField0_ & ~0x00002000);
        stringField_ = getDefaultInstance().getStringField();
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_field = 14 [default = "hello"];</code>
       */
      public Builder setStringFieldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        stringField_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesField_ = com.google.protobuf.Internal.bytesDefaultValue("world");
      /**
       * <code>optional bytes bytes_field = 15 [default = "world"];</code>
       */
      public boolean hasBytesField() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bytes bytes_field = 15 [default = "world"];</code>
       */
      public com.google.protobuf.ByteString getBytesField() {
        return bytesField_;
      }
      /**
       * <code>optional bytes bytes_field = 15 [default = "world"];</code>
       */
      public Builder setBytesField(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        bytesField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes bytes_field = 15 [default = "world"];</code>
       */
      public Builder clearBytesField() {
        bitField0_ = (bitField0_ & ~0x00004000);
        bytesField_ = getDefaultInstance().getBytesField();
        onChanged();
        return this;
      }

      private me.lyh.protobuf.generic.proto2.Schemas.Color colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.GREEN;
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16 [default = GREEN];</code>
       */
      public boolean hasColorField() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16 [default = GREEN];</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Color getColorField() {
        return colorField_;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16 [default = GREEN];</code>
       */
      public Builder setColorField(me.lyh.protobuf.generic.proto2.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00008000;
        colorField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Color color_field = 16 [default = GREEN];</code>
       */
      public Builder clearColorField() {
        bitField0_ = (bitField0_ & ~0x00008000);
        colorField_ = me.lyh.protobuf.generic.proto2.Schemas.Color.GREEN;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:me.lyh.protobuf.generic.proto2.CustomDefaults)
    }

    static {
      defaultInstance = new CustomDefaults(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:me.lyh.protobuf.generic.proto2.CustomDefaults)
  }

  public interface Recursive1OrBuilder extends
      // @@protoc_insertion_point(interface_extends:me.lyh.protobuf.generic.proto2.Recursive1)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 foo = 1;</code>
     */
    boolean hasFoo();
    /**
     * <code>optional int32 foo = 1;</code>
     */
    int getFoo();

    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
     */
    boolean hasBar();
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Recursive1 getBar();
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Recursive1OrBuilder getBarOrBuilder();
  }
  /**
   * Protobuf type {@code me.lyh.protobuf.generic.proto2.Recursive1}
   */
  public static final class Recursive1 extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:me.lyh.protobuf.generic.proto2.Recursive1)
      Recursive1OrBuilder {
    // Use Recursive1.newBuilder() to construct.
    private Recursive1(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Recursive1(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Recursive1 defaultInstance;
    public static Recursive1 getDefaultInstance() {
      return defaultInstance;
    }

    public Recursive1 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Recursive1(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              foo_ = input.readInt32();
              break;
            }
            case 18: {
              me.lyh.protobuf.generic.proto2.Schemas.Recursive1.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = bar_.toBuilder();
              }
              bar_ = input.readMessage(me.lyh.protobuf.generic.proto2.Schemas.Recursive1.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bar_);
                bar_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Recursive1_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Recursive1_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.lyh.protobuf.generic.proto2.Schemas.Recursive1.class, me.lyh.protobuf.generic.proto2.Schemas.Recursive1.Builder.class);
    }

    public static com.google.protobuf.Parser<Recursive1> PARSER =
        new com.google.protobuf.AbstractParser<Recursive1>() {
      public Recursive1 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Recursive1(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Recursive1> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FOO_FIELD_NUMBER = 1;
    private int foo_;
    /**
     * <code>optional int32 foo = 1;</code>
     */
    public boolean hasFoo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 foo = 1;</code>
     */
    public int getFoo() {
      return foo_;
    }

    public static final int BAR_FIELD_NUMBER = 2;
    private me.lyh.protobuf.generic.proto2.Schemas.Recursive1 bar_;
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
     */
    public boolean hasBar() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Recursive1 getBar() {
      return bar_;
    }
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Recursive1OrBuilder getBarOrBuilder() {
      return bar_;
    }

    private void initFields() {
      foo_ = 0;
      bar_ = me.lyh.protobuf.generic.proto2.Schemas.Recursive1.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, foo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, bar_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, foo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, bar_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive1 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive1 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive1 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive1 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive1 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive1 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive1 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive1 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive1 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive1 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.lyh.protobuf.generic.proto2.Schemas.Recursive1 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code me.lyh.protobuf.generic.proto2.Recursive1}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:me.lyh.protobuf.generic.proto2.Recursive1)
        me.lyh.protobuf.generic.proto2.Schemas.Recursive1OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Recursive1_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Recursive1_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.lyh.protobuf.generic.proto2.Schemas.Recursive1.class, me.lyh.protobuf.generic.proto2.Schemas.Recursive1.Builder.class);
      }

      // Construct using me.lyh.protobuf.generic.proto2.Schemas.Recursive1.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBarFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        foo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (barBuilder_ == null) {
          bar_ = me.lyh.protobuf.generic.proto2.Schemas.Recursive1.getDefaultInstance();
        } else {
          barBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Recursive1_descriptor;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Recursive1 getDefaultInstanceForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.Recursive1.getDefaultInstance();
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Recursive1 build() {
        me.lyh.protobuf.generic.proto2.Schemas.Recursive1 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Recursive1 buildPartial() {
        me.lyh.protobuf.generic.proto2.Schemas.Recursive1 result = new me.lyh.protobuf.generic.proto2.Schemas.Recursive1(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.foo_ = foo_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (barBuilder_ == null) {
          result.bar_ = bar_;
        } else {
          result.bar_ = barBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.lyh.protobuf.generic.proto2.Schemas.Recursive1) {
          return mergeFrom((me.lyh.protobuf.generic.proto2.Schemas.Recursive1)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.lyh.protobuf.generic.proto2.Schemas.Recursive1 other) {
        if (other == me.lyh.protobuf.generic.proto2.Schemas.Recursive1.getDefaultInstance()) return this;
        if (other.hasFoo()) {
          setFoo(other.getFoo());
        }
        if (other.hasBar()) {
          mergeBar(other.getBar());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.lyh.protobuf.generic.proto2.Schemas.Recursive1 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.lyh.protobuf.generic.proto2.Schemas.Recursive1) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int foo_ ;
      /**
       * <code>optional int32 foo = 1;</code>
       */
      public boolean hasFoo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 foo = 1;</code>
       */
      public int getFoo() {
        return foo_;
      }
      /**
       * <code>optional int32 foo = 1;</code>
       */
      public Builder setFoo(int value) {
        bitField0_ |= 0x00000001;
        foo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 foo = 1;</code>
       */
      public Builder clearFoo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        foo_ = 0;
        onChanged();
        return this;
      }

      private me.lyh.protobuf.generic.proto2.Schemas.Recursive1 bar_ = me.lyh.protobuf.generic.proto2.Schemas.Recursive1.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          me.lyh.protobuf.generic.proto2.Schemas.Recursive1, me.lyh.protobuf.generic.proto2.Schemas.Recursive1.Builder, me.lyh.protobuf.generic.proto2.Schemas.Recursive1OrBuilder> barBuilder_;
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public boolean hasBar() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Recursive1 getBar() {
        if (barBuilder_ == null) {
          return bar_;
        } else {
          return barBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public Builder setBar(me.lyh.protobuf.generic.proto2.Schemas.Recursive1 value) {
        if (barBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bar_ = value;
          onChanged();
        } else {
          barBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public Builder setBar(
          me.lyh.protobuf.generic.proto2.Schemas.Recursive1.Builder builderForValue) {
        if (barBuilder_ == null) {
          bar_ = builderForValue.build();
          onChanged();
        } else {
          barBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public Builder mergeBar(me.lyh.protobuf.generic.proto2.Schemas.Recursive1 value) {
        if (barBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              bar_ != me.lyh.protobuf.generic.proto2.Schemas.Recursive1.getDefaultInstance()) {
            bar_ =
              me.lyh.protobuf.generic.proto2.Schemas.Recursive1.newBuilder(bar_).mergeFrom(value).buildPartial();
          } else {
            bar_ = value;
          }
          onChanged();
        } else {
          barBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public Builder clearBar() {
        if (barBuilder_ == null) {
          bar_ = me.lyh.protobuf.generic.proto2.Schemas.Recursive1.getDefaultInstance();
          onChanged();
        } else {
          barBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Recursive1.Builder getBarBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBarFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Recursive1OrBuilder getBarOrBuilder() {
        if (barBuilder_ != null) {
          return barBuilder_.getMessageOrBuilder();
        } else {
          return bar_;
        }
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          me.lyh.protobuf.generic.proto2.Schemas.Recursive1, me.lyh.protobuf.generic.proto2.Schemas.Recursive1.Builder, me.lyh.protobuf.generic.proto2.Schemas.Recursive1OrBuilder> 
          getBarFieldBuilder() {
        if (barBuilder_ == null) {
          barBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              me.lyh.protobuf.generic.proto2.Schemas.Recursive1, me.lyh.protobuf.generic.proto2.Schemas.Recursive1.Builder, me.lyh.protobuf.generic.proto2.Schemas.Recursive1OrBuilder>(
                  getBar(),
                  getParentForChildren(),
                  isClean());
          bar_ = null;
        }
        return barBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:me.lyh.protobuf.generic.proto2.Recursive1)
    }

    static {
      defaultInstance = new Recursive1(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:me.lyh.protobuf.generic.proto2.Recursive1)
  }

  public interface Recursive2OrBuilder extends
      // @@protoc_insertion_point(interface_extends:me.lyh.protobuf.generic.proto2.Recursive2)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 foo = 1;</code>
     */
    boolean hasFoo();
    /**
     * <code>optional int32 foo = 1;</code>
     */
    int getFoo();

    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
     */
    boolean hasBar();
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Recursive1 getBar();
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Recursive1OrBuilder getBarOrBuilder();

    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
     */
    boolean hasBaz();
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Recursive2 getBaz();
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
     */
    me.lyh.protobuf.generic.proto2.Schemas.Recursive2OrBuilder getBazOrBuilder();
  }
  /**
   * Protobuf type {@code me.lyh.protobuf.generic.proto2.Recursive2}
   */
  public static final class Recursive2 extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:me.lyh.protobuf.generic.proto2.Recursive2)
      Recursive2OrBuilder {
    // Use Recursive2.newBuilder() to construct.
    private Recursive2(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Recursive2(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Recursive2 defaultInstance;
    public static Recursive2 getDefaultInstance() {
      return defaultInstance;
    }

    public Recursive2 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Recursive2(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              foo_ = input.readInt32();
              break;
            }
            case 18: {
              me.lyh.protobuf.generic.proto2.Schemas.Recursive1.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = bar_.toBuilder();
              }
              bar_ = input.readMessage(me.lyh.protobuf.generic.proto2.Schemas.Recursive1.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bar_);
                bar_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              me.lyh.protobuf.generic.proto2.Schemas.Recursive2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = baz_.toBuilder();
              }
              baz_ = input.readMessage(me.lyh.protobuf.generic.proto2.Schemas.Recursive2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baz_);
                baz_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Recursive2_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Recursive2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.lyh.protobuf.generic.proto2.Schemas.Recursive2.class, me.lyh.protobuf.generic.proto2.Schemas.Recursive2.Builder.class);
    }

    public static com.google.protobuf.Parser<Recursive2> PARSER =
        new com.google.protobuf.AbstractParser<Recursive2>() {
      public Recursive2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Recursive2(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Recursive2> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FOO_FIELD_NUMBER = 1;
    private int foo_;
    /**
     * <code>optional int32 foo = 1;</code>
     */
    public boolean hasFoo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 foo = 1;</code>
     */
    public int getFoo() {
      return foo_;
    }

    public static final int BAR_FIELD_NUMBER = 2;
    private me.lyh.protobuf.generic.proto2.Schemas.Recursive1 bar_;
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
     */
    public boolean hasBar() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Recursive1 getBar() {
      return bar_;
    }
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Recursive1OrBuilder getBarOrBuilder() {
      return bar_;
    }

    public static final int BAZ_FIELD_NUMBER = 3;
    private me.lyh.protobuf.generic.proto2.Schemas.Recursive2 baz_;
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
     */
    public boolean hasBaz() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Recursive2 getBaz() {
      return baz_;
    }
    /**
     * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
     */
    public me.lyh.protobuf.generic.proto2.Schemas.Recursive2OrBuilder getBazOrBuilder() {
      return baz_;
    }

    private void initFields() {
      foo_ = 0;
      bar_ = me.lyh.protobuf.generic.proto2.Schemas.Recursive1.getDefaultInstance();
      baz_ = me.lyh.protobuf.generic.proto2.Schemas.Recursive2.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, foo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, bar_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, baz_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, foo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, bar_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, baz_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.lyh.protobuf.generic.proto2.Schemas.Recursive2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.lyh.protobuf.generic.proto2.Schemas.Recursive2 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code me.lyh.protobuf.generic.proto2.Recursive2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:me.lyh.protobuf.generic.proto2.Recursive2)
        me.lyh.protobuf.generic.proto2.Schemas.Recursive2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Recursive2_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Recursive2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.lyh.protobuf.generic.proto2.Schemas.Recursive2.class, me.lyh.protobuf.generic.proto2.Schemas.Recursive2.Builder.class);
      }

      // Construct using me.lyh.protobuf.generic.proto2.Schemas.Recursive2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBarFieldBuilder();
          getBazFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        foo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (barBuilder_ == null) {
          bar_ = me.lyh.protobuf.generic.proto2.Schemas.Recursive1.getDefaultInstance();
        } else {
          barBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (bazBuilder_ == null) {
          baz_ = me.lyh.protobuf.generic.proto2.Schemas.Recursive2.getDefaultInstance();
        } else {
          bazBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.internal_static_me_lyh_protobuf_generic_proto2_Recursive2_descriptor;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Recursive2 getDefaultInstanceForType() {
        return me.lyh.protobuf.generic.proto2.Schemas.Recursive2.getDefaultInstance();
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Recursive2 build() {
        me.lyh.protobuf.generic.proto2.Schemas.Recursive2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.lyh.protobuf.generic.proto2.Schemas.Recursive2 buildPartial() {
        me.lyh.protobuf.generic.proto2.Schemas.Recursive2 result = new me.lyh.protobuf.generic.proto2.Schemas.Recursive2(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.foo_ = foo_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (barBuilder_ == null) {
          result.bar_ = bar_;
        } else {
          result.bar_ = barBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (bazBuilder_ == null) {
          result.baz_ = baz_;
        } else {
          result.baz_ = bazBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.lyh.protobuf.generic.proto2.Schemas.Recursive2) {
          return mergeFrom((me.lyh.protobuf.generic.proto2.Schemas.Recursive2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.lyh.protobuf.generic.proto2.Schemas.Recursive2 other) {
        if (other == me.lyh.protobuf.generic.proto2.Schemas.Recursive2.getDefaultInstance()) return this;
        if (other.hasFoo()) {
          setFoo(other.getFoo());
        }
        if (other.hasBar()) {
          mergeBar(other.getBar());
        }
        if (other.hasBaz()) {
          mergeBaz(other.getBaz());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.lyh.protobuf.generic.proto2.Schemas.Recursive2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.lyh.protobuf.generic.proto2.Schemas.Recursive2) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int foo_ ;
      /**
       * <code>optional int32 foo = 1;</code>
       */
      public boolean hasFoo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 foo = 1;</code>
       */
      public int getFoo() {
        return foo_;
      }
      /**
       * <code>optional int32 foo = 1;</code>
       */
      public Builder setFoo(int value) {
        bitField0_ |= 0x00000001;
        foo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 foo = 1;</code>
       */
      public Builder clearFoo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        foo_ = 0;
        onChanged();
        return this;
      }

      private me.lyh.protobuf.generic.proto2.Schemas.Recursive1 bar_ = me.lyh.protobuf.generic.proto2.Schemas.Recursive1.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          me.lyh.protobuf.generic.proto2.Schemas.Recursive1, me.lyh.protobuf.generic.proto2.Schemas.Recursive1.Builder, me.lyh.protobuf.generic.proto2.Schemas.Recursive1OrBuilder> barBuilder_;
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public boolean hasBar() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Recursive1 getBar() {
        if (barBuilder_ == null) {
          return bar_;
        } else {
          return barBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public Builder setBar(me.lyh.protobuf.generic.proto2.Schemas.Recursive1 value) {
        if (barBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bar_ = value;
          onChanged();
        } else {
          barBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public Builder setBar(
          me.lyh.protobuf.generic.proto2.Schemas.Recursive1.Builder builderForValue) {
        if (barBuilder_ == null) {
          bar_ = builderForValue.build();
          onChanged();
        } else {
          barBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public Builder mergeBar(me.lyh.protobuf.generic.proto2.Schemas.Recursive1 value) {
        if (barBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              bar_ != me.lyh.protobuf.generic.proto2.Schemas.Recursive1.getDefaultInstance()) {
            bar_ =
              me.lyh.protobuf.generic.proto2.Schemas.Recursive1.newBuilder(bar_).mergeFrom(value).buildPartial();
          } else {
            bar_ = value;
          }
          onChanged();
        } else {
          barBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public Builder clearBar() {
        if (barBuilder_ == null) {
          bar_ = me.lyh.protobuf.generic.proto2.Schemas.Recursive1.getDefaultInstance();
          onChanged();
        } else {
          barBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Recursive1.Builder getBarBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBarFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Recursive1OrBuilder getBarOrBuilder() {
        if (barBuilder_ != null) {
          return barBuilder_.getMessageOrBuilder();
        } else {
          return bar_;
        }
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive1 bar = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          me.lyh.protobuf.generic.proto2.Schemas.Recursive1, me.lyh.protobuf.generic.proto2.Schemas.Recursive1.Builder, me.lyh.protobuf.generic.proto2.Schemas.Recursive1OrBuilder> 
          getBarFieldBuilder() {
        if (barBuilder_ == null) {
          barBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              me.lyh.protobuf.generic.proto2.Schemas.Recursive1, me.lyh.protobuf.generic.proto2.Schemas.Recursive1.Builder, me.lyh.protobuf.generic.proto2.Schemas.Recursive1OrBuilder>(
                  getBar(),
                  getParentForChildren(),
                  isClean());
          bar_ = null;
        }
        return barBuilder_;
      }

      private me.lyh.protobuf.generic.proto2.Schemas.Recursive2 baz_ = me.lyh.protobuf.generic.proto2.Schemas.Recursive2.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          me.lyh.protobuf.generic.proto2.Schemas.Recursive2, me.lyh.protobuf.generic.proto2.Schemas.Recursive2.Builder, me.lyh.protobuf.generic.proto2.Schemas.Recursive2OrBuilder> bazBuilder_;
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
       */
      public boolean hasBaz() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Recursive2 getBaz() {
        if (bazBuilder_ == null) {
          return baz_;
        } else {
          return bazBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
       */
      public Builder setBaz(me.lyh.protobuf.generic.proto2.Schemas.Recursive2 value) {
        if (bazBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baz_ = value;
          onChanged();
        } else {
          bazBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
       */
      public Builder setBaz(
          me.lyh.protobuf.generic.proto2.Schemas.Recursive2.Builder builderForValue) {
        if (bazBuilder_ == null) {
          baz_ = builderForValue.build();
          onChanged();
        } else {
          bazBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
       */
      public Builder mergeBaz(me.lyh.protobuf.generic.proto2.Schemas.Recursive2 value) {
        if (bazBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              baz_ != me.lyh.protobuf.generic.proto2.Schemas.Recursive2.getDefaultInstance()) {
            baz_ =
              me.lyh.protobuf.generic.proto2.Schemas.Recursive2.newBuilder(baz_).mergeFrom(value).buildPartial();
          } else {
            baz_ = value;
          }
          onChanged();
        } else {
          bazBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
       */
      public Builder clearBaz() {
        if (bazBuilder_ == null) {
          baz_ = me.lyh.protobuf.generic.proto2.Schemas.Recursive2.getDefaultInstance();
          onChanged();
        } else {
          bazBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Recursive2.Builder getBazBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getBazFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
       */
      public me.lyh.protobuf.generic.proto2.Schemas.Recursive2OrBuilder getBazOrBuilder() {
        if (bazBuilder_ != null) {
          return bazBuilder_.getMessageOrBuilder();
        } else {
          return baz_;
        }
      }
      /**
       * <code>optional .me.lyh.protobuf.generic.proto2.Recursive2 baz = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          me.lyh.protobuf.generic.proto2.Schemas.Recursive2, me.lyh.protobuf.generic.proto2.Schemas.Recursive2.Builder, me.lyh.protobuf.generic.proto2.Schemas.Recursive2OrBuilder> 
          getBazFieldBuilder() {
        if (bazBuilder_ == null) {
          bazBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              me.lyh.protobuf.generic.proto2.Schemas.Recursive2, me.lyh.protobuf.generic.proto2.Schemas.Recursive2.Builder, me.lyh.protobuf.generic.proto2.Schemas.Recursive2OrBuilder>(
                  getBaz(),
                  getParentForChildren(),
                  isClean());
          baz_ = null;
        }
        return bazBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:me.lyh.protobuf.generic.proto2.Recursive2)
    }

    static {
      defaultInstance = new Recursive2(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:me.lyh.protobuf.generic.proto2.Recursive2)
  }

  public static final int MY_MESSAGE_OPTION_FIELD_NUMBER = 50001;
  /**
   * <code>extend .google.protobuf.MessageOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.MessageOptions,
      java.lang.Integer> myMessageOption = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Integer.class,
        null);
  public static final int MY_FIELD_OPTION_FIELD_NUMBER = 50002;
  /**
   * <code>extend .google.protobuf.FieldOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.FieldOptions,
      java.lang.Float> myFieldOption = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Float.class,
        null);
  public static final int MY_FIELD_OPTION_STR_FIELD_NUMBER = 50003;
  /**
   * <code>extend .google.protobuf.FieldOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.FieldOptions,
      java.lang.String> myFieldOptionStr = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.String.class,
        null);
  public static final int MY_ENUM_OPTION_FIELD_NUMBER = 50004;
  /**
   * <code>extend .google.protobuf.EnumOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.EnumOptions,
      java.lang.Boolean> myEnumOption = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Boolean.class,
        null);
  public static final int MY_ENUM_VALUE_OPTION_FIELD_NUMBER = 50005;
  /**
   * <code>extend .google.protobuf.EnumValueOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.EnumValueOptions,
      java.lang.String> myEnumValueOption = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.String.class,
        null);
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_me_lyh_protobuf_generic_proto2_Required_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_me_lyh_protobuf_generic_proto2_Required_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_me_lyh_protobuf_generic_proto2_Optional_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_me_lyh_protobuf_generic_proto2_Optional_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_me_lyh_protobuf_generic_proto2_Repeated_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_me_lyh_protobuf_generic_proto2_Repeated_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_me_lyh_protobuf_generic_proto2_RepeatedPacked_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_me_lyh_protobuf_generic_proto2_RepeatedPacked_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_me_lyh_protobuf_generic_proto2_RepeatedUnpacked_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_me_lyh_protobuf_generic_proto2_RepeatedUnpacked_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_me_lyh_protobuf_generic_proto2_OneOf_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_me_lyh_protobuf_generic_proto2_OneOf_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_me_lyh_protobuf_generic_proto2_Mixed_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_me_lyh_protobuf_generic_proto2_Mixed_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_me_lyh_protobuf_generic_proto2_Nested_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_me_lyh_protobuf_generic_proto2_Nested_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_me_lyh_protobuf_generic_proto2_CustomOptionMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_me_lyh_protobuf_generic_proto2_CustomOptionMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_me_lyh_protobuf_generic_proto2_CustomDefaults_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_me_lyh_protobuf_generic_proto2_CustomDefaults_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_me_lyh_protobuf_generic_proto2_Recursive1_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_me_lyh_protobuf_generic_proto2_Recursive1_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_me_lyh_protobuf_generic_proto2_Recursive2_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_me_lyh_protobuf_generic_proto2_Recursive2_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*proto2test/src/test/protobuf/schemas.p" +
      "roto\022\036me.lyh.protobuf.generic.proto2\032 go" +
      "ogle/protobuf/descriptor.proto\"\220\003\n\010Requi" +
      "red\022\024\n\014double_field\030\001 \002(\001\022\023\n\013float_field" +
      "\030\002 \002(\002\022\023\n\013int32_field\030\003 \002(\005\022\023\n\013int64_fie" +
      "ld\030\004 \002(\003\022\024\n\014uint32_field\030\005 \002(\r\022\024\n\014uint64" +
      "_field\030\006 \002(\004\022\024\n\014sint32_field\030\007 \002(\021\022\024\n\014si" +
      "nt64_field\030\010 \002(\022\022\025\n\rfixed32_field\030\t \002(\007\022" +
      "\025\n\rfixed64_field\030\n \002(\006\022\026\n\016sfixed32_field" +
      "\030\013 \002(\017\022\026\n\016sfixed64_field\030\014 \002(\020\022\022\n\nbool_f",
      "ield\030\r \002(\010\022\024\n\014string_field\030\016 \002(\t\022\023\n\013byte" +
      "s_field\030\017 \002(\014\022:\n\013color_field\030\020 \002(\0162%.me." +
      "lyh.protobuf.generic.proto2.Color\"\220\003\n\010Op" +
      "tional\022\024\n\014double_field\030\001 \001(\001\022\023\n\013float_fi" +
      "eld\030\002 \001(\002\022\023\n\013int32_field\030\003 \001(\005\022\023\n\013int64_" +
      "field\030\004 \001(\003\022\024\n\014uint32_field\030\005 \001(\r\022\024\n\014uin" +
      "t64_field\030\006 \001(\004\022\024\n\014sint32_field\030\007 \001(\021\022\024\n" +
      "\014sint64_field\030\010 \001(\022\022\025\n\rfixed32_field\030\t \001" +
      "(\007\022\025\n\rfixed64_field\030\n \001(\006\022\026\n\016sfixed32_fi" +
      "eld\030\013 \001(\017\022\026\n\016sfixed64_field\030\014 \001(\020\022\022\n\nboo",
      "l_field\030\r \001(\010\022\024\n\014string_field\030\016 \001(\t\022\023\n\013b" +
      "ytes_field\030\017 \001(\014\022:\n\013color_field\030\020 \001(\0162%." +
      "me.lyh.protobuf.generic.proto2.Color\"\220\003\n" +
      "\010Repeated\022\024\n\014double_field\030\001 \003(\001\022\023\n\013float" +
      "_field\030\002 \003(\002\022\023\n\013int32_field\030\003 \003(\005\022\023\n\013int" +
      "64_field\030\004 \003(\003\022\024\n\014uint32_field\030\005 \003(\r\022\024\n\014" +
      "uint64_field\030\006 \003(\004\022\024\n\014sint32_field\030\007 \003(\021" +
      "\022\024\n\014sint64_field\030\010 \003(\022\022\025\n\rfixed32_field\030" +
      "\t \003(\007\022\025\n\rfixed64_field\030\n \003(\006\022\026\n\016sfixed32" +
      "_field\030\013 \003(\017\022\026\n\016sfixed64_field\030\014 \003(\020\022\022\n\n",
      "bool_field\030\r \003(\010\022\024\n\014string_field\030\016 \003(\t\022\023" +
      "\n\013bytes_field\030\017 \003(\014\022:\n\013color_field\030\020 \003(\016" +
      "2%.me.lyh.protobuf.generic.proto2.Color\"" +
      "\243\003\n\016RepeatedPacked\022\030\n\014double_field\030\001 \003(\001" +
      "B\002\020\001\022\027\n\013float_field\030\002 \003(\002B\002\020\001\022\027\n\013int32_f" +
      "ield\030\003 \003(\005B\002\020\001\022\027\n\013int64_field\030\004 \003(\003B\002\020\001\022" +
      "\030\n\014uint32_field\030\005 \003(\rB\002\020\001\022\030\n\014uint64_fiel" +
      "d\030\006 \003(\004B\002\020\001\022\030\n\014sint32_field\030\007 \003(\021B\002\020\001\022\030\n" +
      "\014sint64_field\030\010 \003(\022B\002\020\001\022\031\n\rfixed32_field" +
      "\030\t \003(\007B\002\020\001\022\031\n\rfixed64_field\030\n \003(\006B\002\020\001\022\032\n",
      "\016sfixed32_field\030\013 \003(\017B\002\020\001\022\032\n\016sfixed64_fi" +
      "eld\030\014 \003(\020B\002\020\001\022\026\n\nbool_field\030\r \003(\010B\002\020\001\022>\n" +
      "\013color_field\030\020 \003(\0162%.me.lyh.protobuf.gen" +
      "eric.proto2.ColorB\002\020\001\"\245\003\n\020RepeatedUnpack" +
      "ed\022\030\n\014double_field\030\001 \003(\001B\002\020\000\022\027\n\013float_fi" +
      "eld\030\002 \003(\002B\002\020\000\022\027\n\013int32_field\030\003 \003(\005B\002\020\000\022\027" +
      "\n\013int64_field\030\004 \003(\003B\002\020\000\022\030\n\014uint32_field\030" +
      "\005 \003(\rB\002\020\000\022\030\n\014uint64_field\030\006 \003(\004B\002\020\000\022\030\n\014s" +
      "int32_field\030\007 \003(\021B\002\020\000\022\030\n\014sint64_field\030\010 " +
      "\003(\022B\002\020\000\022\031\n\rfixed32_field\030\t \003(\007B\002\020\000\022\031\n\rfi",
      "xed64_field\030\n \003(\006B\002\020\000\022\032\n\016sfixed32_field\030" +
      "\013 \003(\017B\002\020\000\022\032\n\016sfixed64_field\030\014 \003(\020B\002\020\000\022\026\n" +
      "\nbool_field\030\r \003(\010B\002\020\000\022>\n\013color_field\030\020 \003" +
      "(\0162%.me.lyh.protobuf.generic.proto2.Colo" +
      "rB\002\020\000\"\266\003\n\005OneOf\022\026\n\014double_field\030\001 \001(\001H\000\022" +
      "\025\n\013float_field\030\002 \001(\002H\000\022\025\n\013int32_field\030\003 " +
      "\001(\005H\000\022\025\n\013int64_field\030\004 \001(\003H\000\022\026\n\014uint32_f" +
      "ield\030\005 \001(\rH\000\022\026\n\014uint64_field\030\006 \001(\004H\000\022\026\n\014" +
      "sint32_field\030\007 \001(\021H\000\022\026\n\014sint64_field\030\010 \001" +
      "(\022H\000\022\027\n\rfixed32_field\030\t \001(\007H\000\022\027\n\rfixed64",
      "_field\030\n \001(\006H\000\022\030\n\016sfixed32_field\030\013 \001(\017H\000" +
      "\022\030\n\016sfixed64_field\030\014 \001(\020H\000\022\024\n\nbool_field" +
      "\030\r \001(\010H\000\022\026\n\014string_field\030\016 \001(\tH\000\022\025\n\013byte" +
      "s_field\030\017 \001(\014H\000\022<\n\013color_field\030\020 \001(\0162%.m" +
      "e.lyh.protobuf.generic.proto2.ColorH\000B\007\n" +
      "\005field\"\216\003\n\005Mixed\022\024\n\014double_field\030\001 \002(\001\022\024" +
      "\n\014string_field\030\002 \002(\t\022\023\n\013bytes_field\030\003 \002(" +
      "\014\022:\n\013color_field\030\004 \002(\0162%.me.lyh.protobuf" +
      ".generic.proto2.Color\022\026\n\016double_field_o\030" +
      "\005 \001(\001\022\026\n\016string_field_o\030\006 \001(\t\022\025\n\rbytes_f",
      "ield_o\030\007 \001(\014\022<\n\rcolor_field_o\030\010 \001(\0162%.me" +
      ".lyh.protobuf.generic.proto2.Color\022\026\n\016do" +
      "uble_field_r\030\t \003(\001\022\026\n\016string_field_r\030\n \003" +
      "(\t\022\025\n\rbytes_field_r\030\013 \003(\014\022<\n\rcolor_field" +
      "_r\030\014 \003(\0162%.me.lyh.protobuf.generic.proto" +
      "2.Color\"\276\003\n\006Nested\022\024\n\014double_field\030\001 \002(\001" +
      "\022\026\n\016double_field_o\030\002 \001(\001\022\026\n\016double_field" +
      "_r\030\003 \003(\001\022:\n\013color_field\030\004 \002(\0162%.me.lyh.p" +
      "rotobuf.generic.proto2.Color\022<\n\rcolor_fi" +
      "eld_o\030\005 \001(\0162%.me.lyh.protobuf.generic.pr",
      "oto2.Color\022<\n\rcolor_field_r\030\006 \003(\0162%.me.l" +
      "yh.protobuf.generic.proto2.Color\022:\n\013mixe" +
      "d_field\030\007 \002(\0132%.me.lyh.protobuf.generic." +
      "proto2.Mixed\022<\n\rmixed_field_o\030\010 \001(\0132%.me" +
      ".lyh.protobuf.generic.proto2.Mixed\022<\n\rmi" +
      "xed_field_r\030\t \003(\0132%.me.lyh.protobuf.gene" +
      "ric.proto2.Mixed\"\276\001\n\023CustomOptionMessage" +
      "\022\024\n\003foo\030\001 \001(\005B\007\225\265\030\000\000\220@\022+\n\003bar\030\002 \001(\tB\036\232\265\030" +
      "\032String field custom option\022M\n\005state\030\003 \001" +
      "(\0162%.me.lyh.protobuf.generic.proto2.STAT",
      "EB\027\232\265\030\023Field custom option\022\016\n\006fooBar\030\004 \001" +
      "(\t:\005\210\265\030\322\t\"\355\003\n\016CustomDefaults\022\031\n\014double_f" +
      "ield\030\001 \001(\001:\003101\022\030\n\013float_field\030\002 \001(\002:\00310" +
      "2\022\030\n\013int32_field\030\003 \001(\005:\003103\022\030\n\013int64_fie" +
      "ld\030\004 \001(\003:\003104\022\031\n\014uint32_field\030\005 \001(\r:\003105" +
      "\022\031\n\014uint64_field\030\006 \001(\004:\003106\022\031\n\014sint32_fi" +
      "eld\030\007 \001(\021:\003107\022\031\n\014sint64_field\030\010 \001(\022:\00310" +
      "8\022\032\n\rfixed32_field\030\t \001(\007:\003109\022\032\n\rfixed64" +
      "_field\030\n \001(\006:\003110\022\033\n\016sfixed32_field\030\013 \001(" +
      "\017:\003111\022\033\n\016sfixed64_field\030\014 \001(\020:\003112\022\030\n\nb",
      "ool_field\030\r \001(\010:\004true\022\033\n\014string_field\030\016 " +
      "\001(\t:\005hello\022\032\n\013bytes_field\030\017 \001(\014:\005world\022A" +
      "\n\013color_field\030\020 \001(\0162%.me.lyh.protobuf.ge" +
      "neric.proto2.Color:\005GREEN\"R\n\nRecursive1\022" +
      "\013\n\003foo\030\001 \001(\005\0227\n\003bar\030\002 \001(\0132*.me.lyh.proto" +
      "buf.generic.proto2.Recursive1\"\213\001\n\nRecurs" +
      "ive2\022\013\n\003foo\030\001 \001(\005\0227\n\003bar\030\002 \001(\0132*.me.lyh." +
      "protobuf.generic.proto2.Recursive1\0227\n\003ba" +
      "z\030\003 \001(\0132*.me.lyh.protobuf.generic.proto2" +
      ".Recursive2*(\n\005Color\022\t\n\005BLACK\020\000\022\t\n\005WHITE",
      "\020\001\022\t\n\005GREEN\020\002*@\n\005STATE\022\'\n\005START\020\001\032\034\252\265\030\030C" +
      "ustom enum value option\022\010\n\004STOP\020\002\032\004\240\265\030\001:" +
      "<\n\021my_message_option\022\037.google.protobuf.M" +
      "essageOptions\030\321\206\003 \001(\005:8\n\017my_field_option" +
      "\022\035.google.protobuf.FieldOptions\030\322\206\003 \001(\002:" +
      "<\n\023my_field_option_str\022\035.google.protobuf" +
      ".FieldOptions\030\323\206\003 \001(\t:6\n\016my_enum_option\022" +
      "\034.google.protobuf.EnumOptions\030\324\206\003 \001(\010:A\n" +
      "\024my_enum_value_option\022!.google.protobuf." +
      "EnumValueOptions\030\325\206\003 \001(\tB\002H\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.DescriptorProtos.getDescriptor(),
        }, assigner);
    internal_static_me_lyh_protobuf_generic_proto2_Required_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_me_lyh_protobuf_generic_proto2_Required_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_me_lyh_protobuf_generic_proto2_Required_descriptor,
        new java.lang.String[] { "DoubleField", "FloatField", "Int32Field", "Int64Field", "Uint32Field", "Uint64Field", "Sint32Field", "Sint64Field", "Fixed32Field", "Fixed64Field", "Sfixed32Field", "Sfixed64Field", "BoolField", "StringField", "BytesField", "ColorField", });
    internal_static_me_lyh_protobuf_generic_proto2_Optional_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_me_lyh_protobuf_generic_proto2_Optional_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_me_lyh_protobuf_generic_proto2_Optional_descriptor,
        new java.lang.String[] { "DoubleField", "FloatField", "Int32Field", "Int64Field", "Uint32Field", "Uint64Field", "Sint32Field", "Sint64Field", "Fixed32Field", "Fixed64Field", "Sfixed32Field", "Sfixed64Field", "BoolField", "StringField", "BytesField", "ColorField", });
    internal_static_me_lyh_protobuf_generic_proto2_Repeated_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_me_lyh_protobuf_generic_proto2_Repeated_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_me_lyh_protobuf_generic_proto2_Repeated_descriptor,
        new java.lang.String[] { "DoubleField", "FloatField", "Int32Field", "Int64Field", "Uint32Field", "Uint64Field", "Sint32Field", "Sint64Field", "Fixed32Field", "Fixed64Field", "Sfixed32Field", "Sfixed64Field", "BoolField", "StringField", "BytesField", "ColorField", });
    internal_static_me_lyh_protobuf_generic_proto2_RepeatedPacked_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_me_lyh_protobuf_generic_proto2_RepeatedPacked_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_me_lyh_protobuf_generic_proto2_RepeatedPacked_descriptor,
        new java.lang.String[] { "DoubleField", "FloatField", "Int32Field", "Int64Field", "Uint32Field", "Uint64Field", "Sint32Field", "Sint64Field", "Fixed32Field", "Fixed64Field", "Sfixed32Field", "Sfixed64Field", "BoolField", "ColorField", });
    internal_static_me_lyh_protobuf_generic_proto2_RepeatedUnpacked_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_me_lyh_protobuf_generic_proto2_RepeatedUnpacked_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_me_lyh_protobuf_generic_proto2_RepeatedUnpacked_descriptor,
        new java.lang.String[] { "DoubleField", "FloatField", "Int32Field", "Int64Field", "Uint32Field", "Uint64Field", "Sint32Field", "Sint64Field", "Fixed32Field", "Fixed64Field", "Sfixed32Field", "Sfixed64Field", "BoolField", "ColorField", });
    internal_static_me_lyh_protobuf_generic_proto2_OneOf_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_me_lyh_protobuf_generic_proto2_OneOf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_me_lyh_protobuf_generic_proto2_OneOf_descriptor,
        new java.lang.String[] { "DoubleField", "FloatField", "Int32Field", "Int64Field", "Uint32Field", "Uint64Field", "Sint32Field", "Sint64Field", "Fixed32Field", "Fixed64Field", "Sfixed32Field", "Sfixed64Field", "BoolField", "StringField", "BytesField", "ColorField", "Field", });
    internal_static_me_lyh_protobuf_generic_proto2_Mixed_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_me_lyh_protobuf_generic_proto2_Mixed_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_me_lyh_protobuf_generic_proto2_Mixed_descriptor,
        new java.lang.String[] { "DoubleField", "StringField", "BytesField", "ColorField", "DoubleFieldO", "StringFieldO", "BytesFieldO", "ColorFieldO", "DoubleFieldR", "StringFieldR", "BytesFieldR", "ColorFieldR", });
    internal_static_me_lyh_protobuf_generic_proto2_Nested_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_me_lyh_protobuf_generic_proto2_Nested_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_me_lyh_protobuf_generic_proto2_Nested_descriptor,
        new java.lang.String[] { "DoubleField", "DoubleFieldO", "DoubleFieldR", "ColorField", "ColorFieldO", "ColorFieldR", "MixedField", "MixedFieldO", "MixedFieldR", });
    internal_static_me_lyh_protobuf_generic_proto2_CustomOptionMessage_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_me_lyh_protobuf_generic_proto2_CustomOptionMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_me_lyh_protobuf_generic_proto2_CustomOptionMessage_descriptor,
        new java.lang.String[] { "Foo", "Bar", "State", "FooBar", });
    internal_static_me_lyh_protobuf_generic_proto2_CustomDefaults_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_me_lyh_protobuf_generic_proto2_CustomDefaults_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_me_lyh_protobuf_generic_proto2_CustomDefaults_descriptor,
        new java.lang.String[] { "DoubleField", "FloatField", "Int32Field", "Int64Field", "Uint32Field", "Uint64Field", "Sint32Field", "Sint64Field", "Fixed32Field", "Fixed64Field", "Sfixed32Field", "Sfixed64Field", "BoolField", "StringField", "BytesField", "ColorField", });
    internal_static_me_lyh_protobuf_generic_proto2_Recursive1_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_me_lyh_protobuf_generic_proto2_Recursive1_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_me_lyh_protobuf_generic_proto2_Recursive1_descriptor,
        new java.lang.String[] { "Foo", "Bar", });
    internal_static_me_lyh_protobuf_generic_proto2_Recursive2_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_me_lyh_protobuf_generic_proto2_Recursive2_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_me_lyh_protobuf_generic_proto2_Recursive2_descriptor,
        new java.lang.String[] { "Foo", "Bar", "Baz", });
    myMessageOption.internalInit(descriptor.getExtensions().get(0));
    myFieldOption.internalInit(descriptor.getExtensions().get(1));
    myFieldOptionStr.internalInit(descriptor.getExtensions().get(2));
    myEnumOption.internalInit(descriptor.getExtensions().get(3));
    myEnumValueOption.internalInit(descriptor.getExtensions().get(4));
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(me.lyh.protobuf.generic.proto2.Schemas.myFieldOption);
    registry.add(me.lyh.protobuf.generic.proto2.Schemas.myFieldOptionStr);
    registry.add(me.lyh.protobuf.generic.proto2.Schemas.myFieldOptionStr);
    registry.add(me.lyh.protobuf.generic.proto2.Schemas.myMessageOption);
    registry.add(me.lyh.protobuf.generic.proto2.Schemas.myEnumValueOption);
    registry.add(me.lyh.protobuf.generic.proto2.Schemas.myEnumOption);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.DescriptorProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
